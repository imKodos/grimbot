{"version":3,"file":"kendo.data.js","names":["__meta__","id","name","category","description","depends","features","$","undefined$1","map","extend","isPlainObject","isEmptyObject","isArray","Array","grep","ajax","each","noop","kendo","window","isFunction","Observable","Class","STRING","FUNCTION","CREATE","READ","UPDATE","DESTROY","CHANGE","SYNC","GET","ERROR","REQUESTSTART","PROGRESS","REQUESTEND","ITEMSLOADED","ITEMLOAD","crud","identity","o","getter","stringify","math","Math","push","join","pop","splice","shift","slice","unshift","toString","stableSort","support","dateRegExp","objectKeys","ObservableArray","init","array","type","that","this","ObservableObject","fn","call","length","wrapAll","_loadPromises","_loadedNodes","at","index","toJSON","serializeFunctions","idx","value","json","parent","source","target","wrap","object","Model","bind","e","isGroup","hasOwnProperty","trigger","field","node","items","action","promise","_loading","done","indexOf","collection","nodes","loading","result","arguments","apply","omitChangeEvent","sort","howMany","item","i","len","concat","children","unbind","forEach","callback","thisArg","context","reduce","reduceRight","filter","find","every","some","remove","empty","Symbol","iterator","prototype","LazyObservableArray","data","events","_events","_parent","eventHandler","prefix","key","event","_notifyChange","ownKeys","ignoreObjectKeys","keys","filteredObjectKeys","props","protoKeys","Object","getPrototypeOf","Date","isPrimitiveType","getOwnPropertyNames","prop","member","_handlers","getTime","charAt","uid","guid","shouldSerialize","f","get","_set","composite","paths","split","path","obj","set","setter","isSetPrevented","current","change","isObservableArray","isDataSource","DataSource","equal","x","y","xtype","parsers","number","toLowerCase","parseFloat","date","parseDate","boolean","string","default","defaultValues","defaults","_initializers","dirty","dirtyFields","idField","_defaultId","_parse","parse","fieldName","fields","getFieldByName","editable","accept","isNew","define","base","options","model","originalName","proto","functionFields","nullable","defaultValue","Comparer","selector","compare","a","b","localeCompare","create","dir","combine","comparers","StableComparer","asc","valueA","valueB","__position","desc","operators","quote","str","replace","JSON","textOp","impl","ignore","accentFoldingFiltering","toLocaleLowerCase","operator","op","exec","getMatchRegexp","pattern","rx","esc","ch","eq","neq","gt","gte","lt","lte","startswith","doesnotstartwith","endswith","doesnotendwith","contains","doesnotcontain","matches","substring","doesnotmatch","isempty","isnotempty","isnull","isnotnull","isnullorempty","isnotnullorempty","Query","normalizeSort","descriptor","descriptors","d","sortFields","sorts","sortObject","filterExpr","expression","expr","expressions","fieldFunctions","operatorFunctions","filters","match","ignoreCase","and","or","logic","operatorMap","equals","isequalto","equalto","ne","notequals","isnotequalto","notequalto","notequal","islessthan","lessthan","less","le","islessthanorequalto","lessthanequal","isgreaterthan","greaterthan","greater","isgreaterthanorequalto","greaterthanequal","ge","notsubstringof","normalizeOperator","normalizeFilter","compareDescriptor","f1","f2","normalizeDescriptor","fieldComparer","normalizeGroup","skipItemSorting","aggregates","normalizeGroupWithoutCompare","groupValueComparer","calculateAggregate","accumulator","state","aggr","functionName","aggregate","functions","accessor","compareFilters","expr1","expr2","filters1","filters2","toArray","range","count","skip","take","select","order","inPlace","orderBy","orderByDescending","comparer","compiled","predicate","Function","group","allData","groupPaging","groupAllData","hasSubgroups","itemCount","subgroupCount","groupBy","currentValue","sorted","_sortForGrouping","groupValue","_sortGroups","groups","sum","isNumber","average","max","isDate","min","val","isNaN","process","groupDescriptorsWithoutSort","total","customGroupSort","groupDescriptors","anyGroupDescriptorHasCompare","query","groupDescriptorsWithoutCompare","normalizedSort","filterCallback","flatGroups","groupDescriptor","virtual","LocalTransport","read","success","update","destroy","RemoteTransport","parameterMap","url","cache","Cache","add","submit","option","setup","error","parameters","operation","_store","clear","serializeRecords","getters","modelInstance","originalFieldNames","fieldNames","record","setters","convertRecords","convertGroup","wrapDataAccess","originalFunction","converter","wrapDataAccessBase","store","inmemory","DataReader","schema","modelBase","dataFunction","_dataAccessFunction","groupsFunction","serializeFunction","serialize","serializeGetters","fromName","from","_wrapDataAccessBase","errors","fillLastGroup","originalGroup","newGroup","currOriginal","currentNew","mergeGroups","dest","indexFunction","groupsLength","indexFn","groupIndex","itemIndex","flattenGroups","wrapGroupItems","eachGroupItems","func","replaceInRanges","ranges","observable","replaceInRange","replaceWithObservable","view","serverGrouping","viewIndex","indexOfPristineModel","indexOfModel","fieldNameFromModel","convertFilterDescriptorsField","convertDescriptorsField","_map","_prefetch","_data","_pristineData","_ranges","_view","_pristineTotal","_destroyed","_pageSize","pageSize","_page","page","_sort","_sortFields","_filter","_group","_aggregate","_total","_groupPaging","_groupsState","_shouldDetachObservableParents","transport","Transport","pushCreate","_pushCreate","pushUpdate","_pushUpdate","pushDestroy","_pushDestroy","offlineStorage","_storage","getItem","localStorage","setItem","reader","readers","_detachObservableParents","_observe","_online","serverSorting","serverPaging","serverFiltering","serverAggregates","batch","inPlaceSort","clone","online","sync","Deferred","resolve","offlineData","_isGrouped","_isServerGrouped","_isServerGroupPaged","_isGroupPaged","_push","_readData","_flatData","useRanges","getByUid","_getByUid","dataItems","_storeData","_addRange","_process","_observeView","flatView","insert","_createNewModel","_wrapInEmptyGroup","_insertModelInRange","pushInsert","rangeSpan","_getCurrentRangeSpan","pushed","autoSync","pristine","last","pristineData","_updatePristineForModel","_removeItems","removePristine","shouldRemovePristine","destroyed","found","_eachItem","_removePristineForModel","pushMove","_moveItems","moved","dataItem","hasGroups","_pushInDestroyed","removeModel","_removeModelFromRanges","created","updated","promises","_sendSubmit","_send","when","then","_accept","_syncEnd","_change","cancelChanges","_cancelModel","_changesCanceled","_markOfflineUpdatesAsDirty","__state__","hasChanges","models","response","serverGroup","_handleCustomErrors","values","_executeOnPristineForModel","deepExtend","_eachPristineItem","_pristineForModel","_modelCanceled","_submit","status","reject","deferred","_promise","method","converted","params","_params","_queueRequest","isPrevented","_dequeueRequest","args","_readAggregates","replaceSubset","_serverGroupsTotal","_aggregateResult","itemIds","_skip","endless","j","_changeHandler","updatePristine","end","start","timestamp","_timeStamp","outerStart","outerEnd","_sortRanges","_groupsFlat","_appendToGroupsFlat","_updateOuterRangesLength","_getGroupByUid","xhr","errorThrown","_requestInProgress","_pending","_shouldWrap","_updateTotalForAction","parseInt","handler","first","_calculateAggregates","_take","currentRangeStart","_clearEmptyGroups","_queryProcess","dataToAggregate","_setView","_setFilterTotal","_mergeState","_currentRangeStart","moreItemsCount","_hasExpandedSubGroups","_findGroupedRange","parents","itemsLength","groupCount","itemsToSkip","taken","_fetchGroupItems","_fetchingGroupItems","skipped","includeParents","excludeHeader","currentItems","_expandedSubGroupItemsCount","includeCurrentItems","subGroup","temp","endSpecified","groupItemsSkip","firstItem","lastItem","expandedSubGroupItemsCount","groupItemCount","getGroupItems","notFetched","floor","round","subgroups","_composeItemsFilter","findSubgroups","clearTimeout","_timeout","setTimeout","_groupItemsSuccessHandler","totalField","totalCount","_updateRangePristineData","countAdded","_currentRequestTimeStamp","_skipRequestsInProgress","indexOfCurrentGroup","g","currentGroup","dataLength","indexes","rangesLength","_containsSubGroup","_cloneGroup","subgroup","currentSubGroup","filterTotal","setDefaultValue","fetch","_query","next","totalPages","prev","_pageableQueryOptions","getGroupsFlat","groupsTotal","includeExpanded","_calculateGroupsTotal","itemsField","ignoreState","_groupsTotal","countGroupRange","_emptyAggregates","ceil","inRange","_findRange","lastRange","firstItemUid","enableRequestsInProgress","pageSkip","size","_processRangeData","_originalPageSkip","_originalSize","_adjustPageSkip","_groupRangeExists","_rangeExists","prefetch","skipIdx","takeIdx","startIndex","endIndex","rangeData","rangeEnd","processed","flatData","prevRangeEnd","remote","groupMapOptions","isGroupPaged","startField","endField","_mergeGroups","_getRangesMismatch","mismatch","prevGroup","eventData","_omitPrefetch","paging","sorting","filtering","_prefetchSuccessHandler","force","_multiplePrefetch","prevRange","_getPrevRange","_getNextRange","availableItemsCount","_removeModelFromRange","_updateRangesLength","mismatchFound","mismatchLength","lengthDifference","abs","rangeLength","dataSource","transportOptions","transports","schemas","logToConsole","table","fieldIndex","cells","cell","tbody","tBodies","rows","fieldCount","nodeName","innerHTML","inferTable","optgroup","firstField","secondField","parentNode","disabled","label","text","attributes","specified","inferSelect","Node","hasChildren","childrenField","childrenOptions","hasChildrenObject","_childrenOptions","_initChildren","_loaded","HierarchicalDataSource","_updateChildrenField","append","loaded","level","_childrenLoaded","load","one","_matchFilter","dataMethod","_attachBubbleHandlers","_hierarchicalFilter","_childrenLoading","isLoading","_markHierarchicalQuery","_updateHierarchicalFilter","_find","inferList","list","textChild","className","textField","urlField","spriteCssClassField","imageUrlField","elements","tagName","firstChild","attr","nodeType","nodeValue","trim","_dataSource","Buffer","viewSize","disablePrefetch","_prefetching","buffer","_reset","_syncWithDataSource","setViewSize","_recalculate","itemPresent","dataOffset","prefetchThreshold","midPageThreshold","nextMidRange","nextPageThreshold","nextFullRange","pullBackThreshold","offset","previousMidRange","previousFullRange","_goToRange","nextRange","syncDataSource","prefetchOffset","expanding","_expanding","_syncPending","_firstItemUid","BatchBuffer","batchSize","batchBuffer","endreached","prefetching","prefetched","reset","resize","jQuery"],"sources":["kendo.data.js"],"mappings":"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","sourcesContent":["import './kendo.core.js';\nimport './kendo.data.odata.js';\nimport './kendo.data.xml.js';\n\nvar __meta__ = {\n    id: \"data\",\n    name: \"Data source\",\n    category: \"framework\",\n    description: \"Powerful component for using local and remote data.Fully supports CRUD, Sorting, Paging, Filtering, Grouping, and Aggregates.\",\n    depends: [ \"core\" ],\n    features: [ {\n        id: \"data-odata\",\n        name: \"OData\",\n        description: \"Support for accessing Open Data Protocol (OData) services.\",\n        depends: [ \"data.odata\" ]\n    }, {\n        id: \"data-signalr\",\n        name: \"SignalR\",\n        description: \"Support for binding to SignalR hubs.\",\n        depends: [ \"data.signalr\" ]\n    }, {\n        id: \"data-XML\",\n        name: \"XML\",\n        description: \"Support for binding to XML.\",\n        depends: [ \"data.xml\" ]\n    }]\n};\n\n\n(function($, undefined$1) {\n    var extend = $.extend,\n        isPlainObject = $.isPlainObject,\n        isEmptyObject = $.isEmptyObject,\n        isArray = Array.isArray,\n        grep = $.grep,\n        ajax = $.ajax,\n        map,\n        each = $.each,\n        noop = $.noop,\n        kendo = window.kendo,\n        isFunction = kendo.isFunction,\n        Observable = kendo.Observable,\n        Class = kendo.Class,\n        STRING = \"string\",\n        FUNCTION = \"function\",\n        ASCENDING = \"asc\",\n        CREATE = \"create\",\n        READ = \"read\",\n        UPDATE = \"update\",\n        DESTROY = \"destroy\",\n        CHANGE = \"change\",\n        SYNC = \"sync\",\n        GET = \"get\",\n        ERROR = \"error\",\n        REQUESTSTART = \"requestStart\",\n        PROGRESS = \"progress\",\n        REQUESTEND = \"requestEnd\",\n        ITEMSLOADED = \"itemsLoaded\",\n        ITEMLOAD = \"itemLoad\",\n        crud = [CREATE, READ, UPDATE, DESTROY],\n        identity = function(o) { return o; },\n        getter = kendo.getter,\n        stringify = kendo.stringify,\n        math = Math,\n        push = [].push,\n        join = [].join,\n        pop = [].pop,\n        splice = [].splice,\n        shift = [].shift,\n        slice = [].slice,\n        unshift = [].unshift,\n        toString = {}.toString,\n        stableSort = kendo.support.stableSort,\n        dateRegExp = /^\\/Date\\((.*?)\\)\\/$/,\n        objectKeys = [];\n\n    var ObservableArray = Observable.extend({\n        init: function(array, type) {\n            var that = this;\n\n            that.type = type || ObservableObject;\n\n            Observable.fn.init.call(that);\n\n            that.length = array.length;\n\n            that.wrapAll(array, that);\n            that._loadPromises = [];\n            that._loadedNodes = [];\n        },\n\n        at: function(index) {\n            return this[index];\n        },\n\n        toJSON: function(serializeFunctions) {\n            var idx, length = this.length, value, json = new Array(length);\n\n            for (idx = 0; idx < length; idx++) {\n                value = this[idx];\n\n                if (value instanceof ObservableObject) {\n                    value = value.toJSON(serializeFunctions);\n                }\n\n                json[idx] = value;\n            }\n\n            return json;\n        },\n\n        parent: noop,\n\n        wrapAll: function(source, target) {\n            var that = this,\n                idx,\n                length,\n                parent = function() {\n                    return that;\n                };\n\n            target = target || [];\n\n            for (idx = 0, length = source.length; idx < length; idx++) {\n                target[idx] = that.wrap(source[idx], parent);\n            }\n\n            return target;\n        },\n\n        wrap: function(object, parent) {\n            var that = this,\n                observable;\n\n            if (object !== null && toString.call(object) === \"[object Object]\") {\n                observable = object instanceof that.type || object instanceof Model;\n\n                if (!observable) {\n                    object = object instanceof ObservableObject ? object.toJSON() : object;\n                    object = new that.type(object);\n                }\n\n                object.parent = parent;\n\n                object.bind(CHANGE, function(e) {\n                    var isGroup = object.hasOwnProperty(\"hasSubgroups\");\n                    that.trigger(CHANGE, {\n                        field: e.field,\n                        node: e.node,\n                        index: e.index,\n                        items: e.items || [this],\n                        action: e.node || isGroup ? (e.action || \"itemloaded\") : \"itemchange\"\n                    });\n                });\n\n                object.bind(ITEMLOAD, function(e) {\n                    that._loadPromises.push(e.promise);\n                    that._loading = true;\n\n                    e.promise.done(function() {\n                        that._loadedNodes.push(e.node);\n                        var index = that._loadPromises.indexOf(e.promise);\n                        that._loadPromises.splice(index, 1);\n\n                        if (!that._loadPromises.length) {\n                            that._loading = false;\n                            that.trigger(ITEMSLOADED, { collection: that, nodes: that._loadedNodes });\n                            that._loadedNodes = [];\n                        }\n                    });\n                });\n            }\n\n            return object;\n        },\n\n        loading: function() {\n            return this._loading;\n        },\n\n        push: function() {\n            var index = this.length,\n                items = this.wrapAll(arguments),\n                result;\n\n            result = push.apply(this, items);\n\n            if (!this.omitChangeEvent) {\n                this.trigger(CHANGE, {\n                    action: \"add\",\n                    index: index,\n                    items: items\n                });\n            }\n\n            return result;\n        },\n\n        slice: slice,\n\n        sort: [].sort,\n\n        join: join,\n\n        pop: function() {\n            var length = this.length, result = pop.apply(this);\n\n            if (length) {\n                this.trigger(CHANGE, {\n                    action: \"remove\",\n                    index: length - 1,\n                    items: [result]\n                });\n            }\n\n            return result;\n        },\n\n        splice: function(index, howMany, item) {\n            var items = this.wrapAll(slice.call(arguments, 2)),\n                result, i, len;\n\n            result = splice.apply(this, [index, howMany].concat(items));\n\n            if (result.length) {\n                if (!this.omitChangeEvent) {\n                    this.trigger(CHANGE, {\n                        action: \"remove\",\n                        index: index,\n                        items: result\n                    });\n                }\n\n                for (i = 0, len = result.length; i < len; i++) {\n                    if (result[i] && result[i].children) {\n                        result[i].unbind(CHANGE);\n                    }\n                }\n            }\n\n            if (item) {\n                if (!this.omitChangeEvent) {\n                    this.trigger(CHANGE, {\n                        action: \"add\",\n                        index: index,\n                        items: items\n                    });\n                }\n            }\n            return result;\n        },\n\n        shift: function() {\n            var length = this.length, result = shift.apply(this);\n\n            if (length) {\n                this.trigger(CHANGE, {\n                    action: \"remove\",\n                    index: 0,\n                    items: [result]\n                });\n            }\n\n            return result;\n        },\n\n        unshift: function() {\n            var items = this.wrapAll(arguments),\n                result;\n\n            result = unshift.apply(this, items);\n\n            this.trigger(CHANGE, {\n                action: \"add\",\n                index: 0,\n                items: items\n            });\n\n            return result;\n        },\n\n        indexOf: function(item) {\n            var that = this,\n                idx,\n                length;\n\n            for (idx = 0, length = that.length; idx < length; idx++) {\n                if (that[idx] === item) {\n                    return idx;\n                }\n            }\n            return -1;\n        },\n\n        forEach: function(callback, thisArg) {\n            var idx = 0;\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                callback.call(context, this[idx], idx, this);\n            }\n        },\n\n        map: function(callback, thisArg) {\n            var idx = 0;\n            var result = [];\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                result[idx] = callback.call(context, this[idx], idx, this);\n            }\n\n            return result;\n        },\n\n        reduce: function(callback) {\n            var idx = 0,\n                result,\n                length = this.length;\n\n            if (arguments.length == 2) {\n                result = arguments[1];\n            } else if (idx < length) {\n                result = this[idx++];\n            }\n\n            for (; idx < length; idx++) {\n                result = callback(result, this[idx], idx, this);\n            }\n\n            return result;\n        },\n\n        reduceRight: function(callback) {\n            var idx = this.length - 1,\n                result;\n\n            if (arguments.length == 2) {\n                result = arguments[1];\n            } else if (idx > 0) {\n                result = this[idx--];\n            }\n\n            for (; idx >= 0; idx--) {\n                result = callback(result, this[idx], idx, this);\n            }\n\n            return result;\n        },\n\n        filter: function(callback, thisArg) {\n            var idx = 0;\n            var result = [];\n            var item;\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                item = this[idx];\n                if (callback.call(context, item, idx, this)) {\n                    result[result.length] = item;\n                }\n            }\n\n            return result;\n        },\n\n        find: function(callback, thisArg) {\n            var idx = 0;\n            var item;\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                item = this[idx];\n                if (callback.call(context, item, idx, this)) {\n                    return item;\n                }\n            }\n        },\n\n        every: function(callback, thisArg) {\n            var idx = 0;\n            var item;\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                item = this[idx];\n                if (!callback.call(context, item, idx, this)) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        some: function(callback, thisArg) {\n            var idx = 0;\n            var item;\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                item = this[idx];\n                if (callback.call(context, item, idx, this)) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        // non-standard collection methods\n        remove: function(item) {\n            var idx = this.indexOf(item);\n\n            if (idx !== -1) {\n                this.splice(idx, 1);\n            }\n        },\n\n        empty: function() {\n            this.splice(0, this.length);\n        }\n    });\n\n    // Polyfill for Symbol.iterator\n    if (typeof Symbol !== \"undefined\" && Symbol.iterator && !ObservableArray.prototype[Symbol.iterator]) {\n        ObservableArray.prototype[Symbol.iterator] = [][Symbol.iterator];\n    }\n\n    var LazyObservableArray = ObservableArray.extend({\n        init: function(data, type, events) {\n            var parentFn = function() { return this; };\n\n            Observable.fn.init.call(this);\n\n            this.type = type || ObservableObject;\n\n            if (events) {\n                this._events = events;\n            }\n\n            for (var idx = 0; idx < data.length; idx++) {\n                this[idx] = data[idx];\n            }\n\n            this.length = idx;\n            this._parent = parentFn.bind(this);\n        },\n        at: function(index) {\n            var item = this[index];\n\n            if (!(item instanceof this.type)) {\n                item = this[index] = this.wrap(item, this._parent);\n            } else {\n                item.parent = this._parent;\n            }\n\n            return item;\n        }\n    });\n\n    function eventHandler(context, type, field, prefix) {\n        return function(e) {\n            var event = {}, key;\n\n            for (key in e) {\n                event[key] = e[key];\n            }\n\n            if (prefix) {\n                event.field = field + \".\" + e.field;\n            } else {\n                event.field = field;\n            }\n\n            if (type == CHANGE && context._notifyChange) {\n                context._notifyChange(event);\n            }\n\n            context.trigger(type, event);\n        };\n    }\n\n    function isPrimitiveType(value) {\n        return (typeof value === \"object\" && Object.getPrototypeOf(value) === Object.getPrototypeOf({}))\n                || Object.getPrototypeOf(value) === Object.getPrototypeOf(new Date())\n                || typeof value !== \"object\";\n      }\n\n    function ownKeys(value, ignoreObjectKeys) {\n        var props = [];\n        var protoKeys = [];\n        var keys, filteredObjectKeys;\n\n        value = value || {};\n\n        if (!isPrimitiveType(value)) {\n            protoKeys = Object.getOwnPropertyNames(Object.getPrototypeOf(value));\n        }\n\n        keys = Object.getOwnPropertyNames(value).concat(protoKeys);\n\n        filteredObjectKeys = objectKeys.filter(function(key) {\n            return keys.indexOf(key) < 0;\n        });\n\n        while (value) {\n            Object.getOwnPropertyNames(value).forEach(function(prop) {\n                if (props.indexOf(prop) === -1 && (!ignoreObjectKeys || filteredObjectKeys.indexOf(prop) < 0)) {\n                    props.push(prop);\n                }\n            });\n            value = Object.getPrototypeOf(value);\n        }\n\n        return props;\n    }\n\n    objectKeys = ownKeys({}, false);\n\n    var ObservableObject = Observable.extend({\n        init: function(value) {\n            var that = this,\n                member,\n                keys = ownKeys(value, true),\n                parent = function() {\n                    return that;\n                };\n\n            Observable.fn.init.call(this);\n\n            this._handlers = {};\n\n            keys.forEach(function(field) {\n                member = value[field];\n\n                if (typeof member === \"object\" && member && !member.getTime && field.charAt(0) != \"_\") {\n                    member = that.wrap(member, field, parent);\n                }\n\n                that[field] = member;\n            });\n\n            that.uid = kendo.guid();\n        },\n\n        shouldSerialize: function(field, serializeFunctions) {\n            return this.hasOwnProperty(field) && field !== \"_handlers\" && field !== \"_events\" && ((serializeFunctions && serializeFunctions[field]) || typeof this[field] !== FUNCTION) && field !== \"uid\";\n        },\n\n        forEach: function(f) {\n            for (var i in this) {\n                if (this.shouldSerialize(i)) {\n                    f(this[i], i);\n                }\n            }\n        },\n\n        toJSON: function(serializeFunctions) {\n            var result = {}, value, field;\n\n            for (field in this) {\n                if (this.shouldSerialize(field, serializeFunctions)) {\n                    value = this[field];\n\n                    if (value instanceof ObservableObject || value instanceof ObservableArray) {\n                        value = value.toJSON(serializeFunctions);\n                    }\n\n                    result[field] = value;\n                }\n            }\n\n            return result;\n        },\n\n        get: function(field) {\n            var that = this, result;\n\n            that.trigger(GET, { field: field });\n\n            if (field === \"this\") {\n                result = that;\n            } else {\n                result = kendo.getter(field, true)(that);\n            }\n\n            return result;\n        },\n\n        _set: function(field, value) {\n            var that = this;\n            var composite = field.indexOf(\".\") >= 0;\n\n            if (composite) {\n                var paths = field.split(\".\"),\n                    path = \"\";\n\n                while (paths.length > 1) {\n                    path += paths.shift();\n                    var obj = kendo.getter(path, true)(that);\n                    if (obj instanceof ObservableObject) {\n                        obj.set(paths.join(\".\"), value);\n                        return composite;\n                    }\n                    path += \".\";\n                }\n            }\n\n            kendo.setter(field)(that, value);\n\n            return composite;\n        },\n\n        set: function(field, value) {\n            var that = this,\n                isSetPrevented = false,\n                composite = field.indexOf(\".\") >= 0,\n                current = kendo.getter(field, true)(that);\n\n            if (current !== value) {\n                if (current instanceof Observable && this._handlers[field]) {\n                    if (this._handlers[field].get) {\n                       current.unbind(GET, this._handlers[field].get);\n                    }\n                    current.unbind(CHANGE, this._handlers[field].change);\n                }\n\n                isSetPrevented = that.trigger(\"set\", { field: field, value: value });\n\n                if (!isSetPrevented) {\n                    if (!composite) {\n                        value = that.wrap(value, field, function() { return that; });\n                    }\n                    if (!that._set(field, value) || field.indexOf(\"(\") >= 0 || field.indexOf(\"[\") >= 0) {\n                        that.trigger(CHANGE, { field: field });\n                    }\n                }\n            }\n\n            return isSetPrevented;\n        },\n\n        parent: noop,\n\n        wrap: function(object, field, parent) {\n            var that = this;\n            var get;\n            var change;\n            var type = toString.call(object);\n\n            if (object != null && (type === \"[object Object]\" || type === \"[object Array]\")) {\n                var isObservableArray = object instanceof ObservableArray;\n                var isDataSource = object instanceof DataSource;\n\n                if (type === \"[object Object]\" && !isDataSource && !isObservableArray) {\n                    if (!(object instanceof ObservableObject)) {\n                        object = new ObservableObject(object);\n                    }\n\n                    get = eventHandler(that, GET, field, true);\n                    object.bind(GET, get);\n                    change = eventHandler(that, CHANGE, field, true);\n                    object.bind(CHANGE, change);\n\n                    that._handlers[field] = { get: get, change: change };\n                } else if (type === \"[object Array]\" || isObservableArray || isDataSource) {\n                    if (!isObservableArray && !isDataSource) {\n                        object = new ObservableArray(object);\n                    }\n\n                    change = eventHandler(that, CHANGE, field, false);\n\n                    object.bind(CHANGE, change);\n\n                    that._handlers[field] = { change: change };\n                }\n\n                object.parent = parent;\n            }\n\n            return object;\n        }\n    });\n\n    function equal(x, y) {\n        if (x === y) {\n            return true;\n        }\n\n        var xtype = kendo.type(x), ytype = kendo.type(y), field;\n\n        if (xtype !== ytype) {\n            return false;\n        }\n\n        if (xtype === \"date\") {\n            return x.getTime() === y.getTime();\n        }\n\n        if (xtype !== \"object\" && xtype !== \"array\") {\n            return false;\n        }\n\n        for (field in x) {\n            if (!equal(x[field], y[field])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    var parsers = {\n        \"number\": function(value) {\n            if (typeof value === STRING && value.toLowerCase() === \"null\") {\n                return null;\n            }\n            return kendo.parseFloat(value);\n        },\n\n        \"date\": function(value) {\n            if (typeof value === STRING && value.toLowerCase() === \"null\") {\n                return null;\n            }\n            return kendo.parseDate(value);\n        },\n\n        \"boolean\": function(value) {\n            if (typeof value === STRING) {\n                if (value.toLowerCase() === \"null\") {\n                    return null;\n                } else {\n                    return value.toLowerCase() === \"true\";\n                }\n            }\n            return value != null ? !!value : value;\n        },\n\n        \"string\": function(value) {\n            if (typeof value === STRING && value.toLowerCase() === \"null\") {\n                return null;\n            }\n            return value != null ? (value + \"\") : value;\n        },\n\n        \"default\": function(value) {\n            return value;\n        }\n    };\n\n    var defaultValues = {\n        \"string\": \"\",\n        \"number\": 0,\n        \"date\": new Date(),\n        \"boolean\": false,\n        \"default\": \"\"\n    };\n\n    function getFieldByName(obj, name) {\n        var field,\n            fieldName;\n\n        for (fieldName in obj) {\n            field = obj[fieldName];\n            if (isPlainObject(field) && field.field && field.field === name) {\n                return field;\n            } else if (field === name) {\n                return field;\n            }\n        }\n        return null;\n    }\n\n    var Model = ObservableObject.extend({\n        init: function(data) {\n            var that = this;\n\n            if (!data || $.isEmptyObject(data)) {\n                data = $.extend({}, that.defaults, data);\n\n                if (that._initializers) {\n                    for (var idx = 0; idx < that._initializers.length; idx++) {\n                         var name = that._initializers[idx];\n                         data[name] = that.defaults[name]();\n                    }\n                }\n            }\n\n            ObservableObject.fn.init.call(that, data);\n\n            that.dirty = false;\n            that.dirtyFields = {};\n\n            if (that.idField) {\n                that.id = that.get(that.idField);\n\n                if (that.id === undefined$1) {\n                    that.id = that._defaultId;\n                }\n            }\n        },\n\n        shouldSerialize: function(field) {\n            return ObservableObject.fn.shouldSerialize.call(this, field) &&\n                field !== \"uid\" && !(this.idField !== \"id\" && field === \"id\") &&\n                field !== \"dirty\" && field !== \"dirtyFields\" && field !== \"_accessors\";\n        },\n\n        _parse: function(field, value) {\n            var that = this,\n                fieldName = field,\n                fields = (that.fields || {}),\n                parse;\n\n            field = fields[field];\n            if (!field) {\n                field = getFieldByName(fields, fieldName);\n            }\n            if (field) {\n                parse = field.parse;\n                if (!parse && field.type) {\n                    parse = parsers[field.type.toLowerCase()];\n                }\n            }\n\n            return parse ? parse(value) : value;\n        },\n\n        _notifyChange: function(e) {\n            var action = e.action;\n\n            if (action == \"add\" || action == \"remove\") {\n                this.dirty = true;\n                this.dirtyFields[e.field] = true;\n            }\n        },\n\n        editable: function(field) {\n            field = (this.fields || {})[field];\n            return field ? field.editable !== false : true;\n        },\n\n        set: function(field, value) {\n            var that = this;\n            var dirty = that.dirty;\n\n            if (that.editable(field)) {\n                value = that._parse(field, value);\n\n                if (!equal(value, that.get(field))) {\n                    that.dirty = true;\n                    that.dirtyFields[field] = true;\n\n                    if (ObservableObject.fn.set.call(that, field, value) && !dirty) {\n                        that.dirty = dirty;\n\n                        if (!that.dirty) {\n                            that.dirtyFields[field] = false;\n                        }\n                    }\n                } else {\n                    that.trigger(\"equalSet\", { field: field, value: value });\n                }\n            }\n        },\n\n        accept: function(data) {\n            var that = this,\n                parent = function() { return that; },\n                field;\n\n            for (field in data) {\n                var value = data[field];\n\n                if (field.charAt(0) != \"_\") {\n                    value = that.wrap(data[field], field, parent);\n                }\n\n                that._set(field, value);\n            }\n\n            if (that.idField) {\n                that.id = that.get(that.idField);\n            }\n\n            that.dirty = false;\n            that.dirtyFields = {};\n        },\n\n        isNew: function() {\n            return this.id === this._defaultId;\n        }\n    });\n\n    Model.define = function(base, options) {\n        if (options === undefined$1) {\n            options = base;\n            base = Model;\n        }\n\n        var model,\n            proto = extend({ defaults: {} }, options),\n            name,\n            field,\n            type,\n            value,\n            idx,\n            length,\n            fields = {},\n            originalName,\n            id = proto.id,\n            functionFields = [];\n\n        if (id) {\n            proto.idField = id;\n        }\n\n        if (proto.id) {\n            delete proto.id;\n        }\n\n        if (id) {\n            proto.defaults[id] = proto._defaultId = \"\";\n        }\n\n        if (toString.call(proto.fields) === \"[object Array]\") {\n            for (idx = 0, length = proto.fields.length; idx < length; idx++) {\n                field = proto.fields[idx];\n                if (typeof field === STRING) {\n                    fields[field] = {};\n                } else if (field.field) {\n                    fields[field.field] = field;\n                }\n            }\n            proto.fields = fields;\n        }\n\n        for (name in proto.fields) {\n            field = proto.fields[name];\n            type = field.type || \"default\";\n            value = null;\n            originalName = name;\n\n            name = typeof (field.field) === STRING ? field.field : name;\n\n            if (!field.nullable) {\n                value = proto.defaults[originalName !== name ? originalName : name] = field.defaultValue !== undefined$1 ? field.defaultValue : defaultValues[type.toLowerCase()];\n\n                if (typeof value === \"function\") {\n                    functionFields.push(name);\n                }\n            }\n\n            if (options.id === name) {\n                proto._defaultId = value;\n            }\n\n            proto.defaults[originalName !== name ? originalName : name] = value;\n\n            if ($.isPlainObject(field)) {\n                field.parse = field.parse || parsers[type];\n            } else {\n                field = {\n                    parse: parsers[type]\n                };\n            }\n        }\n\n        if (functionFields.length > 0) {\n            proto._initializers = functionFields;\n        }\n\n        model = base.extend(proto);\n        model.define = function(options) {\n            return Model.define(model, options);\n        };\n\n        if (proto.fields) {\n            model.fields = proto.fields;\n            model.idField = proto.idField;\n        }\n\n        return model;\n    };\n\n    var Comparer = {\n        selector: function(field) {\n            return isFunction(field) ? field : getter(field);\n        },\n\n        compare: function(field) {\n            var selector = this.selector(field);\n            return function(a, b) {\n                a = selector(a);\n                b = selector(b);\n\n                if (a == null && b == null) {\n                    return 0;\n                }\n\n                if (a == null) {\n                    return -1;\n                }\n\n                if (b == null) {\n                    return 1;\n                }\n\n                if (a.localeCompare) {\n                    return a.localeCompare(b);\n                }\n\n                return a > b ? 1 : (a < b ? -1 : 0);\n            };\n        },\n\n        create: function(sort) {\n            var compare = sort.compare || this.compare(sort.field);\n\n            if (sort.dir == \"desc\") {\n                return function(a, b) {\n                    return compare(b, a, true);\n                };\n            }\n\n            return compare;\n        },\n\n        combine: function(comparers) {\n            return function(a, b) {\n                var result = comparers[0](a, b),\n                    idx,\n                    length;\n\n                for (idx = 1, length = comparers.length; idx < length; idx ++) {\n                    result = result || comparers[idx](a, b);\n                }\n\n                return result;\n            };\n        }\n    };\n\n    var StableComparer = extend({}, Comparer, {\n        asc: function(field) {\n            var selector = this.selector(field);\n            return function(a, b) {\n                var valueA = selector(a);\n                var valueB = selector(b);\n\n                if (valueA && valueA.getTime && valueB && valueB.getTime) {\n                    valueA = valueA.getTime();\n                    valueB = valueB.getTime();\n                }\n\n                if (valueA === valueB) {\n                    return a.__position - b.__position;\n                }\n\n                if (valueA == null) {\n                    return -1;\n                }\n\n                if (valueB == null) {\n                    return 1;\n                }\n\n                if (valueA.localeCompare) {\n                    return valueA.localeCompare(valueB);\n                }\n\n                return valueA > valueB ? 1 : -1;\n            };\n        },\n\n        desc: function(field) {\n            var selector = this.selector(field);\n            return function(a, b) {\n                var valueA = selector(a);\n                var valueB = selector(b);\n\n                if (valueA && valueA.getTime && valueB && valueB.getTime) {\n                    valueA = valueA.getTime();\n                    valueB = valueB.getTime();\n                }\n\n                if (valueA === valueB) {\n                    return a.__position - b.__position;\n                }\n\n                if (valueA == null) {\n                    return 1;\n                }\n\n                if (valueB == null) {\n                    return -1;\n                }\n\n                if (valueB.localeCompare) {\n                    return valueB.localeCompare(valueA);\n                }\n\n                return valueA < valueB ? 1 : -1;\n            };\n        },\n        create: function(sort) {\n           return this[sort.dir](sort.field);\n        }\n    });\n\n    map = function(array, callback) {\n        var idx, length = array.length, result = new Array(length);\n\n        for (idx = 0; idx < length; idx++) {\n            result[idx] = callback(array[idx], idx, array);\n        }\n\n        return result;\n    };\n\n    var operators = (function() {\n\n        function quote(str) {\n            if (typeof str == \"string\") {\n                str = str.replace(/[\\r\\n]+/g, \"\");\n            }\n            return JSON.stringify(str);\n        }\n\n        function textOp(impl) {\n            return function(a, b, ignore, accentFoldingFiltering) {\n                b += \"\";\n                if (ignore) {\n                    a = \"(\" + a + \" + '').toString()\" + ((accentFoldingFiltering) ? \".toLocaleLowerCase('\" + accentFoldingFiltering + \"')\" : \".toLowerCase()\");\n                    b = ((accentFoldingFiltering) ? b.toLocaleLowerCase(accentFoldingFiltering) : b.toLowerCase());\n                }\n                return impl(a, quote(b), ignore);\n            };\n        }\n\n        function operator(op, a, b, ignore, accentFoldingFiltering) {\n            if (b != null) {\n                if (typeof b === STRING) {\n                    var date = dateRegExp.exec(b);\n                    if (date) {\n                        b = new Date(+date[1]);\n                    } else if (ignore) {\n                        b = quote(((accentFoldingFiltering) ? b.toLocaleLowerCase(accentFoldingFiltering) : b.toLowerCase()));\n                        a = \"((\" + a + \" || '')+'')\" + ((accentFoldingFiltering) ? \".toLocaleLowerCase('\" + accentFoldingFiltering + \"')\" : \".toLowerCase()\");\n                    } else {\n                        b = quote(b);\n                    }\n                }\n\n                if (b.getTime) {\n                    //b looks like a Date\n                    a = \"(\" + a + \"&&\" + a + \".getTime?\" + a + \".getTime():\" + a + \")\";\n                    b = b.getTime();\n                }\n            }\n\n            return a + \" \" + op + \" \" + b;\n        }\n\n        function getMatchRegexp(pattern) {\n            // take a pattern, as supported by Excel match filter, and\n            // convert it to the equivalent JS regular expression.\n            // Excel patterns support:\n            //\n            //   * - match any sequence of characters\n            //   ? - match a single character\n            //\n            // to match a literal * or ?, they must be prefixed by a tilde (~)\n            for (var rx = \"/^\", esc = false, i = 0; i < pattern.length; ++i) {\n                var ch = pattern.charAt(i);\n                if (esc) {\n                    rx += \"\\\\\" + ch;\n                } else if (ch == \"~\") {\n                    esc = true;\n                    continue;\n                } else if (ch == \"*\") {\n                    rx += \".*\";\n                } else if (ch == \"?\") {\n                    rx += \".\";\n                } else if (\".+^$()[]{}|\\\\/\\n\\r\\u2028\\u2029\\xA0\".indexOf(ch) >= 0) {\n                    rx += \"\\\\\" + ch;\n                } else {\n                    rx += ch;\n                }\n                esc = false;\n            }\n            return rx + \"$/\";\n        }\n\n        return {\n            quote: function(value) {\n                if (value && value.getTime) {\n                    return \"new Date(\" + value.getTime() + \")\";\n                }\n                return quote(value);\n            },\n            eq: function(a, b, ignore, accentFoldingFiltering) {\n                return operator(\"==\", a, b, ignore, accentFoldingFiltering);\n            },\n            neq: function(a, b, ignore, accentFoldingFiltering) {\n                return operator(\"!=\", a, b, ignore, accentFoldingFiltering);\n            },\n            gt: function(a, b, ignore) {\n                return operator(\">\", a, b, ignore);\n            },\n            gte: function(a, b, ignore) {\n                return operator(\">=\", a, b, ignore);\n            },\n            lt: function(a, b, ignore) {\n                return operator(\"<\", a, b, ignore);\n            },\n            lte: function(a, b, ignore) {\n                return operator(\"<=\", a, b, ignore);\n            },\n            startswith: textOp(function(a, b) {\n                return a + \".lastIndexOf(\" + b + \", 0) == 0\";\n            }),\n            doesnotstartwith: textOp(function(a, b) {\n                return a + \".lastIndexOf(\" + b + \", 0) == -1\";\n            }),\n            endswith: textOp(function(a, b) {\n                var n = b ? b.length - 2 : 0;\n                return a + \".indexOf(\" + b + \", \" + a + \".length - \" + n + \") >= 0\";\n            }),\n            doesnotendwith: textOp(function(a, b) {\n                var n = b ? b.length - 2 : 0;\n                return a + \".indexOf(\" + b + \", \" + a + \".length - \" + n + \") < 0\";\n            }),\n            contains: textOp(function(a, b) {\n                return a + \".indexOf(\" + b + \") >= 0\";\n            }),\n            doesnotcontain: textOp(function(a, b) {\n                return a + \".indexOf(\" + b + \") == -1\";\n            }),\n            matches: textOp(function(a, b) {\n                b = b.substring(1, b.length - 1);\n                return getMatchRegexp(b) + \".test(\" + a + \")\";\n            }),\n            doesnotmatch: textOp(function(a, b) {\n                b = b.substring(1, b.length - 1);\n                return \"!\" + getMatchRegexp(b) + \".test(\" + a + \")\";\n            }),\n            isempty: function(a) {\n                return a + \" === ''\";\n            },\n            isnotempty: function(a) {\n                return a + \" !== ''\";\n            },\n            isnull: function(a) {\n                return \"(\" + a + \" == null)\";\n            },\n            isnotnull: function(a) {\n                return \"(\" + a + \" != null)\";\n            },\n            isnullorempty: function(a) {\n                return \"(\" + a + \" === null) || (\" + a + \" === '')\";\n            },\n            isnotnullorempty: function(a) {\n                return \"(\" + a + \" !== null) && (\" + a + \" !== '')\";\n            }\n        };\n    })();\n\n    function Query(data) {\n        this.data = data || [];\n    }\n\n    Query.filterExpr = function(expression) {\n        var expressions = [],\n            logic = { and: \" && \", or: \" || \" },\n            idx,\n            length,\n            filter,\n            expr,\n            fieldFunctions = [],\n            operatorFunctions = [],\n            field,\n            operator,\n            filters = expression.filters;\n\n        for (idx = 0, length = filters.length; idx < length; idx++) {\n            filter = filters[idx];\n            field = filter.field;\n            operator = filter.operator;\n\n            if (filter.filters) {\n                expr = Query.filterExpr(filter);\n                //Nested function fields or operators - update their index e.g. __o[0] -> __o[1]\n                filter = expr.expression\n                .replace(/__o\\[(\\d+)\\]/g, function(match, index) {\n                    index = +index;\n                    return \"__o[\" + (operatorFunctions.length + index) + \"]\";\n                })\n                .replace(/__f\\[(\\d+)\\]/g, function(match, index) {\n                    index = +index;\n                    return \"__f[\" + (fieldFunctions.length + index) + \"]\";\n                });\n\n                operatorFunctions.push.apply(operatorFunctions, expr.operators);\n                fieldFunctions.push.apply(fieldFunctions, expr.fields);\n            } else {\n                if (typeof field === FUNCTION) {\n                    expr = \"__f[\" + fieldFunctions.length + \"](d)\";\n                    fieldFunctions.push(field);\n                } else {\n                    expr = kendo.expr(field);\n                }\n\n                if (typeof operator === FUNCTION) {\n                    filter = \"__o[\" + operatorFunctions.length + \"](\" + expr + \", \" + operators.quote(filter.value) + \")\";\n                    operatorFunctions.push(operator);\n                } else {\n                    filter = operators[(operator || \"eq\").toLowerCase()](expr, filter.value, filter.ignoreCase !== undefined$1 ? filter.ignoreCase : true, expression.accentFoldingFiltering);\n                }\n            }\n\n            expressions.push(filter);\n        }\n\n        return { expression: \"(\" + expressions.join(logic[expression.logic]) + \")\", fields: fieldFunctions, operators: operatorFunctions };\n    };\n\n    function normalizeSort(field, dir) {\n        if (field) {\n            var descriptor = typeof field === STRING ? { field: field, dir: dir } : field,\n            descriptors = isArray(descriptor) ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n            return grep(descriptors, function(d) { return !!d.dir; });\n        }\n    }\n\n    function sortFields(sorts, dir) {\n        var sortObject = {};\n\n        if (sorts) {\n            var descriptor = typeof sorts === STRING ? { field: sorts, dir: dir } : sorts,\n            descriptors = isArray(descriptor) ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n            for (var i = 0; i < descriptors.length; i++) {\n                sortObject[descriptors[i].field] = { dir: descriptors[i].dir, index: i + 1 };\n            }\n        }\n\n        return sortObject;\n    }\n\n    var operatorMap = {\n        \"==\": \"eq\",\n        equals: \"eq\",\n        isequalto: \"eq\",\n        equalto: \"eq\",\n        equal: \"eq\",\n        \"!=\": \"neq\",\n        ne: \"neq\",\n        notequals: \"neq\",\n        isnotequalto: \"neq\",\n        notequalto: \"neq\",\n        notequal: \"neq\",\n        \"<\": \"lt\",\n        islessthan: \"lt\",\n        lessthan: \"lt\",\n        less: \"lt\",\n        \"<=\": \"lte\",\n        le: \"lte\",\n        islessthanorequalto: \"lte\",\n        lessthanequal: \"lte\",\n        \">\": \"gt\",\n        isgreaterthan: \"gt\",\n        greaterthan: \"gt\",\n        greater: \"gt\",\n        \">=\": \"gte\",\n        isgreaterthanorequalto: \"gte\",\n        greaterthanequal: \"gte\",\n        ge: \"gte\",\n        notsubstringof: \"doesnotcontain\",\n        isnull: \"isnull\",\n        isempty: \"isempty\",\n        isnotempty: \"isnotempty\"\n    };\n\n    function normalizeOperator(expression) {\n        var idx,\n        length,\n        filter,\n        operator,\n        filters = expression.filters;\n\n        if (filters) {\n            for (idx = 0, length = filters.length; idx < length; idx++) {\n                filter = filters[idx];\n                operator = filter.operator;\n\n                if (operator && typeof operator === STRING) {\n                    filter.operator = operatorMap[operator.toLowerCase()] || operator;\n                }\n\n                normalizeOperator(filter);\n            }\n        }\n    }\n\n    function normalizeFilter(expression) {\n        if (expression && !isEmptyObject(expression)) {\n            if (isArray(expression) || !expression.filters) {\n                expression = {\n                    logic: \"and\",\n                    filters: isArray(expression) ? expression : [expression]\n                };\n            }\n\n            normalizeOperator(expression);\n\n            return expression;\n        }\n    }\n\n    Query.normalizeFilter = normalizeFilter;\n\n    function compareDescriptor(f1, f2) {\n        if (f1.logic || f2.logic) {\n            return false;\n        }\n\n        return f1.field === f2.field && f1.value === f2.value && f1.operator === f2.operator;\n    }\n\n    function normalizeDescriptor(filter) {\n        filter = filter || {};\n\n        if (isEmptyObject(filter)) {\n            return { logic: \"and\", filters: [] };\n        }\n\n        return normalizeFilter(filter);\n    }\n\n    function fieldComparer(a, b) {\n        if (b.logic || (a.field > b.field)) {\n            return 1;\n        } else if (a.field < b.field) {\n            return -1;\n        } else {\n            return 0;\n        }\n    }\n\n    function compareFilters(expr1, expr2) {\n        expr1 = normalizeDescriptor(expr1);\n        expr2 = normalizeDescriptor(expr2);\n\n        if (expr1.logic !== expr2.logic) {\n            return false;\n        }\n\n        var f1, f2;\n        var filters1 = (expr1.filters || []).slice();\n        var filters2 = (expr2.filters || []).slice();\n\n        if (filters1.length !== filters2.length) {\n            return false;\n        }\n\n        filters1 = filters1.sort(fieldComparer);\n        filters2 = filters2.sort(fieldComparer);\n\n        for (var idx = 0; idx < filters1.length; idx++) {\n            f1 = filters1[idx];\n            f2 = filters2[idx];\n\n            if (f1.logic && f2.logic) {\n                if (!compareFilters(f1, f2)) {\n                    return false;\n                }\n            } else if (!compareDescriptor(f1, f2)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    Query.compareFilters = compareFilters;\n\n    function normalizeAggregate(expressions) {\n        return isArray(expressions) ? expressions : [expressions];\n    }\n\n    function normalizeGroup(field, dir, compare, skipItemSorting) {\n        var descriptor = typeof field === STRING ? { field: field, dir: dir, compare: compare, skipItemSorting: skipItemSorting } : field,\n        descriptors = isArray(descriptor) ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n        return map(descriptors, function(d) {\n            return {\n                field: d.field,\n                dir: d.dir || \"asc\",\n                aggregates: d.aggregates,\n                compare: d.compare,\n                skipItemSorting: d.skipItemSorting\n            };\n        });\n    }\n\n    function normalizeGroupWithoutCompare(field, dir, compare) {\n        var descriptors = normalizeGroup(field, dir, compare);\n\n        for (var i = 0; i < descriptors.length; i++) {\n            delete descriptors[i].compare;\n        }\n\n        return descriptors;\n    }\n\n    function anyGroupDescriptorHasCompare(groupDescriptors) {\n        var descriptors = isArray(groupDescriptors) ? groupDescriptors : [groupDescriptors];\n\n        for (var i = 0; i < descriptors.length; i++) {\n            if (descriptors[i] && isFunction(descriptors[i].compare)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    Query.prototype = {\n        toArray: function() {\n            return this.data;\n        },\n        range: function(index, count) {\n            return new Query(this.data.slice(index, index + count));\n        },\n        skip: function(count) {\n            return new Query(this.data.slice(count));\n        },\n        take: function(count) {\n            return new Query(this.data.slice(0, count));\n        },\n        select: function(selector) {\n            return new Query(map(this.data, selector));\n        },\n        order: function(selector, dir, inPlace) {\n            var sort = { dir: dir };\n\n            if (selector) {\n                if (selector.compare) {\n                    sort.compare = selector.compare;\n                } else {\n                    sort.field = selector;\n                }\n            }\n\n            if (inPlace) {\n                return new Query(this.data.sort(Comparer.create(sort)));\n            }\n\n            return new Query(this.data.slice(0).sort(Comparer.create(sort)));\n        },\n        orderBy: function(selector, inPlace) {\n            return this.order(selector, \"asc\", inPlace);\n        },\n        orderByDescending: function(selector, inPlace) {\n            return this.order(selector, \"desc\", inPlace);\n        },\n        sort: function(field, dir, comparer, inPlace) {\n            var idx,\n            length,\n            descriptors = normalizeSort(field, dir),\n            comparers = [];\n\n            comparer = comparer || Comparer;\n\n            if (descriptors.length) {\n                for (idx = 0, length = descriptors.length; idx < length; idx++) {\n                    comparers.push(comparer.create(descriptors[idx]));\n                }\n\n                return this.orderBy({ compare: comparer.combine(comparers) }, inPlace);\n            }\n\n            return this;\n        },\n\n        filter: function(expressions) {\n            var idx,\n            current,\n            length,\n            compiled,\n            predicate,\n            data = this.data,\n            fields,\n            operators,\n            result = [],\n            filter;\n\n            expressions = normalizeFilter(expressions);\n\n            if (!expressions || expressions.filters.length === 0) {\n                return this;\n            }\n\n            compiled = Query.filterExpr(expressions);\n            fields = compiled.fields;\n            operators = compiled.operators;\n\n            predicate = filter = new Function(\"d, __f, __o\", \"return \" + compiled.expression);\n\n            if (fields.length || operators.length) {\n                filter = function(d) {\n                    return predicate(d, fields, operators);\n                };\n            }\n\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                current = data[idx];\n\n                if (filter(current)) {\n                    result.push(current);\n                }\n            }\n\n            return new Query(result);\n        },\n\n        group: function(descriptors, allData, options) {\n            descriptors = normalizeGroup(descriptors || []);\n            allData = allData || this.data;\n\n            var that = this,\n            result = new Query(that.data),\n            descriptor;\n\n            if (descriptors.length > 0) {\n                descriptor = descriptors[0];\n\n                if (options && options.groupPaging) {\n                    result = new Query(allData).groupAllData(descriptor, allData).select(function(group) {\n                        var data = new Query(allData).filter([{\n                            field: group.field,\n                            operator: \"eq\",\n                            value: group.value,\n                            ignoreCase: false\n                        }]);\n                        var items = descriptors.length > 1 ? new Query(group.items).group(descriptors.slice(1), data.toArray(), options).toArray() : group.items;\n                        return {\n                            field: group.field,\n                            value: group.value,\n                            hasSubgroups: descriptors.length > 1,\n                            items: items,\n                            aggregates: data.aggregate(descriptor.aggregates),\n                            uid: kendo.guid(),\n                            itemCount: items.length,\n                            subgroupCount: items.length\n                        };\n                    });\n\n                } else {\n                    result = result.groupBy(descriptor).select(function(group) {\n                        var data = new Query(allData).filter([ { field: group.field, operator: \"eq\", value: group.value, ignoreCase: false } ]);\n                        return {\n                            field: group.field,\n                            value: group.value,\n                            items: descriptors.length > 1 ? new Query(group.items).group(descriptors.slice(1), data.toArray()).toArray() : group.items,\n                            hasSubgroups: descriptors.length > 1,\n                            aggregates: data.aggregate(descriptor.aggregates)\n                        };\n                    });\n                }\n            }\n            return result;\n        },\n\n        groupBy: function(descriptor) {\n            var that = this;\n\n            if (isEmptyObject(descriptor) || !this.data.length) {\n                return new Query([]);\n            }\n\n            var field = descriptor.field,\n                sorted = descriptor.skipItemSorting ? this.data : this._sortForGrouping(field, descriptor.dir || \"asc\"),\n                accessor = kendo.accessor(field),\n                item,\n                groupValue = accessor.get(sorted[0], field),\n                group = {\n                    field: field,\n                    value: groupValue,\n                    items: []\n                },\n                currentValue,\n                idx,\n                len,\n                result = [group];\n\n            for (idx = 0, len = sorted.length; idx < len; idx++) {\n                item = sorted[idx];\n                currentValue = accessor.get(item, field);\n                if (!groupValueComparer(groupValue, currentValue)) {\n                    groupValue = currentValue;\n                    group = {\n                        field: field,\n                        value: groupValue,\n                        items: []\n                    };\n                    result.push(group);\n                }\n                group.items.push(item);\n            }\n\n            result = that._sortGroups(result, descriptor);\n\n            return new Query(result);\n        },\n\n        groupAllData: function(descriptor, allData) {\n            if (isEmptyObject(descriptor) || this.data && !this.data.length) {\n                return new Query([]);\n            }\n\n            var field = descriptor.field,\n                sorted = descriptor.skipItemSorting ? allData : new Query(allData).sort(field, descriptor.dir || \"asc\", StableComparer).toArray(),\n                accessor = kendo.accessor(field),\n                item,\n                groupValue = accessor.get(sorted[0], field),\n                group = {\n                    field: field,\n                    value: groupValue,\n                    items: []\n                },\n                currentValue,\n                idx,\n                len,\n                result = [group];\n\n            for (idx = 0, len = sorted.length; idx < len; idx++) {\n                item = sorted[idx];\n                currentValue = accessor.get(item, field);\n                if (!groupValueComparer(groupValue, currentValue)) {\n                    groupValue = currentValue;\n                    group = {\n                        field: field,\n                        value: groupValue,\n                        items: []\n                    };\n                    result.push(group);\n                }\n                group.items.push(item);\n            }\n\n            result = this._sortGroups(result, descriptor);\n\n            return new Query(result);\n        },\n\n        _sortForGrouping: function(field, dir) {\n            var idx, length,\n                data = this.data;\n\n            if (!stableSort) {\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    data[idx].__position = idx;\n                }\n\n                data = new Query(data).sort(field, dir, StableComparer).toArray();\n\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    delete data[idx].__position;\n                }\n                return data;\n            }\n\n            return this.sort(field, dir).toArray();\n        },\n\n        _sortGroups: function(groups, descriptor) {\n            var result = groups;\n\n            if (descriptor && isFunction(descriptor.compare)) {\n                result = new Query(result).order({ compare: descriptor.compare }, descriptor.dir || ASCENDING).toArray();\n            }\n\n            return result;\n        },\n\n        aggregate: function(aggregates) {\n            var idx,\n                len,\n                result = {},\n                state = {};\n\n            if (aggregates && aggregates.length) {\n                for (idx = 0, len = this.data.length; idx < len; idx++) {\n                    calculateAggregate(result, aggregates, this.data[idx], idx, len, state);\n                }\n            }\n            return result;\n        }\n    };\n\n    function groupValueComparer(a, b) {\n        if (a && a.getTime && b && b.getTime) {\n            return a.getTime() === b.getTime();\n        }\n        return a === b;\n    }\n\n    function calculateAggregate(accumulator, aggregates, item, index, length, state) {\n        aggregates = aggregates || [];\n        var idx,\n            aggr,\n            functionName,\n            len = aggregates.length;\n\n        for (idx = 0; idx < len; idx++) {\n            aggr = aggregates[idx];\n            functionName = aggr.aggregate;\n            var field = aggr.field;\n            accumulator[field] = accumulator[field] || {};\n            state[field] = state[field] || {};\n            state[field][functionName] = state[field][functionName] || {};\n            accumulator[field][functionName] = functions[functionName.toLowerCase()](accumulator[field][functionName], item, kendo.accessor(field), index, length, state[field][functionName]);\n        }\n    }\n\n    var functions = {\n        sum: function(accumulator, item, accessor) {\n            var value = accessor.get(item);\n\n            if (!isNumber(accumulator)) {\n                accumulator = value;\n            } else if (isNumber(value)) {\n                accumulator += value;\n            }\n\n            return accumulator;\n        },\n        count: function(accumulator) {\n            return (accumulator || 0) + 1;\n        },\n        average: function(accumulator, item, accessor, index, length, state) {\n            var value = accessor.get(item);\n\n            if (state.count === undefined$1) {\n                state.count = 0;\n            }\n\n            if (!isNumber(accumulator)) {\n                accumulator = value;\n            } else if (isNumber(value)) {\n                accumulator += value;\n            }\n\n            if (isNumber(value)) {\n                state.count++;\n            }\n\n            if (index == length - 1 && isNumber(accumulator)) {\n                accumulator = accumulator / state.count;\n            }\n            return accumulator;\n        },\n        max: function(accumulator, item, accessor) {\n            var value = accessor.get(item);\n\n            if (!isNumber(accumulator) && !isDate(accumulator)) {\n                accumulator = value;\n            }\n\n            if (accumulator < value && (isNumber(value) || isDate(value))) {\n                accumulator = value;\n            }\n            return accumulator;\n        },\n        min: function(accumulator, item, accessor) {\n            var value = accessor.get(item);\n\n            if (!isNumber(accumulator) && !isDate(accumulator)) {\n                accumulator = value;\n            }\n\n            if (accumulator > value && (isNumber(value) || isDate(value))) {\n                accumulator = value;\n            }\n            return accumulator;\n        }\n    };\n\n    function isNumber(val) {\n        return typeof val === \"number\" && !isNaN(val);\n    }\n\n    function isDate(val) {\n        return val && val.getTime;\n    }\n\n    function toJSON(array) {\n        var idx, length = array.length, result = new Array(length);\n\n        for (idx = 0; idx < length; idx++) {\n            result[idx] = array[idx].toJSON();\n        }\n\n        return result;\n    }\n\n    Query.normalizeGroup = normalizeGroup;\n    Query.normalizeSort = normalizeSort;\n\n    Query.process = function(data, options, inPlace) {\n        options = options || {};\n\n        var group = options.group;\n        var customGroupSort = anyGroupDescriptorHasCompare(normalizeGroup(group || []));\n        var query = new Query(data),\n            groupDescriptorsWithoutCompare = normalizeGroupWithoutCompare(group || []),\n            normalizedSort = normalizeSort(options.sort || []),\n            sort = customGroupSort ? normalizedSort : groupDescriptorsWithoutCompare.concat(normalizedSort),\n            groupDescriptorsWithoutSort,\n            total,\n            filterCallback = options.filterCallback,\n            filter = options.filter,\n            skip = options.skip,\n            take = options.take;\n\n        if (sort && inPlace) {\n            query = query.sort(sort, undefined$1, undefined$1, inPlace);\n        }\n\n        if (filter) {\n            query = query.filter(filter);\n\n            if (filterCallback) {\n                query = filterCallback(query);\n            }\n\n            total = query.toArray().length;\n        }\n\n        if (sort) {\n            if (!inPlace) {\n                query = query.sort(sort);\n            }\n\n            if (group) {\n                data = query.toArray();\n            }\n        }\n\n        if (customGroupSort) {\n            query = query.group(group, data, options);\n\n            if (skip !== undefined$1 && take !== undefined$1 && !options.groupPaging) {\n                query = new Query(flatGroups(query.toArray())).range(skip, take);\n\n                groupDescriptorsWithoutSort = map(groupDescriptorsWithoutCompare, function(groupDescriptor) {\n                    return extend({}, groupDescriptor, {\n                        skipItemSorting: true\n                    });\n                });\n\n                query = query.group(groupDescriptorsWithoutSort, data, options);\n            }\n        } else {\n            if (skip !== undefined$1 && take !== undefined$1) {\n                total = query.data.length;\n\n                if (skip + take > total && options.virtual) {\n                    skip -= skip + take - total;\n                    skip = skip < 0 ? 0 : skip;\n                }\n                query = query.range(skip, take);\n            }\n\n            if (group && (!isEmptyObject(group) || group.length !== 0)) {\n                query = query.group(group, data, options);\n            }\n        }\n\n        return {\n            total: total,\n            data: query.toArray()\n        };\n    };\n\n    var LocalTransport = Class.extend({\n        init: function(options) {\n            this.data = options.data;\n        },\n\n        read: function(options) {\n            options.success(this.data);\n        },\n        update: function(options) {\n            options.success(options.data);\n        },\n        create: function(options) {\n            options.success(options.data);\n        },\n        destroy: function(options) {\n            options.success(options.data);\n        }\n    });\n\n    var RemoteTransport = Class.extend( {\n        init: function(options) {\n            var that = this, parameterMap;\n\n            options = that.options = extend({}, that.options, options);\n\n            each(crud, function(index, type) {\n                if (typeof options[type] === STRING) {\n                    options[type] = {\n                        url: options[type]\n                    };\n                }\n            });\n\n            that.cache = options.cache ? Cache.create(options.cache) : {\n                find: noop,\n                add: noop\n            };\n\n            parameterMap = options.parameterMap;\n\n            if (options.submit) {\n                that.submit = options.submit;\n            }\n\n            if (isFunction(options.push)) {\n                that.push = options.push;\n            }\n\n            if (!that.push) {\n                that.push = identity;\n            }\n\n            that.parameterMap = isFunction(parameterMap) ? parameterMap : function(options) {\n                var result = {};\n\n                each(options, function(option, value) {\n                    if (option in parameterMap) {\n                        option = parameterMap[option];\n                        if (isPlainObject(option)) {\n                            value = option.value(value);\n                            option = option.key;\n                        }\n                    }\n\n                    result[option] = value;\n                });\n\n                return result;\n            };\n        },\n\n        options: {\n            parameterMap: identity\n        },\n\n        create: function(options) {\n            return ajax(this.setup(options, CREATE));\n        },\n\n        read: function(options) {\n            var that = this,\n                success,\n                error,\n                result,\n                cache = that.cache;\n\n            options = that.setup(options, READ);\n\n            success = options.success || noop;\n            error = options.error || noop;\n\n            result = cache.find(options.data);\n\n            if (result !== undefined$1) {\n                success(result);\n            } else {\n                options.success = function(result) {\n                    cache.add(options.data, result);\n\n                    success(result);\n                };\n\n                $.ajax(options);\n            }\n        },\n\n        update: function(options) {\n            return ajax(this.setup(options, UPDATE));\n        },\n\n        destroy: function(options) {\n            return ajax(this.setup(options, DESTROY));\n        },\n\n        setup: function(options, type) {\n            options = options || {};\n\n            var that = this,\n                parameters,\n                operation = that.options[type],\n                data = isFunction(operation.data) ? operation.data(options.data) : operation.data;\n\n            options = extend(true, {}, operation, options);\n            parameters = extend(true, {}, data, options.data);\n\n            options.data = that.parameterMap(parameters, type);\n\n            if (isFunction(options.url)) {\n                options.url = options.url(parameters);\n            }\n\n            return options;\n        }\n    });\n\n    var Cache = Class.extend({\n        init: function() {\n            this._store = {};\n        },\n        add: function(key, data) {\n            if (key !== undefined$1) {\n                this._store[stringify(key)] = data;\n            }\n        },\n        find: function(key) {\n            return this._store[stringify(key)];\n        },\n        clear: function() {\n            this._store = {};\n        },\n        remove: function(key) {\n            delete this._store[stringify(key)];\n        }\n    });\n\n    Cache.create = function(options) {\n        var store = {\n            \"inmemory\": function() { return new Cache(); }\n        };\n\n        if (isPlainObject(options) && isFunction(options.find)) {\n            return options;\n        }\n\n        if (options === true) {\n            return new Cache();\n        }\n\n        return store[options]();\n    };\n\n    function serializeRecords(data, getters, modelInstance, originalFieldNames, fieldNames) {\n        var record,\n            getter,\n            originalName,\n            idx,\n            setters = {},\n            length;\n\n        for (idx = 0, length = data.length; idx < length; idx++) {\n            record = data[idx];\n            for (getter in getters) {\n                originalName = fieldNames[getter];\n\n                if (originalName && originalName !== getter) {\n                    if (!setters[originalName]) {\n                        setters[originalName] = kendo.setter(originalName);\n                    }\n                    setters[originalName](record, getters[getter](record));\n                    delete record[getter];\n                }\n            }\n        }\n    }\n\n    function convertRecords(data, getters, modelInstance, originalFieldNames, fieldNames) {\n        var record,\n            getter,\n            originalName,\n            idx,\n            length;\n\n        for (idx = 0, length = data.length; idx < length; idx++) {\n            record = data[idx];\n            for (getter in getters) {\n                record[getter] = modelInstance._parse(getter, getters[getter](record));\n\n                originalName = fieldNames[getter];\n                if (originalName && originalName !== getter) {\n                    delete record[originalName];\n                }\n            }\n        }\n    }\n\n    function convertGroup(data, getters, modelInstance, originalFieldNames, fieldNames) {\n        var record,\n            idx,\n            fieldName,\n            length;\n\n        for (idx = 0, length = data.length; idx < length; idx++) {\n            record = data[idx];\n\n            fieldName = originalFieldNames[record.field];\n            if (fieldName && fieldName != record.field) {\n                record.field = fieldName;\n            }\n\n            record.value = modelInstance._parse(record.field, record.value);\n\n            if (record.items) {\n                if (record.hasSubgroups) {\n                    convertGroup(record.items, getters, modelInstance, originalFieldNames, fieldNames);\n                } else {\n                    convertRecords(record.items, getters, modelInstance, originalFieldNames, fieldNames);\n                }\n            }\n        }\n    }\n\n    function wrapDataAccess(originalFunction, model, converter, getters, originalFieldNames, fieldNames) {\n        return function(data) {\n            data = originalFunction(data);\n\n            return wrapDataAccessBase(model, converter, getters, originalFieldNames, fieldNames)(data);\n        };\n    }\n\n    function wrapDataAccessBase(model, converter, getters, originalFieldNames, fieldNames) {\n        return function(data) {\n\n            if (data && !isEmptyObject(getters)) {\n                if (toString.call(data) !== \"[object Array]\" && !(data instanceof ObservableArray)) {\n                    data = [data];\n                }\n\n                converter(data, getters, new model(), originalFieldNames, fieldNames);\n            }\n\n            return data || [];\n        };\n    }\n\n    var DataReader = Class.extend({\n        init: function(schema) {\n            var that = this, member, get, model, base;\n\n            schema = schema || {};\n\n            for (member in schema) {\n                get = schema[member];\n\n                that[member] = typeof get === STRING ? getter(get) : get;\n            }\n\n            base = schema.modelBase || Model;\n\n            if (isPlainObject(that.model)) {\n                that.model = model = base.define(that.model);\n            }\n\n            var dataFunction = that.data.bind(that);\n\n            that._dataAccessFunction = dataFunction;\n\n            if (that.model) {\n                var groupsFunction = that.groups.bind(that),\n                    serializeFunction = that.serialize.bind(that),\n                    originalFieldNames = {},\n                    getters = {},\n                    serializeGetters = {},\n                    fieldNames = {},\n                    shouldSerialize = false,\n                    fieldName,\n                    name;\n\n                model = that.model;\n\n                if (model.fields) {\n                    each(model.fields, function(field, value) {\n                        var fromName;\n\n                        fieldName = field;\n\n                        if (isPlainObject(value) && value.field) {\n                            fieldName = value.field;\n                        } else if (typeof value === STRING) {\n                            fieldName = value;\n                        }\n\n                        if (isPlainObject(value) && value.from) {\n                            fromName = value.from;\n                        }\n\n                        shouldSerialize = shouldSerialize || (fromName && fromName !== field) || fieldName !== field;\n                        name = fromName || fieldName;\n                        getters[field] = name.indexOf(\".\") !== -1 ? getter(name, true) : getter(name);\n                        serializeGetters[field] = getter(field);\n                        originalFieldNames[fromName || fieldName] = field;\n                        fieldNames[field] = fromName || fieldName;\n                    });\n\n                    if (!schema.serialize && shouldSerialize) {\n                        that.serialize = wrapDataAccess(serializeFunction, model, serializeRecords, serializeGetters, originalFieldNames, fieldNames);\n                    }\n                }\n\n                that._dataAccessFunction = dataFunction;\n                that._wrapDataAccessBase = wrapDataAccessBase(model, convertRecords, getters, originalFieldNames, fieldNames);\n                that.data = wrapDataAccess(dataFunction, model, convertRecords, getters, originalFieldNames, fieldNames);\n                that.groups = wrapDataAccess(groupsFunction, model, convertGroup, getters, originalFieldNames, fieldNames);\n            }\n        },\n        errors: function(data) {\n            return data ? data.errors : null;\n        },\n        parse: identity,\n        data: identity,\n        total: function(data) {\n            return data.length;\n        },\n        groups: identity,\n        aggregates: function() {\n            return {};\n        },\n        serialize: function(data) {\n            return data;\n        }\n    });\n\n    function fillLastGroup(originalGroup, newGroup) {\n        var currOriginal;\n        var currentNew;\n\n        if (newGroup.items && newGroup.items.length) {\n            for (var i = 0; i < newGroup.items.length; i++) {\n                currOriginal = originalGroup.items[originalGroup.items.length - 1];\n                currentNew = newGroup.items[i];\n                if (currOriginal && currentNew) {\n                    if (currOriginal.hasSubgroups && currOriginal.value == currentNew.value) {\n                        fillLastGroup(currOriginal, currentNew);\n                    } else if (currOriginal.field && currOriginal.value == currentNew.value) {\n                        currOriginal.items.omitChangeEvent = true;\n                        currOriginal.items.push.apply(currOriginal.items, currentNew.items);\n                        currOriginal.items.omitChangeEvent = false;\n                    } else {\n                        originalGroup.items.omitChangeEvent = true;\n                        originalGroup.items.push.apply(originalGroup.items, [currentNew]);\n                        originalGroup.items.omitChangeEvent = false;\n                    }\n                } else if (currentNew) {\n                    originalGroup.items.omitChangeEvent = true;\n                    originalGroup.items.push.apply(originalGroup.items, [currentNew]);\n                    originalGroup.items.omitChangeEvent = false;\n                }\n            }\n        }\n    }\n    function mergeGroups(target, dest, skip, take) {\n        var group,\n            idx = 0,\n            items;\n\n        while (dest.length && take) {\n            group = dest[idx];\n            items = group.items;\n\n            var length = items.length;\n\n            if (target && target.field === group.field && target.value === group.value) {\n                if (target.hasSubgroups && target.items.length) {\n                    mergeGroups(target.items[target.items.length - 1], group.items, skip, take);\n                } else {\n                    items = items.slice(skip, skip + take);\n                    target.items = target.items.concat(items);\n                }\n                dest.splice(idx--, 1);\n            } else if (group.hasSubgroups && items.length) {\n                mergeGroups(group, items, skip, take);\n                if (!group.items.length) {\n                    dest.splice(idx--, 1);\n                }\n            } else {\n                items = items.slice(skip, skip + take);\n                group.items = items;\n\n                if (!group.items.length) {\n                    dest.splice(idx--, 1);\n                }\n            }\n\n            if (items.length === 0) {\n                skip -= length;\n            } else {\n                skip = 0;\n                take -= items.length;\n            }\n\n            if (++idx >= dest.length) {\n                break;\n            }\n        }\n\n        if (idx < dest.length) {\n            dest.splice(idx, dest.length - idx);\n        }\n    }\n\n    function flatGroups(groups, indexFunction) {\n        var result = [];\n        var groupsLength = (groups || []).length;\n        var group;\n        var items;\n        var indexFn = isFunction(indexFunction) ? indexFunction : function(array, index) {\n            return array[index];\n        };\n\n        for (var groupIndex = 0; groupIndex < groupsLength; groupIndex++) {\n            group = indexFn(groups, groupIndex);\n\n            if (group.hasSubgroups) {\n                result = result.concat(flatGroups(group.items));\n            } else {\n                items = group.items;\n\n                for (var itemIndex = 0; itemIndex < items.length; itemIndex++) {\n                    result.push(indexFn(items, itemIndex));\n                }\n            }\n        }\n        return result;\n    }\n\n    function flattenGroups(data) {\n        var idx,\n            result = [],\n            length,\n            items,\n            itemIndex;\n\n        for (idx = 0, length = data.length; idx < length; idx++) {\n            var group = data.at(idx);\n            if (group.items) {\n                if (group.hasSubgroups) {\n                    result = result.concat(flattenGroups(group.items));\n                } else {\n                    items = group.items;\n                    for (itemIndex = 0; itemIndex < items.length; itemIndex++) {\n                        result.push(items.at(itemIndex));\n                    }\n                }\n            }\n        }\n        return result;\n    }\n\n    function wrapGroupItems(data, model) {\n        var idx, length, group;\n        if (model) {\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                group = data.at(idx);\n                if (group.items) {\n                    if (group.hasSubgroups) {\n                        wrapGroupItems(group.items, model);\n                    } else {\n                        group.items = new LazyObservableArray(group.items, model, group.items._events);\n                    }\n                }\n            }\n        }\n    }\n\n    function eachGroupItems(data, func) {\n        for (var idx = 0; idx < data.length; idx++) {\n            if (data[idx].hasSubgroups) {\n                if (eachGroupItems(data[idx].items, func)) {\n                    return true;\n                }\n            } else if (func(data[idx].items, data[idx])) {\n                return true;\n            }\n        }\n    }\n\n    function replaceInRanges(ranges, data, item, observable) {\n        for (var idx = 0; idx < ranges.length; idx++) {\n            if (ranges[idx].data === data) {\n                break;\n            }\n            if (replaceInRange(ranges[idx].data, item, observable)) {\n                break;\n            }\n        }\n    }\n\n    function replaceInRange(items, item, observable) {\n        for (var idx = 0, length = items.length; idx < length; idx++) {\n            if (items[idx] && items[idx].hasSubgroups) {\n                return replaceInRange(items[idx].items, item, observable);\n            } else if (items[idx] === item || items[idx] === observable) {\n               items[idx] = observable;\n               return true;\n            }\n        }\n    }\n\n    function replaceWithObservable(view, data, ranges, type, serverGrouping) {\n        for (var viewIndex = 0, length = view.length; viewIndex < length; viewIndex++) {\n            var item = view[viewIndex];\n\n            if (!item || item instanceof type) {\n                continue;\n            }\n\n            if (item.hasSubgroups !== undefined$1 && !serverGrouping) {\n                replaceWithObservable(item.items, data, ranges, type, serverGrouping);\n            } else {\n                for (var idx = 0; idx < data.length; idx++) {\n                    if (data[idx] === item) {\n                        view[viewIndex] = data.at(idx);\n                        replaceInRanges(ranges, data, item, view[viewIndex]);\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    function removeModel(data, model) {\n        if (!data) {\n            return;\n        }\n        var length = data.length;\n        var dataItem;\n        var idx;\n\n        for (idx = 0; idx < length; idx++) {\n            dataItem = data[idx];\n\n            if (dataItem.uid && dataItem.uid == model.uid) {\n                data.splice(idx, 1);\n                return dataItem;\n            }\n        }\n    }\n\n    function indexOfPristineModel(data, model) {\n        if (model) {\n            return indexOf(data, function(item) {\n                return (item.uid && item.uid == model.uid) || (item[model.idField] === model.id && model.id !== model._defaultId);\n            });\n        }\n        return -1;\n    }\n\n    function indexOfModel(data, model) {\n        if (model) {\n            return indexOf(data, function(item) {\n                return item.uid == model.uid;\n            });\n        }\n        return -1;\n    }\n\n    function indexOf(data, comparer) {\n        var idx, length;\n        if (!data) {\n            return;\n        }\n\n        for (idx = 0, length = data.length; idx < length; idx++) {\n            if (comparer(data[idx])) {\n                return idx;\n            }\n        }\n\n        return -1;\n    }\n\n    function fieldNameFromModel(fields, name) {\n        if (fields && !isEmptyObject(fields)) {\n            var descriptor = fields[name];\n            var fieldName;\n            if (isPlainObject(descriptor)) {\n                fieldName = descriptor.from || descriptor.field || name;\n            } else {\n                fieldName = fields[name] || name;\n            }\n\n            if (isFunction(fieldName)) {\n                return name;\n            }\n\n            return fieldName;\n        }\n        return name;\n    }\n\n    function convertFilterDescriptorsField(descriptor, model) {\n        var idx,\n            length,\n            target = {};\n\n        for (var field in descriptor) {\n            if (field !== \"filters\") {\n                target[field] = descriptor[field];\n            }\n        }\n\n        if (descriptor.filters) {\n            target.filters = [];\n            for (idx = 0, length = descriptor.filters.length; idx < length; idx++) {\n                target.filters[idx] = convertFilterDescriptorsField(descriptor.filters[idx], model);\n            }\n        } else {\n            target.field = fieldNameFromModel(model.fields, target.field);\n        }\n        return target;\n    }\n\n    function convertDescriptorsField(descriptors, model) {\n        var idx,\n            length,\n            result = [],\n            target,\n            descriptor;\n\n        for (idx = 0, length = descriptors.length; idx < length; idx ++) {\n            target = {};\n\n            descriptor = descriptors[idx];\n\n            for (var field in descriptor) {\n                target[field] = descriptor[field];\n            }\n\n            target.field = fieldNameFromModel(model.fields, target.field);\n\n            if (target.aggregates && isArray(target.aggregates)) {\n                target.aggregates = convertDescriptorsField(target.aggregates, model);\n            }\n            result.push(target);\n        }\n        return result;\n    }\n\n    var DataSource = Observable.extend({\n        init: function(options) {\n            var that = this, model, data;\n\n            if (options) {\n                data = options.data;\n            }\n\n            options = that.options = extend({}, that.options, options);\n\n            that._map = {};\n            that._prefetch = {};\n            that._data = [];\n            that._pristineData = [];\n            that._ranges = [];\n            that._view = [];\n            that._pristineTotal = 0;\n            that._destroyed = [];\n            that._pageSize = options.pageSize;\n            that._page = options.page || (options.pageSize ? 1 : undefined$1);\n            that._sort = normalizeSort(options.sort);\n            that._sortFields = sortFields(options.sort);\n            that._filter = normalizeFilter(options.filter);\n            that._group = normalizeGroup(options.group);\n            that._aggregate = options.aggregate;\n            that._total = options.total;\n            that._groupPaging = options.groupPaging;\n\n            if (that._groupPaging) {\n                that._groupsState = {};\n            }\n            that._shouldDetachObservableParents = true;\n\n            Observable.fn.init.call(that);\n\n            that.transport = Transport.create(options, data, that);\n\n            if (isFunction(that.transport.push)) {\n                that.transport.push({\n                    pushCreate: that._pushCreate.bind(that),\n                    pushUpdate: that._pushUpdate.bind(that),\n                    pushDestroy: that._pushDestroy.bind(that)\n                });\n            }\n\n            if (options.offlineStorage != null) {\n                if (typeof options.offlineStorage == \"string\") {\n                    var key = options.offlineStorage;\n\n                    that._storage = {\n                        getItem: function() {\n                            return JSON.parse(localStorage.getItem(key));\n                        },\n                        setItem: function(item) {\n                            localStorage.setItem(key, stringify(that.reader.serialize(item)));\n                        }\n                    };\n                } else {\n                    that._storage = options.offlineStorage;\n                }\n            }\n\n            that.reader = new kendo.data.readers[options.schema.type || \"json\" ](options.schema);\n\n            model = that.reader.model || {};\n\n            that._detachObservableParents();\n\n            that._data = that._observe(that._data);\n            that._online = true;\n\n            that.bind([\"push\", ERROR, CHANGE, REQUESTSTART, SYNC, REQUESTEND, PROGRESS], options);\n        },\n\n        options: {\n            data: null,\n            schema: {\n               modelBase: Model\n            },\n            offlineStorage: null,\n            serverSorting: false,\n            serverPaging: false,\n            serverFiltering: false,\n            serverGrouping: false,\n            serverAggregates: false,\n            batch: false,\n            inPlaceSort: false\n        },\n\n        clone: function() {\n            return this;\n        },\n\n        online: function(value) {\n            if (value !== undefined$1) {\n                if (this._online != value) {\n                    this._online = value;\n\n                    if (value) {\n                        return this.sync();\n                    }\n                }\n\n                return $.Deferred().resolve().promise();\n            } else {\n                return this._online;\n            }\n        },\n\n        offlineData: function(state) {\n            if (this.options.offlineStorage == null) {\n                return null;\n            }\n\n            if (state !== undefined$1) {\n                return this._storage.setItem(state);\n            }\n\n            return this._storage.getItem() || [];\n        },\n\n        _isGrouped: function() {\n            var group = this.group() || [];\n\n            return group.length;\n        },\n\n        _isServerGrouped: function() {\n            var group = this.group() || [];\n\n            return this.options.serverGrouping && group.length;\n        },\n\n        _isServerGroupPaged: function() {\n            return this._isServerGrouped() && this._groupPaging;\n        },\n\n        _isGroupPaged: function() {\n            var group = this._group || [];\n\n            return this._groupPaging && group.length;\n        },\n\n        _pushCreate: function(result) {\n            this._push(result, \"pushCreate\");\n        },\n\n        _pushUpdate: function(result) {\n            this._push(result, \"pushUpdate\");\n        },\n\n        _pushDestroy: function(result) {\n            this._push(result, \"pushDestroy\");\n        },\n\n        _push: function(result, operation) {\n            var data = this._readData(result);\n\n            if (!data) {\n                data = result;\n            }\n\n            this[operation](data);\n        },\n\n        _flatData: function(data, skip) {\n            if (data) {\n                if (this._isServerGrouped()) {\n                    return flattenGroups(data);\n                }\n\n                if (!skip) {\n                    for (var idx = 0; idx < data.length; idx++) {\n                        data.at(idx);\n                    }\n                }\n            }\n\n            return data;\n        },\n\n        parent: noop,\n\n        get: function(id) {\n            var idx, length, data = this._flatData(this._data, this.options.useRanges);\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if (data[idx].id == id) {\n                    return data[idx];\n                }\n            }\n        },\n\n        getByUid: function(id) {\n            return this._getByUid(id, this._data);\n        },\n\n        _getByUid: function(id, dataItems) {\n            var idx, length, data = this._flatData(dataItems, this.options.useRanges);\n\n            if (!data) {\n                return;\n            }\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if (data[idx].uid == id) {\n                    return data[idx];\n                }\n            }\n        },\n\n        indexOf: function(model) {\n            return indexOfModel(this._data, model);\n        },\n\n        at: function(index) {\n            return this._data.at(index);\n        },\n\n        data: function(value) {\n            var that = this;\n            if (value !== undefined$1) {\n                that._detachObservableParents();\n                that._data = this._observe(value);\n\n                that._pristineData = value.slice(0);\n\n                that._storeData();\n\n                that._ranges = [];\n                that.trigger(\"reset\");\n                that._addRange(that._data);\n\n                that._total = that._data.length;\n                that._pristineTotal = that._total;\n\n                that._process(that._data);\n            } else {\n                if (that._data) {\n                    for (var idx = 0; idx < that._data.length; idx++) {\n                        that._data.at(idx);\n                    }\n                }\n\n                return that._data;\n            }\n        },\n\n        view: function(value) {\n            if (value === undefined$1) {\n                return this._view;\n            } else {\n                this._view = this._observeView(value);\n            }\n        },\n\n        _observeView: function(data) {\n            var that = this;\n            replaceWithObservable(data, that._data, that._ranges, that.reader.model || ObservableObject, that._isServerGrouped());\n\n            var view = new LazyObservableArray(data, that.reader.model);\n            view.parent = function() { return that.parent(); };\n            return view;\n        },\n\n        flatView: function() {\n            var groups = this.group() || [];\n\n            if (groups.length) {\n                return flattenGroups(this._view);\n            } else {\n                return this._view;\n            }\n        },\n\n        add: function(model) {\n            return this.insert(this._data.length, model);\n        },\n\n        _createNewModel: function(model) {\n            if (this.reader.model) {\n                return new this.reader.model(model);\n            }\n\n            if (model instanceof ObservableObject) {\n                return model;\n            }\n\n            return new ObservableObject(model);\n        },\n\n        insert: function(index, model) {\n            if (!model) {\n                model = index;\n                index = 0;\n            }\n\n            if (!(model instanceof Model)) {\n                model = this._createNewModel(model);\n            }\n\n            if (this._isServerGrouped()) {\n                this._data.splice(index, 0, this._wrapInEmptyGroup(model));\n            } else {\n                this._data.splice(index, 0, model);\n            }\n\n            this._insertModelInRange(index, model);\n\n            return model;\n        },\n\n        pushInsert: function(index, items) {\n            var that = this;\n            var rangeSpan = that._getCurrentRangeSpan();\n\n            if (!items) {\n                items = index;\n                index = 0;\n            }\n\n            if (!isArray(items)) {\n                items = [items];\n            }\n\n            var pushed = [];\n            var autoSync = this.options.autoSync;\n            this.options.autoSync = false;\n\n            try {\n                for (var idx = 0; idx < items.length; idx ++) {\n                    var item = items[idx];\n\n                    var result = this.insert(index, item);\n\n                    pushed.push(result);\n\n                    var pristine = result.toJSON();\n\n                    if (this._isServerGrouped()) {\n                        pristine = this._wrapInEmptyGroup(pristine);\n                    }\n\n                    this._pristineData.push(pristine);\n\n                    if (rangeSpan && rangeSpan.length) {\n                        $(rangeSpan).last()[0].pristineData.push(pristine);\n                    }\n\n                    index++;\n                }\n            } finally {\n                this.options.autoSync = autoSync;\n            }\n\n            if (pushed.length) {\n                this.trigger(\"push\", {\n                    type: \"create\",\n                    items: pushed\n                });\n            }\n        },\n\n        pushCreate: function(items) {\n            this.pushInsert(this._data.length, items);\n        },\n\n        pushUpdate: function(items) {\n            if (!isArray(items)) {\n                items = [items];\n            }\n\n            var pushed = [];\n\n            for (var idx = 0; idx < items.length; idx ++) {\n                var item = items[idx];\n                var model = this._createNewModel(item);\n\n                var target = this.get(model.id);\n\n                if (target) {\n                    pushed.push(target);\n\n                    target.accept(item);\n\n                    target.trigger(CHANGE);\n\n                    this._updatePristineForModel(target, item);\n                } else {\n                    this.pushCreate(item);\n                }\n            }\n\n            if (pushed.length) {\n                this.trigger(\"push\", {\n                    type: \"update\",\n                    items: pushed\n                });\n            }\n        },\n\n        pushDestroy: function(items) {\n            var pushed = this._removeItems(items);\n\n            if (pushed.length) {\n                this.trigger(\"push\", {\n                    type: \"destroy\",\n                    items: pushed\n                });\n            }\n        },\n\n        _removeItems: function(items, removePristine) {\n            if (!isArray(items)) {\n                items = [items];\n            }\n\n            var shouldRemovePristine = typeof removePristine !== \"undefined\" ? removePristine : true;\n\n            var destroyed = [];\n            var autoSync = this.options.autoSync;\n            this.options.autoSync = false;\n            try {\n                for (var idx = 0; idx < items.length; idx ++) {\n                    var item = items[idx];\n                    var model = this._createNewModel(item);\n                    var found = false;\n\n                    this._eachItem(this._data, function(items) {\n                        for (var idx = 0; idx < items.length; idx++) {\n                            var item = items.at(idx);\n                            if (item.id === model.id) {\n                                destroyed.push(item);\n                                items.splice(idx, 1);\n                                found = true;\n                                break;\n                            }\n                        }\n                    });\n\n                    if (found && shouldRemovePristine) {\n                        this._removePristineForModel(model);\n                        this._destroyed.pop();\n                    }\n                }\n            } finally {\n                this.options.autoSync = autoSync;\n            }\n\n            return destroyed;\n        },\n\n        pushMove: function(index, items) {\n            var pushed = this._moveItems(index, items);\n\n            if (pushed.length) {\n                this.trigger(\"push\", {\n                    type: \"update\",\n                    items: pushed\n                });\n            }\n        },\n\n        _moveItems: function(index, items) {\n            if (!isArray(items)) {\n                items = [items];\n            }\n\n            var moved = [];\n            var autoSync = this.options.autoSync;\n            this.options.autoSync = false;\n\n            try {\n                for (var i = 0; i < items.length; i ++) {\n                    var item = items[i];\n                    var model = this._createNewModel(item);\n\n                    this._eachItem(this._data, function(dataItems) {\n                        for (var idx = 0; idx < dataItems.length; idx++) {\n                            var dataItem = dataItems.at(idx);\n                            if (dataItem.id === model.id) {\n                                moved.push(dataItem);\n                                dataItems.splice(index >= idx ? --index : index, 0, dataItems.splice(idx, 1)[0]);\n                                index++;\n                                break;\n                            }\n                        }\n                    });\n                }\n            } finally {\n                this.options.autoSync = autoSync;\n            }\n\n            return moved;\n        },\n\n        remove: function(model) {\n            var result,\n                that = this,\n                hasGroups = that._isServerGrouped();\n\n            if (hasGroups && model.uid && (!model.isNew || !model.isNew())) {\n                that._pushInDestroyed(model);\n            }\n\n            this._eachItem(that._data, function(items) {\n                result = removeModel(items, model);\n\n                if (result && hasGroups) {\n                    return true;\n                }\n            });\n\n            this._removeModelFromRanges(model);\n\n            return model;\n        },\n\n        destroyed: function() {\n            return this._destroyed;\n        },\n\n        created: function() {\n            var idx,\n                length,\n                result = [],\n                data = this._flatData(this._data, this.options.useRanges);\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if (data[idx].isNew && data[idx].isNew()) {\n                    result.push(data[idx]);\n                }\n            }\n            return result;\n        },\n\n        updated: function() {\n            var idx,\n                length,\n                result = [],\n                data = this._flatData(this._data, this.options.useRanges);\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if ((data[idx].isNew && !data[idx].isNew()) && data[idx].dirty) {\n                    result.push(data[idx]);\n                }\n            }\n            return result;\n        },\n\n        sync: function() {\n            var that = this,\n                created = [],\n                updated = [],\n                destroyed = that._destroyed;\n\n            var promise = $.Deferred().resolve().promise();\n\n            if (that.online()) {\n\n                if (!that.reader.model) {\n                    return promise;\n                }\n\n                created = that.created();\n                updated = that.updated();\n\n                var promises = [];\n\n                if (that.options.batch && that.transport.submit) {\n                    promises = that._sendSubmit(created, updated, destroyed);\n                } else {\n                    promises.push.apply(promises, that._send(\"create\", created));\n                    promises.push.apply(promises, that._send(\"update\", updated));\n                    promises.push.apply(promises, that._send(\"destroy\", destroyed));\n                }\n\n                promise = $.when\n                 .apply(null, promises)\n                 .then(function() {\n                    var idx, length;\n\n                    for (idx = 0, length = arguments.length; idx < length; idx++) {\n                        if (arguments[idx]) {\n                            that._accept(arguments[idx]);\n                        }\n                    }\n\n                    that._storeData(true);\n\n                    that._syncEnd();\n\n                    that._change({ action: \"sync\" });\n\n                    that.trigger(SYNC);\n\n                    if (that._isServerGroupPaged()) {\n                        that.read();\n                    }\n                });\n            } else {\n                that._storeData(true);\n\n                that._syncEnd();\n\n                that._change({ action: \"sync\" });\n            }\n\n            return promise;\n        },\n\n        _syncEnd: noop,\n\n        cancelChanges: function(model) {\n            var that = this;\n\n            if (model instanceof kendo.data.Model) {\n                that._cancelModel(model);\n            } else {\n                that._destroyed = [];\n                that._detachObservableParents();\n                that._data = that._observe(that._pristineData);\n                if (that.options.serverPaging) {\n                    that._total = that._pristineTotal;\n                }\n\n                that._ranges = [];\n                that._addRange(that._data, 0);\n\n                that._changesCanceled();\n\n                that._change();\n\n                that._markOfflineUpdatesAsDirty();\n\n                if (that._isServerGrouped()) {\n                    that.read();\n                }\n            }\n        },\n\n        _changesCanceled: noop,\n\n        _markOfflineUpdatesAsDirty: function() {\n            var that = this;\n\n            if (that.options.offlineStorage != null) {\n                that._eachItem(that._data, function(items) {\n                    for (var idx = 0; idx < items.length; idx++) {\n                        var item = items.at(idx);\n                        if (item.__state__ == \"update\" || item.__state__ == \"create\") {\n                            item.dirty = true;\n                        }\n                    }\n                });\n            }\n        },\n\n        hasChanges: function() {\n            var idx,\n                length,\n                data = this._flatData(this._data, this.options.useRanges);\n\n            if (this._destroyed.length) {\n                return true;\n            }\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if ((data[idx].isNew && data[idx].isNew()) || data[idx].dirty) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _accept: function(result) {\n            var that = this,\n                models = result.models,\n                response = result.response,\n                idx = 0,\n                serverGroup = that._isServerGrouped(),\n                pristine = that._pristineData,\n                type = result.type,\n                length;\n\n            that.trigger(REQUESTEND, { response: response, type: type });\n\n            if (response && !isEmptyObject(response)) {\n                response = that.reader.parse(response);\n\n                if (that._handleCustomErrors(response)) {\n                    return;\n                }\n\n                response = that.reader.data(response);\n\n                if (!isArray(response)) {\n                    response = [response];\n                }\n            } else {\n                response = $.map(models, function(model) { return model.toJSON(); } );\n            }\n\n            if (type === \"destroy\") {\n                that._destroyed = [];\n            }\n\n            for (idx = 0, length = models.length; idx < length; idx++) {\n                if (type !== \"destroy\") {\n                    models[idx].accept(response[idx]);\n\n                    if (type === \"create\") {\n                        pristine.push(serverGroup ? that._wrapInEmptyGroup(models[idx].toJSON()) : response[idx]);\n                    } else if (type === \"update\") {\n                        that._updatePristineForModel(models[idx], response[idx]);\n                    }\n                } else {\n                    that._removePristineForModel(models[idx]);\n                }\n            }\n        },\n\n        _updatePristineForModel: function(model, values) {\n            this._executeOnPristineForModel(model, function(index, items) {\n                kendo.deepExtend(items[index], values);\n            });\n        },\n\n        _executeOnPristineForModel: function(model, callback) {\n            this._eachPristineItem(\n                function(items) {\n                    var index = indexOfPristineModel(items, model);\n                    if (index > -1) {\n                        callback(index, items);\n                        return true;\n                    }\n                });\n        },\n\n        _removePristineForModel: function(model) {\n            this._executeOnPristineForModel(model, function(index, items) {\n                items.splice(index, 1);\n            });\n        },\n\n        _readData: function(data) {\n            var read = !this._isServerGrouped() ? this.reader.data : this.reader.groups;\n            return read.call(this.reader, data);\n        },\n\n        _eachPristineItem: function(callback) {\n            var that = this;\n            var options = that.options;\n            var rangeSpan = that._getCurrentRangeSpan();\n\n            that._eachItem(that._pristineData, callback);\n\n            if (options.serverPaging && options.useRanges) {\n                each(rangeSpan, function(i, range) {\n                    that._eachItem(range.pristineData, callback);\n                });\n            }\n        },\n\n       _eachItem: function(data, callback) {\n            if (data && data.length) {\n                if (this._isServerGrouped()) {\n                    eachGroupItems(data, callback);\n                } else {\n                    callback(data);\n                }\n            }\n        },\n\n        _pristineForModel: function(model) {\n            var pristine,\n                idx,\n                callback = function(items) {\n                    idx = indexOfPristineModel(items, model);\n                    if (idx > -1) {\n                        pristine = items[idx];\n                        return true;\n                    }\n                };\n\n            this._eachPristineItem(callback);\n\n            return pristine;\n        },\n\n        _cancelModel: function(model) {\n            var that = this;\n            var pristine = this._pristineForModel(model);\n\n            this._eachItem(this._data, function(items) {\n                var idx = indexOfModel(items, model);\n                if (idx >= 0) {\n                    if (pristine && (!model.isNew() || pristine.__state__)) {\n                        items[idx].accept(pristine);\n\n                        if (pristine.__state__ == \"update\") {\n                            items[idx].dirty = true;\n                        }\n\n                    } else {\n                        that._modelCanceled(model);\n\n                        items.splice(idx, 1);\n\n                        that._removeModelFromRanges(model);\n                    }\n                }\n            });\n        },\n\n        _modelCanceled: noop,\n\n        _submit: function(promises, data) {\n            var that = this;\n\n            that.trigger(REQUESTSTART, { type: \"submit\" });\n\n            that.trigger(PROGRESS);\n\n            that.transport.submit(extend({\n                success: function(response, type) {\n                    var promise = $.grep(promises, function(x) {\n                        return x.type == type;\n                    })[0];\n\n                    if (promise) {\n                        promise.resolve({\n                            response: response,\n                            models: promise.models,\n                            type: type\n                        });\n                    }\n                },\n                error: function(response, status, error) {\n                    for (var idx = 0; idx < promises.length; idx++) {\n                        promises[idx].reject(response);\n                    }\n\n                    that.error(response, status, error);\n                }\n            }, data));\n        },\n\n        _sendSubmit: function(created, updated, destroyed) {\n            var that = this,\n                promises = [];\n\n            if (that.options.batch) {\n                if (created.length) {\n                    promises.push($.Deferred(function(deferred) {\n                        deferred.type = \"create\";\n                        deferred.models = created;\n                    }));\n                }\n\n                if (updated.length) {\n                    promises.push($.Deferred(function(deferred) {\n                        deferred.type = \"update\";\n                        deferred.models = updated;\n                    }));\n                }\n\n                if (destroyed.length) {\n                    promises.push($.Deferred(function(deferred) {\n                        deferred.type = \"destroy\";\n                        deferred.models = destroyed;\n                    }));\n                }\n\n                that._submit(promises, {\n                    data: {\n                        created: that.reader.serialize(toJSON(created)),\n                        updated: that.reader.serialize(toJSON(updated)),\n                        destroyed: that.reader.serialize(toJSON(destroyed))\n                    }\n                });\n            }\n\n            return promises;\n        },\n\n        _promise: function(data, models, type) {\n            var that = this;\n\n            return $.Deferred(function(deferred) {\n                that.trigger(REQUESTSTART, { type: type });\n\n                that.trigger(PROGRESS);\n\n                that.transport[type].call(that.transport, extend({\n                    success: function(response) {\n                        deferred.resolve({\n                            response: response,\n                            models: models,\n                            type: type\n                        });\n                    },\n                    error: function(response, status, error) {\n                        deferred.reject(response);\n                        that.error(response, status, error);\n                    }\n                }, data));\n            }).promise();\n        },\n\n        _send: function(method, data) {\n            var that = this,\n                idx,\n                length,\n                promises = [],\n                converted = that.reader.serialize(toJSON(data));\n\n            if (that.options.batch) {\n                if (data.length) {\n                    promises.push(that._promise( { data: { models: converted } }, data , method));\n                }\n            } else {\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    promises.push(that._promise( { data: converted[idx] }, [ data[idx] ], method));\n                }\n            }\n\n            return promises;\n        },\n\n        read: function(data) {\n            var that = this, params = that._params(data);\n            var deferred = $.Deferred();\n\n            that._queueRequest(params, function() {\n                var isPrevented = that.trigger(REQUESTSTART, { type: \"read\" });\n                if (!isPrevented) {\n                    that.trigger(PROGRESS);\n\n                    that._ranges = [];\n                    that.trigger(\"reset\");\n                    if (that.online()) {\n                        that.transport.read({\n                            data: params,\n                            success: function(data) {\n                                that._ranges = [];\n                                that.success(data, params);\n\n                                deferred.resolve();\n                            },\n                            error: function() {\n                                var args = slice.call(arguments);\n\n                                that.error.apply(that, args);\n\n                                deferred.reject.apply(deferred, args);\n                            }\n                        });\n                    } else if (that.options.offlineStorage != null) {\n                        that.success(that.offlineData(), params);\n\n                        deferred.resolve();\n                    }\n                } else {\n                    that._dequeueRequest();\n\n                    deferred.resolve(isPrevented);\n                }\n            });\n\n            return deferred.promise();\n        },\n\n        _readAggregates: function(data) {\n            return this.reader.aggregates(data);\n        },\n\n        success: function(data) {\n            var that = this,\n                options = that.options,\n                items,\n                replaceSubset;\n\n            that.trigger(REQUESTEND, { response: data, type: \"read\" });\n\n            if (that.online()) {\n                data = that.reader.parse(data);\n\n                if (that._handleCustomErrors(data)) {\n                    that._dequeueRequest();\n                    return;\n                }\n\n                that._total = that.reader.total(data);\n\n                if (that._isServerGroupPaged()) {\n                    that._serverGroupsTotal = that._total;\n                }\n\n                if (that._pageSize > that._total) {\n                    that._pageSize = that._total;\n                    if (that.options.pageSize && that.options.pageSize > that._pageSize) {\n                        that._pageSize = that.options.pageSize;\n                    }\n                }\n\n                if (that._aggregate && options.serverAggregates) {\n                    that._aggregateResult = that._readAggregates(data);\n                }\n\n                data = that._readData(data);\n\n                that._destroyed = [];\n            } else {\n                data = that._readData(data);\n\n                items = [];\n                var itemIds = {};\n                var model = that.reader.model;\n                var idField = model ? model.idField : \"id\";\n                var idx;\n\n                for (idx = 0; idx < this._destroyed.length; idx++) {\n                    var id = this._destroyed[idx][idField];\n                    itemIds[id] = id;\n                }\n\n                for (idx = 0; idx < data.length; idx++) {\n                    var item = data[idx];\n                    var state = item.__state__;\n                    if (state == \"destroy\") {\n                        if (!itemIds[item[idField]]) {\n                            this._pushInDestroyed(this._createNewModel(item));\n                        }\n                    } else {\n                        items.push(item);\n                    }\n                }\n\n                data = items;\n\n                that._total = data.length;\n            }\n\n            that._pristineTotal = that._total;\n            replaceSubset = that._skip && that._data.length && that._skip < that._data.length;\n\n            if (that.options.endless) {\n                if (replaceSubset) {\n                    that._pristineData.splice(that._skip, that._pristineData.length);\n                }\n                items = data.slice(0);\n                for (var j = 0; j < items.length; j++) {\n                    that._pristineData.push(items[j]);\n                }\n            } else {\n                that._pristineData = data.slice(0);\n            }\n\n            that._detachObservableParents();\n\n            if (that.options.endless) {\n                that._data.unbind(CHANGE, that._changeHandler);\n\n                if (that._isServerGrouped() && that._data[that._data.length - 1].value === data[0].value) {\n                    fillLastGroup(that._data[that._data.length - 1], data[0]);\n                    data.shift();\n                }\n\n                data = that._observe(data);\n                if (replaceSubset) {\n                    that._data.splice(that._skip, that._data.length);\n                }\n                for (var i = 0; i < data.length; i++) {\n                    that._data.push(data[i]);\n                }\n                that._data.bind(CHANGE, that._changeHandler);\n            } else {\n                that._data = that._observe(data);\n            }\n\n            that._markOfflineUpdatesAsDirty();\n\n            that._storeData();\n\n            that._addRange(that._data);\n\n            that._process(that._data);\n\n            that._dequeueRequest();\n        },\n\n        _detachObservableParents: function() {\n            if (this._data && this._shouldDetachObservableParents) {\n                for (var idx = 0; idx < this._data.length; idx++) {\n                    if (this._data[idx].parent) {\n                        this._data[idx].parent = noop;\n                    }\n                }\n            }\n        },\n\n        _storeData: function(updatePristine) {\n            var serverGrouping = this._isServerGrouped();\n            var model = this.reader.model;\n\n            function items(data) {\n                var state = [];\n\n                for (var idx = 0; idx < data.length; idx++) {\n                    var dataItem = data.at(idx);\n                    var item = dataItem.toJSON();\n\n                    if (serverGrouping && dataItem.items) {\n                        item.items = items(dataItem.items);\n                    } else {\n                        item.uid = dataItem.uid;\n\n                        if (model) {\n                            if (dataItem.isNew()) {\n                                item.__state__ = \"create\";\n                            } else if (dataItem.dirty) {\n                                item.__state__ = \"update\";\n                            }\n                        }\n                    }\n                    state.push(item);\n                }\n\n                return state;\n            }\n\n            if (this.options.offlineStorage != null) {\n                var state = items(this._data);\n\n                var destroyed = [];\n\n                for (var idx = 0; idx < this._destroyed.length; idx++) {\n                    var item = this._destroyed[idx].toJSON();\n                    item.__state__ = \"destroy\";\n                    destroyed.push(item);\n                }\n\n                this.offlineData(state.concat(destroyed));\n\n                if (updatePristine) {\n                    this._pristineData = this.reader.reader ? this.reader.reader._wrapDataAccessBase(state) : this.reader._wrapDataAccessBase(state);\n                }\n            }\n        },\n\n        _addRange: function(data, skip) {\n            var that = this,\n                start = typeof (skip) !== \"undefined\" ? skip : (that._skip || 0),\n                end,\n                range = {\n                    data: data,\n                    pristineData: data.toJSON(),\n                    timestamp: that._timeStamp()\n                };\n\n            if (this._isGroupPaged()) {\n                end = start + data.length;\n                range.outerStart = start;\n                range.outerEnd = end;\n            } else {\n                end = start + that._flatData(data, true).length;\n            }\n\n            range.start = start;\n            range.end = end;\n            that._ranges.push(range);\n            that._sortRanges();\n\n            if (that._isGroupPaged()) {\n                if (!that._groupsFlat) {\n                    that._groupsFlat = [];\n                }\n                that._appendToGroupsFlat(range.data);\n                that._updateOuterRangesLength();\n            }\n        },\n\n        _appendToGroupsFlat: function(data) {\n            var length = data.length;\n\n            for (var i = 0; i < length; i++) {\n                this._groupsFlat.push(data[i]);\n            }\n        },\n\n        _getGroupByUid: function(uid) {\n            var length = this._groupsFlat.length;\n            var group;\n\n            for (var i = 0; i < length; i++) {\n                group = this._groupsFlat[i];\n                if (group.uid === uid) {\n                    return group;\n                }\n            }\n        },\n\n        _sortRanges: function() {\n            this._ranges.sort(function(x, y) {\n                return x.start - y.start;\n            });\n        },\n\n        error: function(xhr, status, errorThrown) {\n            this._dequeueRequest();\n            this.trigger(REQUESTEND, { });\n            this.trigger(ERROR, { xhr: xhr, status: status, errorThrown: errorThrown });\n        },\n\n        _params: function(data) {\n            var that = this,\n                options = extend({\n                    take: that.take(),\n                    skip: that.skip(),\n                    page: that.page(),\n                    pageSize: that.pageSize(),\n                    sort: that._sort,\n                    filter: that._filter,\n                    group: that._group,\n                    aggregate: that._aggregate,\n                    groupPaging: !!that._groupPaging\n                }, data);\n\n            if (!that.options.serverPaging) {\n                delete options.take;\n                delete options.skip;\n                delete options.page;\n                delete options.pageSize;\n            }\n\n            if (!that.options.serverGrouping) {\n                delete options.group;\n            } else if (that.reader.model && options.group) {\n                options.group = convertDescriptorsField(options.group, that.reader.model);\n            }\n\n            if (!that.options.serverFiltering) {\n                delete options.filter;\n            } else if (that.reader.model && options.filter) {\n               options.filter = convertFilterDescriptorsField(options.filter, that.reader.model);\n            }\n\n            if (!that.options.serverSorting) {\n                delete options.sort;\n            } else if (that.reader.model && options.sort) {\n                options.sort = convertDescriptorsField(options.sort, that.reader.model);\n            }\n\n            if (!that.options.serverAggregates) {\n                delete options.aggregate;\n            } else if (that.reader.model && options.aggregate) {\n                options.aggregate = convertDescriptorsField(options.aggregate, that.reader.model);\n            }\n\n            if (!that.options.groupPaging) {\n                delete options.groupPaging;\n            }\n\n            return options;\n        },\n\n        _queueRequest: function(options, callback) {\n            var that = this;\n            if (!that._requestInProgress) {\n                that._requestInProgress = true;\n                that._pending = undefined$1;\n                callback();\n            } else {\n                that._pending = { callback: callback.bind(that), options: options };\n            }\n        },\n\n        _dequeueRequest: function() {\n            var that = this;\n            that._requestInProgress = false;\n            if (that._pending) {\n                that._queueRequest(that._pending.options, that._pending.callback);\n            }\n        },\n\n        _handleCustomErrors: function(response) {\n            if (this.reader.errors) {\n                var errors = this.reader.errors(response);\n                if (errors) {\n                    this.trigger(ERROR, { xhr: null, status: \"customerror\", errorThrown: \"custom error\", errors: errors });\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        _shouldWrap: function(data) {\n            var model = this.reader.model;\n\n            if (model && data.length) {\n                return !(data[0] instanceof model);\n            }\n\n            return false;\n        },\n\n        _observe: function(data) {\n            var that = this,\n                model = that.reader.model;\n\n            that._shouldDetachObservableParents = true;\n\n            if (data instanceof ObservableArray) {\n                that._shouldDetachObservableParents = false;\n                if (that._shouldWrap(data)) {\n                    data.type = that.reader.model;\n                    data.wrapAll(data, data);\n                }\n            } else {\n                var arrayType = that.pageSize() && !that.options.serverPaging ? LazyObservableArray : ObservableArray;\n                data = new arrayType(data, that.reader.model);\n                data.parent = function() { return that.parent(); };\n            }\n\n            if (that._isServerGrouped()) {\n                wrapGroupItems(data, model);\n            }\n\n            if (that._changeHandler && that._data && that._data instanceof ObservableArray &&\n                !(that.options.useRanges && that.options.serverPaging)) {\n                that._data.unbind(CHANGE, that._changeHandler);\n            } else {\n                that._changeHandler = that._change.bind(that);\n            }\n\n            return data.bind(CHANGE, that._changeHandler);\n        },\n\n        _updateTotalForAction: function(action, items) {\n            var that = this;\n\n            var total = parseInt(that._total, 10);\n\n            if (!isNumber(that._total)) {\n                total = parseInt(that._pristineTotal, 10);\n            }\n            if (action === \"add\") {\n                total += items.length;\n            } else if (action === \"remove\") {\n                total -= items.length;\n            } else if (action !== \"itemchange\" && action !== \"sync\" && !that.options.serverPaging) {\n                total = that._pristineTotal;\n            } else if (action === \"sync\") {\n                total = that._pristineTotal = parseInt(that._total, 10);\n            }\n\n            that._total = total;\n        },\n\n        _pushInDestroyed: function(model) {\n            var isPushed = this._destroyed.find(function(item) {\n                return item.uid === model.uid;\n            });\n            if (!isPushed) {\n                this._destroyed.push(model);\n            }\n        },\n\n        _change: function(e) {\n            var that = this, idx, length, action = e ? e.action : \"\";\n\n            if (action === \"remove\") {\n                for (idx = 0, length = e.items.length; idx < length; idx++) {\n                    if (!e.items[idx].isNew || !e.items[idx].isNew()) {\n                        that._pushInDestroyed(e.items[idx]);\n                    }\n                }\n            }\n\n            if (that.options.autoSync && (action === \"add\" || action === \"remove\" || action === \"itemchange\")) {\n\n                var handler = function(args) {\n                    if (args.action === \"sync\") {\n                        that.unbind(\"change\", handler);\n                        that._updateTotalForAction(action, e.items);\n                    }\n                };\n\n                that.first(\"change\", handler);\n\n                that.sync();\n\n            } else {\n                that._updateTotalForAction(action, e ? e.items : []);\n\n                that._process(that._data, e);\n            }\n        },\n\n        _calculateAggregates: function(data, options) {\n            options = options || {};\n\n            var query = new Query(data),\n                aggregates = options.aggregate,\n                filter = options.filter;\n\n            if (filter) {\n                query = query.filter(filter);\n            }\n\n            return query.aggregate(aggregates);\n        },\n\n        _process: function(data, e) {\n            var that = this,\n                options = {},\n                result;\n\n            if (that.options.serverPaging !== true) {\n                options.skip = that._skip;\n                options.take = that._take || that._pageSize;\n\n                if (options.skip === undefined$1 && that._page !== undefined$1 && that._pageSize !== undefined$1) {\n                    options.skip = (that._page - 1) * that._pageSize;\n                }\n\n                if (that.options.useRanges) {\n                    options.skip = that.currentRangeStart();\n                }\n            }\n\n            if (that.options.serverSorting !== true) {\n                options.sort = that._sort;\n            }\n\n            if (that.options.serverFiltering !== true) {\n                options.filter = that._filter;\n            }\n\n            if (that.options.serverGrouping !== true) {\n                options.group = that._group;\n            }\n\n            if (that.options.serverAggregates !== true) {\n                options.aggregate = that._aggregate;\n            }\n\n            if (that.options.serverGrouping) {\n                that._clearEmptyGroups(data);\n            }\n\n            options.groupPaging = that._groupPaging;\n\n            if (that._isGroupPaged() && e && (e.action === \"page\" || e.action === \"expandGroup\" || e.action === \"collapseGroup\")) {\n                result = that._queryProcess(data, {\n                    aggregate: that._aggregate\n                });\n            } else {\n                result = that._queryProcess(data, options);\n            }\n\n            if (that._filter && e && e.action === \"add\") {\n                var model = e.items[0],\n                    resultData = result.data;\n\n                var modelIsInView = resultData.find(function(item) {\n                    return item.uid === model.uid;\n                });\n\n                if (!modelIsInView) {\n                    result.data.splice(model.index, 0, that._isGrouped() ? that._wrapInEmptyGroup(model) : model);\n                    result.total++;\n                }\n            }\n\n            if (that.options.serverAggregates !== true) {\n                // for performance reasons, calculate aggregates for part of the data only after query process\n                // this is necessary in the TreeList when paging\n                that._aggregateResult = that._calculateAggregates(result.dataToAggregate || data, options);\n            }\n\n            that._setView(result, options, e);\n\n            that._setFilterTotal(result.total, false);\n\n            e = e || {};\n\n            e.items = e.items || that._view;\n\n            that.trigger(CHANGE, e);\n        },\n\n        _setView: function(result, options, e) {\n            var that = this;\n\n            if (that._isGroupPaged() && !that._isServerGrouped()) {\n                if (e && (e.action === \"page\" || e.action === \"expandGroup\" || e.action === \"collapseGroup\")) {\n                    that.view(result.data);\n                    that._updateOuterRangesLength();\n                } else {\n                    that._ranges = [];\n                    var query = new Query(result.data);\n                    that._addRange(that._observe(result.data));\n\n                    if (options.skip + options.take > result.data.length) {\n                        options.skip = result.data.length - options.take;\n                    }\n\n                    that.view(query.range(options.skip, options.take).toArray());\n                }\n\n            } else {\n                that.view(result.data);\n            }\n        },\n\n        _clearEmptyGroups: function(data) {\n            for (var idx = data.length - 1; idx >= 0; idx--) {\n                var group = data[idx];\n                if (group.hasSubgroups) {\n                    this._clearEmptyGroups(group.items);\n                }\n\n                if (group.items && !group.items.length && !group.itemCount) {\n                    splice.apply(group.parent(), [idx, 1]);\n                }\n            }\n        },\n\n        _queryProcess: function(data, options) {\n            if (this.options.inPlaceSort) {\n                return Query.process(data, options, this.options.inPlaceSort);\n            }\n            else {\n                return Query.process(data, options);\n            }\n        },\n\n        _mergeState: function(options) {\n            var that = this;\n\n            if (options !== undefined$1) {\n                that._pageSize = options.pageSize;\n                that._page = options.page;\n                that._sort = options.sort;\n                that._filter = options.filter;\n                that._group = options.group;\n                that._aggregate = options.aggregate;\n                that._skip = that._currentRangeStart = options.skip;\n                that._take = options.take;\n\n                if (that._skip === undefined$1) {\n                    that._skip = that._currentRangeStart = that.skip();\n                    options.skip = that.skip();\n                }\n\n                if (that._take === undefined$1 && that._pageSize !== undefined$1) {\n                    that._take = that._pageSize;\n                    options.take = that._take;\n                }\n\n                if (that.options.virtual) {\n                    options.virtual = that.options.virtual;\n                }\n\n                if (options.sort) {\n                    that._sort = options.sort = normalizeSort(options.sort);\n                    that._sortFields = sortFields(options.sort);\n                }\n\n                if (options.filter) {\n                    that._filter = options.filter = (that.options.accentFoldingFiltering && !$.isEmptyObject(options.filter)) ? $.extend({}, normalizeFilter(options.filter), { accentFoldingFiltering: that.options.accentFoldingFiltering }) : normalizeFilter(options.filter);\n                }\n\n                if (options.group) {\n                    that._group = options.group = normalizeGroup(options.group);\n                }\n                if (options.aggregate) {\n                    that._aggregate = options.aggregate = normalizeAggregate(options.aggregate);\n                }\n            }\n            return options;\n        },\n\n        query: function(options) {\n            var result;\n            var remote = this.options.serverSorting || this.options.serverPaging || this.options.serverFiltering || this.options.serverGrouping || this.options.serverAggregates;\n\n            if (remote || ((this._data === undefined$1 || this._data.length === 0) && !this._destroyed.length)) {\n                if (this.options.endless) {\n                    var moreItemsCount = options.pageSize - this.pageSize();\n                    if (moreItemsCount > 0) {\n                        moreItemsCount = this.pageSize();\n                        options.page = options.pageSize / moreItemsCount;\n                        options.pageSize = moreItemsCount;\n                    } else {\n                        options.page = 1;\n                        this.options.endless = false;\n                    }\n                }\n                return this.read(this._mergeState(options));\n            }\n\n            var isPrevented = this.trigger(REQUESTSTART, { type: \"read\" });\n            if (!isPrevented) {\n                this.trigger(PROGRESS);\n                if (options) {\n                    options.groupPaging = this._groupPaging;\n                }\n                result = this._queryProcess(this._data, this._mergeState(options));\n\n                this._setFilterTotal(result.total, true);\n\n                this._aggregateResult = this._calculateAggregates(result.dataToAggregate || this._data, options);\n                this._setView(result, options);\n                this.trigger(REQUESTEND, { type: \"read\" });\n                this.trigger(CHANGE, { items: result.data, action: options ? options.action : \"\" });\n            }\n\n            return $.Deferred().resolve(isPrevented).promise();\n        },\n\n        _hasExpandedSubGroups: function(group) {\n            var result = false;\n            var length = group.items ? group.items.length : 0;\n\n            if (!group.hasSubgroups) {\n                return false;\n            }\n\n            for (var i = 0; i < length; i++) {\n                if (this._groupsState[group.items[i].uid]) {\n                    result = true;\n                    break;\n                }\n            }\n            return result;\n        },\n\n        _findGroupedRange: function(data, result, options, parents, callback) {\n            var that = this;\n            var length = data.length;\n            var group;\n            var current;\n            var itemsLength;\n            var groupCount;\n            var itemsToSkip;\n\n            for (var i = 0; i < length; i++) {\n                group = data[i];\n\n                if (options.taken >= options.take) {\n                    break;\n                }\n\n                if (!that._getGroupByUid(group.uid)) {\n                    that._groupsFlat.push(group);\n                }\n\n                if (that._groupsState[group.uid]) {\n                    if (that._isServerGroupPaged()) {\n                       if (that._fetchGroupItems(group, options, parents, callback)) {\n                            that._fetchingGroupItems = true;\n                            return;\n                       }\n                       groupCount = (group.subgroupCount || group.itemCount) + 1;\n                       itemsToSkip = options.skip - options.skipped;\n                       if (!that._hasExpandedSubGroups(group) && itemsToSkip > groupCount) {\n                           options.skipped += groupCount;\n                           continue;\n                       }\n                    }\n\n                    if (options.includeParents && options.skipped < options.skip) {\n                        options.skipped++;\n                        group.excludeHeader = true;\n                    } else if (options.includeParents) {\n                        options.taken++;\n                        group.excludeHeader = false;\n                    }\n\n                    if (group.hasSubgroups && group.items && group.items.length) {\n                        group.currentItems = [];\n\n                        if (!parents) {\n                            parents = [];\n                        }\n                        parents.push(group);\n\n                        that._findGroupedRange(group.items, group.currentItems, options, parents, callback);\n                        parents.pop();\n\n                        if (group.currentItems.length || options.taken > 0) {\n                            result.push(group);\n                        } else {\n                            group.excludeHeader = false;\n                        }\n                    } else {\n                        current = [];\n                        itemsLength = group.items.length;\n\n                        for (var j = 0; j < itemsLength; j++) {\n                            if (options.skipped < options.skip) {\n                                options.skipped++;\n                                continue;\n                            }\n\n                            if (options.taken >= options.take) {\n                                break;\n                            }\n                            current.push(group.items[j]);\n                            options.taken++;\n                        }\n\n                        if (current.length || options.taken > 0) {\n                            group.currentItems = current;\n                            result.push(group);\n                        } else {\n                            group.excludeHeader = false;\n                        }\n                    }\n                } else {\n                    if (options.skipped < options.skip) {\n                        options.skipped++;\n                        continue;\n                    }\n                    result.push(group);\n                    options.taken++;\n                }\n            }\n        },\n\n        _expandedSubGroupItemsCount: function(group, end, includeCurrentItems) {\n            var that = this;\n            var result = 0;\n            var subGroup;\n            var endSpecified = typeof end === \"number\";\n            var length = endSpecified ? end : group.subgroupCount;\n            var temp;\n\n            if (!group.hasSubgroups) {\n                return result;\n            }\n\n            for (var i = 0; i < length; i++) {\n                subGroup = group.items[i];\n\n                if (!subGroup) {\n                    break;\n                }\n\n                if (subGroup.hasSubgroups && that._groupsState[group.uid]) {\n                    temp = that._expandedSubGroupItemsCount(subGroup, length, true);\n                    result += temp;\n\n                    if (endSpecified) {\n                        length -= temp;\n                    }\n                } else if (!subGroup.hasSubgroups && that._groupsState[subGroup.uid]) {\n                    temp = subGroup.items ? subGroup.items.length : 0;\n                    result += temp;\n                    if (endSpecified) {\n                        length -= temp;\n                    }\n                }\n\n                if (includeCurrentItems) {\n                    result += 1;\n                    if (endSpecified) {\n                        length -= 1;\n                    }\n                }\n\n                if (endSpecified && result > length) {\n                    return result;\n                }\n            }\n\n            return result;\n        },\n\n        _fetchGroupItems: function(group, options, parents, callback) {\n            var that = this;\n            var groupItemsSkip;\n            var firstItem;\n            var lastItem;\n            var groupItemCount = group.hasSubgroups ? group.subgroupCount : group.itemCount;\n            var take = options.take;\n            var skipped = options.skipped;\n            var pageSize = that.take();\n            var expandedSubGroupItemsCount;\n\n            if (options.includeParents) {\n                if (skipped < options.skip) {\n                    skipped += 1;\n                } else {\n                    take -= 1;\n                }\n            }\n\n            if (!group.items || (group.items && !group.items.length)) {\n                that.getGroupItems(group, options, parents, callback, 0);\n                return true;\n            } else {\n                expandedSubGroupItemsCount = this._expandedSubGroupItemsCount(group, options.skip - skipped);\n                groupItemsSkip = Math.max(options.skip - (skipped + expandedSubGroupItemsCount), 0);\n\n                if (groupItemsSkip >= groupItemCount) {\n                    return false;\n                }\n\n                firstItem = group.items[groupItemsSkip];\n                lastItem = group.items[Math.min(groupItemsSkip + take, groupItemCount - 1)];\n\n                if (firstItem.notFetched) {\n                    that.getGroupItems(group, options, parents, callback, math.max(math.floor(groupItemsSkip / pageSize), 0) * pageSize, math.round((groupItemsSkip + pageSize) / pageSize));\n                    return true;\n                }\n\n                if (lastItem.notFetched) {\n                    that.getGroupItems(group, options, parents, callback, math.max(math.floor((groupItemsSkip + pageSize) / pageSize), 0) * pageSize, math.round((groupItemsSkip + pageSize) / pageSize));\n                    return true;\n                }\n            }\n        },\n\n        getGroupItems: function(group, options, parents, callback, groupItemsSkip, page) {\n            var that = this;\n            var take;\n            var filter;\n            var data;\n            var subgroups;\n\n            if (!group.items) {\n                group.items = [];\n            }\n\n            take = that.take();\n            filter = this._composeItemsFilter(group, parents);\n            data = {\n                page: page || 1,\n                pageSize: take,\n                skip: groupItemsSkip,\n                take: take,\n                filter: filter,\n                aggregate: that._aggregate,\n                sort: that._sort\n            };\n            subgroups = that.findSubgroups(group);\n\n            if (subgroups && subgroups.length) {\n                data.group = subgroups;\n                data.groupPaging = true;\n            }\n\n            clearTimeout(that._timeout);\n            that._timeout = setTimeout(function() {\n                that._queueRequest(data, function() {\n                    if (!that.trigger(REQUESTSTART, {\n                            type: \"read\"\n                        })) {\n                        that.transport.read({\n                            data: data,\n                            success: that._groupItemsSuccessHandler(group, options.skip, that.take(), callback, groupItemsSkip),\n                            error: function() {\n                                var args = slice.call(arguments);\n                                that.error.apply(that, args);\n                            }\n                        });\n                    } else {\n                        that._dequeueRequest();\n                    }\n                });\n            }, 100);\n        },\n\n        _groupItemsSuccessHandler: function(group, skip, take, callback, groupItemsSkip) {\n            var that = this;\n            var timestamp = that._timeStamp();\n            callback = isFunction(callback) ? callback : noop;\n            var totalField = that.options.schema && that.options.schema.total ? that.options.schema.total : \"Total\";\n\n            return function(data) {\n                var temp;\n                var model = Model.define(that.options.schema.model);\n                var totalCount;\n\n                that._dequeueRequest();\n\n                that.trigger(REQUESTEND, {\n                    response: data,\n                    type: \"read\"\n                });\n\n                if (isFunction(totalField)) {\n                    totalCount = totalField(data);\n                } else {\n                    totalCount = data[totalField];\n                }\n\n                data = that.reader.parse(data);\n\n                if (group.hasSubgroups) {\n                    temp = that.reader.groups(data);\n                    group.subgroupCount = totalCount;\n                } else {\n                    temp = that.reader.data(data);\n                    temp = temp.map(function(item) {\n                        return new model(item);\n                    });\n                }\n\n                group.items.omitChangeEvent = true;\n                for (var i = 0; i < totalCount; i++) {\n                    if (i >= groupItemsSkip && i < (groupItemsSkip + take) ) {\n                        group.items.splice(i, 1, temp[i - groupItemsSkip]);\n                    } else {\n                        if (!group.items[i]) {\n                            group.items.splice(i, 0, { notFetched: true });\n                        }\n                    }\n                }\n                group.items.omitChangeEvent = false;\n\n                that._updateRangePristineData(group);\n                that._fetchingGroupItems = false;\n\n                if (!group.countAdded) {\n                    that._serverGroupsTotal += totalCount;\n                    group.countAdded = true;\n                }\n\n                that.range(skip, take, callback, \"expandGroup\");\n\n                if (timestamp >= that._currentRequestTimeStamp || !that._skipRequestsInProgress) {\n                    that.trigger(CHANGE, {});\n                }\n            };\n        },\n\n        findSubgroups: function(group) {\n            var indexOfCurrentGroup = this._group.map(function(g) {\n                return g.field;\n            }).indexOf(group.field);\n\n            return this._group.slice(indexOfCurrentGroup + 1, this._group.length);\n        },\n\n        _composeItemsFilter: function(group, parents) {\n            var filter = this.filter() || {\n                logic: \"and\",\n                filters: []\n            };\n\n            filter.logic = 'and';\n            filter = extend(true, {}, filter);\n            filter.filters.push({\n                field: group.field,\n                operator: \"eq\",\n                value: group.value\n            });\n\n            if (parents) {\n                for (var i = 0; i < parents.length; i++) {\n                    filter.filters.push({\n                        field: parents[i].field,\n                        operator: \"eq\",\n                        value: parents[i].value\n                    });\n                }\n            }\n\n            return filter;\n        },\n\n        _updateRangePristineData: function(group) {\n            var that = this;\n            var ranges = that._ranges;\n            var rangesLength = ranges.length;\n            var temp;\n            var currentGroup;\n            var range;\n            var dataLength;\n            var indexes;\n            var currIdx;\n\n            for (var i = 0; i < rangesLength; i++) {\n                range = ranges[i];\n                dataLength = range.data.length;\n                indexes = [];\n                temp = null;\n\n                for (var j = 0; j < dataLength; j++) {\n                    currentGroup = range.data[j];\n                    indexes.push(j);\n\n                    if ((currentGroup.uid === group.uid) || (currentGroup.hasSubgroups && currentGroup.items.length && that._containsSubGroup(currentGroup, group, indexes))) {\n                        break;\n                    }\n                    indexes.pop();\n                }\n\n                if (indexes.length) {\n                    temp = ranges[i].pristineData;\n\n                    while (indexes.length > 1) {\n                        currIdx = indexes.splice(0, 1)[0];\n                        temp = temp[currIdx].items;\n                    }\n                    temp[indexes[0]] = that._cloneGroup(group);\n                    break;\n                }\n            }\n        },\n\n        _containsSubGroup: function(group, subgroup, indexes) {\n            var that = this;\n            var length = group.items.length;\n            var currentSubGroup;\n\n            if (group.hasSubgroups && length) {\n                for (var i = 0; i < length; i++) {\n                    currentSubGroup = group.items[i];\n                    indexes.push(i);\n                    if (currentSubGroup.uid === subgroup.uid ||\n                            (currentSubGroup.hasSubgroups &&\n                            currentSubGroup.items.length &&\n                            that._containsSubGroup(currentSubGroup, subgroup, indexes))) {\n                        return true;\n                    }\n                    indexes.pop();\n                }\n            }\n\n        },\n\n        _cloneGroup: function(group) {\n            var that = this;\n            group = typeof group.toJSON == \"function\" ? group.toJSON() : group;\n\n            if (group.items && group.items.length) {\n                group.items = group.items.map(function(item) {\n                    return that._cloneGroup(item);\n                });\n            }\n\n            return group;\n        },\n\n        _setFilterTotal: function(filterTotal, setDefaultValue) {\n            var that = this;\n\n            if (!that.options.serverFiltering) {\n                if (filterTotal !== undefined$1) {\n                    that._total = filterTotal;\n                } else if (setDefaultValue) {\n                    that._total = that._data.length;\n                }\n            }\n        },\n\n        fetch: function(callback) {\n            var that = this;\n            var fn = function(isPrevented) {\n                if (isPrevented !== true && isFunction(callback)) {\n                    callback.call(that);\n                }\n            };\n\n            return this._query().done(fn);\n        },\n\n        _query: function(options) {\n            var that = this;\n\n            return that.query(extend({}, {\n                page: that.page(),\n                pageSize: that.pageSize(),\n                sort: that.sort(),\n                filter: that.filter(),\n                group: that.group(),\n                aggregate: that.aggregate()\n            }, options));\n        },\n\n        next: function(options) {\n            var that = this,\n                page = that.page(),\n                total = that.total();\n\n            options = options || {};\n\n            if (!page || (total && page + 1 > that.totalPages())) {\n                return;\n            }\n\n            that._skip = that._currentRangeStart = page * that.take();\n\n            page += 1;\n            options.page = page;\n\n            that._query(options);\n\n            return page;\n        },\n\n        prev: function(options) {\n            var that = this,\n                page = that.page();\n\n            options = options || {};\n\n            if (!page || page === 1) {\n                return;\n            }\n\n            that._skip = that._currentRangeStart = that._skip - that.take();\n\n            page -= 1;\n            options.page = page;\n\n            that._query(options);\n\n            return page;\n        },\n\n        page: function(val) {\n            var that = this,\n            skip;\n\n            if (val !== undefined$1) {\n                val = math.max(math.min(math.max(val, 1), that.totalPages()), 1);\n                var take = that.take();\n\n                if (that._isGroupPaged()) {\n                    val -= 1;\n                    that.range(val * take, take, null, \"page\");\n                    return;\n                }\n                that._query(that._pageableQueryOptions({ page: val }));\n                return;\n            }\n            skip = that.skip();\n\n            return skip !== undefined$1 ? math.round((skip || 0) / (that.take() || 1)) + 1 : undefined$1;\n        },\n\n        pageSize: function(val) {\n            var that = this;\n\n            if (val !== undefined$1) {\n                that._query(that._pageableQueryOptions({ pageSize: val, page: 1 }));\n                return;\n            }\n\n            return that.take();\n        },\n\n        sort: function(val) {\n            var that = this;\n\n            if (val !== undefined$1) {\n                that.trigger(\"sort\");\n                that._query({ sort: val });\n                return;\n            }\n\n            return that._sort;\n        },\n\n        filter: function(val) {\n            var that = this;\n\n            if (val === undefined$1) {\n                return that._filter;\n            }\n\n            that.trigger(\"reset\");\n            that._query({ filter: val, page: 1 });\n        },\n\n        group: function(val) {\n            var that = this;\n            var options = { group: val };\n\n            if (that._groupPaging) {\n                // clear ranges if ungrouping is performed\n                if (val !== undefined$1 && (!val || !val.length) ) {\n                    that._ranges = [];\n                }\n                options.page = 1;\n            }\n\n            if (val !== undefined$1) {\n                that._query(options);\n                return;\n            }\n\n            return that._group;\n        },\n\n        getGroupsFlat: function(data) {\n            var idx,\n                result = [],\n                length;\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                var group = data[idx];\n                if (group.hasSubgroups) {\n                    result = result.concat(this.getGroupsFlat(group.items));\n                }\n\n                result.push(group);\n            }\n\n            return result;\n        },\n\n        total: function() {\n            return parseInt(this._total || 0, 10);\n        },\n\n        groupsTotal: function(includeExpanded) {\n            var that = this;\n\n            if (!that._group.length) {\n                return that.total();\n            }\n\n            if (that._isServerGrouped()) {\n                if (that._serverGroupsTotal) {\n                    return that._serverGroupsTotal;\n                }\n                that._serverGroupsTotal = that.total();\n\n                return that._serverGroupsTotal;\n            }\n\n            return that._calculateGroupsTotal(that._ranges.length ? that._ranges[0].data : [], includeExpanded);\n        },\n\n        _calculateGroupsTotal: function(groups, includeExpanded, itemsField, ignoreState) {\n            var that = this;\n            itemsField = itemsField || \"items\";\n            var total;\n            var length;\n\n            if (that._group.length && groups) {\n                total = 0;\n                length = groups.length;\n\n                for (var i = 0; i < length; i++) {\n                    total += that.groupCount(groups[i], includeExpanded, itemsField, ignoreState);\n                }\n                that._groupsTotal = total;\n                return total;\n            }\n\n            that._groupsTotal = that._data.length;\n            return that._groupsTotal;\n        },\n\n        groupCount: function(group, includeExpanded, itemsField, ignoreState) {\n            var that = this;\n            var total = 0;\n\n            if (group.hasSubgroups && that._groupsState[group.uid]) {\n                if (includeExpanded && !group.excludeHeader || ignoreState) {\n                    total += 1;\n                }\n\n                group[itemsField].forEach(function(subgroup) {\n                    total += that.groupCount(subgroup, includeExpanded, itemsField, ignoreState);\n                });\n            } else {\n                if (that._groupsState[group.uid]) {\n                    if (includeExpanded && !group.excludeHeader || ignoreState) {\n                        total++;\n                    }\n                    total += group[itemsField] ? group[itemsField].length : 0;\n                } else {\n                    total++;\n                }\n            }\n            return total;\n        },\n\n        countGroupRange: function(range) {\n            var total = 0;\n            var length = range.length;\n\n            for (var i = 0; i < length; i++) {\n                total += this.groupCount(range[i], true);\n            }\n\n            return total;\n        },\n\n        aggregate: function(val) {\n            var that = this;\n\n            if (val !== undefined$1) {\n                that._query({ aggregate: val });\n                return;\n            }\n\n            return that._aggregate;\n        },\n\n        aggregates: function() {\n            var result = this._aggregateResult;\n\n            if (isEmptyObject(result)) {\n                result = this._emptyAggregates(this.aggregate());\n            }\n\n            return result;\n        },\n\n        _emptyAggregates: function(aggregates) {\n            var result = {};\n\n            if (!isEmptyObject(aggregates)) {\n                var aggregate = {};\n\n                if (!isArray(aggregates)) {\n                    aggregates = [aggregates];\n                }\n\n                for (var idx = 0; idx < aggregates.length; idx++) {\n                    aggregate[aggregates[idx].aggregate] = 0;\n                    result[aggregates[idx].field] = aggregate;\n                }\n            }\n\n            return result;\n        },\n\n        _pageableQueryOptions: function(options) {\n            return options;\n        },\n\n        _wrapInEmptyGroup: function(model) {\n            var groups = this.group(),\n                parent,\n                group,\n                idx,\n                length;\n\n            for (idx = groups.length - 1, length = 0; idx >= length; idx--) {\n                group = groups[idx];\n                parent = {\n                    value: model.get ? model.get(group.field) : model[group.field],\n                    field: group.field,\n                    items: parent ? [parent] : [model],\n                    hasSubgroups: !!parent,\n                    aggregates: this._emptyAggregates(group.aggregates)\n                };\n            }\n\n            return parent;\n        },\n\n        totalPages: function() {\n            var that = this,\n                pageSize = that.pageSize() || that.total(),\n                total = that._isGroupPaged() ? that.groupsTotal(true) : that.total();\n\n            return math.ceil((total || 0) / pageSize);\n        },\n\n        inRange: function(skip, take) {\n            var that = this,\n                end = math.min(skip + take, that.total());\n\n            if (!that.options.serverPaging && that._data.length > 0) {\n                return true;\n            }\n\n            return that._findRange(skip, end).length > 0;\n        },\n\n        lastRange: function() {\n            var ranges = this._ranges;\n            return ranges[ranges.length - 1] || { start: 0, end: 0, data: [] };\n        },\n\n        firstItemUid: function() {\n            var ranges = this._ranges;\n            return ranges.length && ranges[0].data.length && ranges[0].data[0].uid;\n        },\n\n        enableRequestsInProgress: function() {\n            this._skipRequestsInProgress = false;\n        },\n\n        _timeStamp: function() {\n            return new Date().getTime();\n        },\n\n        range: function(skip, take, callback, action) {\n            this._currentRequestTimeStamp = this._timeStamp();\n            this._skipRequestsInProgress = true;\n            var total = this._isGroupPaged() ? this.groupsTotal(true) : this.total();\n\n            if (action === \"expandGroup\" || action === \"collapseGroup\") {\n                this._updateOuterRangesLength();\n            }\n\n            skip = math.min(skip || 0, total);\n            callback = isFunction(callback) ? callback : noop;\n\n            var that = this,\n                pageSkip = math.max(math.floor(skip / take), 0) * take,\n                size = math.min(pageSkip + take, total),\n                data;\n\n            data = that._findRange(skip, math.min(skip + take, total), callback);\n\n            if ((data.length || total === 0) && !that._fetchingGroupItems) {\n                that._processRangeData(data, skip, take, that._originalPageSkip || pageSkip, that._originalSize || size, {\n                    action: action\n                });\n                that._originalPageSkip = null;\n                that._originalSize = null;\n                callback();\n                return;\n            }\n\n            if (that._isGroupPaged()) {\n                that._originalPageSkip = pageSkip;\n                that._originalSize = size;\n\n                pageSkip = math.max(math.floor(that._adjustPageSkip(skip, take) / take), 0) * take;\n                size = math.min(pageSkip + take, total);\n            }\n\n            if (take !== undefined$1 && !that._fetchingGroupItems) {\n                if ((that._isGroupPaged() && !that._groupRangeExists(pageSkip, take)) || !that._rangeExists(pageSkip, size)) {\n                    that.prefetch(pageSkip, take, function() {\n                        if (skip > pageSkip && size < that.total() && !that._rangeExists(size, math.min(size + take, that.total()))) {\n                            that.prefetch(size, take, function() {\n                                that.range(skip, take, callback );\n                            });\n                        } else {\n                            that.range(skip, take, callback);\n                        }\n                    });\n                } else if (pageSkip < skip) {\n                    that.prefetch(size, take, function() {\n                        that.range(skip, take, callback );\n                    });\n                }\n            }\n        },\n\n        _findRange: function(start, end, callback) {\n            var that = this,\n                ranges = that._ranges,\n                range,\n                data = [],\n                skipIdx,\n                takeIdx,\n                startIndex,\n                endIndex,\n                rangeData,\n                rangeEnd,\n                processed,\n                options = that.options,\n                remote = options.serverSorting || options.serverPaging || options.serverFiltering || options.serverGrouping || options.serverAggregates,\n                flatData,\n                count,\n                length,\n                groupMapOptions = {\n                        take: end - start,\n                        skip: start,\n                        skipped: 0,\n                        taken: 0,\n                        includeParents: true\n                    },\n                prevRangeEnd,\n                isGroupPaged = that._isGroupPaged(),\n                startField = isGroupPaged ? \"outerStart\" : \"start\",\n                endField = isGroupPaged ? \"outerEnd\" : \"end\",\n                currentDataLength;\n\n            for (skipIdx = 0, length = ranges.length; skipIdx < length; skipIdx++) {\n                range = ranges[skipIdx];\n\n                if (isGroupPaged) {\n                    if (range.outerStart >= end) {\n                        return [];\n                    }\n\n                    if (start > range.outerEnd) {\n                        groupMapOptions.skipped += range.outerEnd - (prevRangeEnd || 0);\n                        prevRangeEnd = range.outerEnd;\n                        continue;\n                    }\n\n                    if (typeof prevRangeEnd !== \"undefined\" && prevRangeEnd != range.outerStart) {\n                        groupMapOptions.skipped += range.outerStart - prevRangeEnd;\n                    }\n\n                    if (groupMapOptions.skipped > groupMapOptions.skip) {\n                        return [];\n                    }\n\n                    if (typeof prevRangeEnd === \"undefined\" && start > 0 && range.start > 0) {\n                        groupMapOptions.skipped = range.outerStart;\n                    }\n\n                    takeIdx = skipIdx;\n                    while (true) {\n                        this._findGroupedRange(range.data, data, groupMapOptions, null, callback);\n                        currentDataLength = that._calculateGroupsTotal(data, true, \"currentItems\");\n\n                        if (currentDataLength >= groupMapOptions.take) {\n                            return data;\n                        }\n\n                        if (that._fetchingGroupItems) {\n                            return [];\n                        }\n                        takeIdx++;\n\n                        if (ranges[takeIdx] && ranges[takeIdx].outerStart === range.outerEnd) {\n                            range = ranges[takeIdx];\n                        } else {\n                            break;\n                        }\n                    }\n                } else if (start >= range[startField] && start <= range[endField]) {\n                    count = 0;\n\n                    for (takeIdx = skipIdx; takeIdx < length; takeIdx++) {\n                        range = ranges[takeIdx];\n                        flatData = that._flatData(range.data, true);\n\n                        if (flatData.length && start + count >= range.start) {\n                            rangeData = range.data;\n                            rangeEnd = range.end;\n\n                            if (!remote) {\n                                if (options.inPlaceSort) {\n                                    processed = that._queryProcess(range.data, { filter: that.filter() });\n                                } else {\n                                    var sort = normalizeGroupWithoutCompare(that.group() || []).concat(normalizeSort(that.sort() || []));\n                                    processed = that._queryProcess(range.data, { sort: sort, filter: that.filter() });\n                                }\n                                flatData = rangeData = processed.data;\n\n                                if (processed.total !== undefined$1) {\n                                    rangeEnd = processed.total;\n                                }\n                            }\n\n                            startIndex = 0;\n                            if (start + count > range.start) {\n                                startIndex = (start + count) - range.start;\n                            }\n                            endIndex = flatData.length;\n                            if (rangeEnd > end) {\n                                endIndex = endIndex - (rangeEnd - end);\n                            }\n                            count += endIndex - startIndex;\n                            data = that._mergeGroups(data, rangeData, startIndex, endIndex);\n\n                            if (end <= range.end && count == end - start) {\n                                return data;\n                            }\n                        }\n                    }\n                    break;\n                }\n                prevRangeEnd = range.outerEnd;\n            }\n            return [];\n        },\n\n        _getRangesMismatch: function(pageSkip) {\n            var that = this;\n            var ranges = that._ranges;\n            var mismatch = 0;\n            var i = 0;\n\n            while (true) {\n                var range = ranges[i];\n                if (!range || range.outerStart > pageSkip) {\n                    break;\n                }\n\n                if (range.outerEnd != range.end) {\n                    mismatch = range.outerEnd - range.end;\n                }\n                i++;\n            }\n\n            return mismatch;\n        },\n\n        _mergeGroups: function(data, range, skip, take) {\n            if (this._isServerGrouped()) {\n                var temp = range.toJSON(),\n                    prevGroup;\n\n                if (data.length) {\n                    prevGroup = data[data.length - 1];\n                }\n\n                mergeGroups(prevGroup, temp, skip, take);\n\n                return data.concat(temp);\n            }\n            return data.concat(range.slice(skip, take));\n        },\n\n        _processRangeData: function(data, skip, take, pageSkip, size, eventData) {\n            var that = this;\n\n            that._pending = undefined$1;\n\n            that._skip = skip > that.skip() && !that._omitPrefetch ? math.min(size, (that.totalPages() - 1) * that.take()) : pageSkip;\n\n            that._currentRangeStart = skip;\n\n            that._take = take;\n\n            var paging = that.options.serverPaging;\n            var sorting = that.options.serverSorting;\n            var filtering = that.options.serverFiltering;\n            var aggregates = that.options.serverAggregates;\n            try {\n                that.options.serverPaging = true;\n                if (!that._isServerGrouped() && !(that.group() && that.group().length)) {\n                    that.options.serverSorting = true;\n                }\n                that.options.serverFiltering = true;\n                that.options.serverPaging = true;\n                that.options.serverAggregates = true;\n\n                if (paging) {\n                    that._detachObservableParents();\n                    that._data = data = that._observe(data);\n                }\n                that._process(data, eventData);\n            } finally {\n                that.options.serverPaging = paging;\n                that.options.serverSorting = sorting;\n                that.options.serverFiltering = filtering;\n                that.options.serverAggregates = aggregates;\n            }\n        },\n\n        skip: function() {\n            var that = this;\n\n            if (that._skip === undefined$1) {\n                return (that._page !== undefined$1 ? (that._page - 1) * (that.take() || 1) : undefined$1);\n            }\n            return that._skip;\n        },\n\n        currentRangeStart: function() {\n            return this._currentRangeStart || 0;\n        },\n\n        take: function() {\n            return this._take || this._pageSize;\n        },\n\n        _prefetchSuccessHandler: function(skip, size, callback, force) {\n            var that = this;\n            var timestamp = that._timeStamp();\n\n            return function(data) {\n                var found = false,\n                    range = { start: skip, end: size, data: [], timestamp: that._timeStamp() },\n                    idx,\n                    length,\n                    temp;\n\n                that._dequeueRequest();\n\n                that.trigger(REQUESTEND, { response: data, type: \"read\" });\n\n                data = that.reader.parse(data);\n\n                temp = that._readData(data);\n\n                if (temp.length) {\n                    for (idx = 0, length = that._ranges.length; idx < length; idx++) {\n                        if (that._ranges[idx].start === skip) {\n                            found = true;\n                            range = that._ranges[idx];\n\n                            if (!that._isGroupPaged()) {\n                                range.pristineData = temp;\n                                range.data = that._observe(temp);\n                                range.end = range.start + that._flatData(range.data, true).length;\n                                that._sortRanges();\n                            }\n\n                            break;\n                        }\n                    }\n\n                    if (!found) {\n                        that._addRange(that._observe(temp), skip);\n                    }\n                }\n\n                that._total = that.reader.total(data);\n\n                if (force || (timestamp >= that._currentRequestTimeStamp || !that._skipRequestsInProgress)) {\n                    if (callback && temp.length) {\n                        callback();\n                    } else {\n                        that.trigger(CHANGE, {});\n                    }\n                }\n            };\n        },\n\n        prefetch: function(skip, take, callback) {\n            var that = this,\n                size = math.min(skip + take, that.total()),\n                options = {\n                    take: take,\n                    skip: skip,\n                    page: skip / take + 1,\n                    pageSize: take,\n                    sort: that._sort,\n                    filter: that._filter,\n                    group: that._group,\n                    aggregate: that._aggregate\n                };\n\n\n            if ((that._isGroupPaged() && !that._isServerGrouped() && that._groupRangeExists(skip, size))) {\n                if (callback) {\n                    callback();\n                }\n                return;\n            }\n\n            if ((that._isServerGroupPaged() && !that._groupRangeExists(skip, size)) || !that._rangeExists(skip, size)) {\n                clearTimeout(that._timeout);\n\n                that._timeout = setTimeout(function() {\n                    that._queueRequest(options, function() {\n                        if (!that.trigger(REQUESTSTART, { type: \"read\" })) {\n                            if (that._omitPrefetch) {\n                                that.trigger(PROGRESS);\n                            }\n                            that.transport.read({\n                                data: that._params(options),\n                                success: that._prefetchSuccessHandler(skip, size, callback),\n                                error: function() {\n                                    var args = slice.call(arguments);\n                                    that.error.apply(that, args);\n                                }\n                            });\n                        } else {\n                            that._dequeueRequest();\n                        }\n                    });\n                }, 100);\n            } else if (callback) {\n                callback();\n            }\n        },\n\n        _multiplePrefetch: function(skip, take, callback) {\n            var that = this,\n                size = math.min(skip + take, that.total()),\n                options = {\n                    take: take,\n                    skip: skip,\n                    page: skip / take + 1,\n                    pageSize: take,\n                    sort: that._sort,\n                    filter: that._filter,\n                    group: that._group,\n                    aggregate: that._aggregate\n                };\n\n            if (!that._rangeExists(skip, size)) {\n                if (!that.trigger(REQUESTSTART, { type: \"read\" })) {\n                    that.transport.read({\n                        data: that._params(options),\n                        success: that._prefetchSuccessHandler(skip, size, callback, true)\n                    });\n                }\n            } else if (callback) {\n                callback();\n            }\n        },\n\n        _adjustPageSkip: function(start, take) {\n            var that = this;\n            var prevRange = that._getPrevRange(start);\n            var result;\n            var total = that.total();\n            var mismatch;\n\n            if (prevRange) {\n                mismatch = that._getRangesMismatch(start);\n\n                if (!mismatch) {\n                    return start;\n                }\n                start -= mismatch;\n            }\n            result = math.max(math.floor(start / take), 0) * take;\n\n            if (result > total) {\n                while (true) {\n                    result -= take;\n                    if (result < total) {\n                        break;\n                    }\n                }\n            }\n            return result;\n        },\n\n        _getNextRange: function(end) {\n            var that = this,\n                ranges = that._ranges,\n                idx,\n                length;\n\n            for (idx = 0, length = ranges.length; idx < length; idx++) {\n                if (ranges[idx].start <= end && ranges[idx].end >= end) {\n                    return ranges[idx];\n                }\n            }\n        },\n\n        _getPrevRange: function(start) {\n            var that = this,\n                ranges = that._ranges,\n                idx,\n                range,\n                length = ranges.length;\n\n            for (idx = length - 1; idx >= 0; idx--) {\n                if (ranges[idx].outerStart <= start) {\n                    range = ranges[idx];\n                    break;\n                }\n\n            }\n\n            return range;\n        },\n\n        _rangeExists: function(start, end) {\n            var that = this,\n                ranges = that._ranges,\n                idx,\n                length;\n\n            for (idx = 0, length = ranges.length; idx < length; idx++) {\n                if (ranges[idx].start <= start && ranges[idx].end >= end) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _groupRangeExists: function(start, end) {\n            var that = this,\n                ranges = that._ranges,\n                idx,\n                length,\n                availableItemsCount = 0,\n                total = that.groupsTotal(true);\n\n            if (end > total && !that._isServerGrouped()) {\n                end = total;\n            }\n\n            for (idx = 0, length = ranges.length; idx < length; idx++) {\n                var range = ranges[idx];\n                if (range.outerStart <= start && range.outerEnd >= start) {\n                    availableItemsCount += range.outerEnd - start;\n                } else if (range.outerStart <= end && range.outerEnd >= end) {\n                    availableItemsCount += end - range.outerStart;\n                }\n            }\n\n            return availableItemsCount >= end - start;\n        },\n\n        _getCurrentRangeSpan: function() {\n            var that = this;\n            var ranges = that._ranges;\n            var start = that.currentRangeStart();\n            var end = start + (that.take() || 0);\n            var rangeSpan = [];\n            var range;\n            var idx;\n            var length = ranges.length;\n\n            for (idx = 0; idx < length; idx++) {\n                range = ranges[idx];\n\n                if ((range.start <= start && range.end >= start) || (range.start >= start && range.start <= end)) {\n                    rangeSpan.push(range);\n                }\n            }\n\n            return rangeSpan;\n        },\n\n        _removeModelFromRanges: function(model) {\n            var that = this;\n            var range;\n\n            for (var idx = 0, length = this._ranges.length; idx < length; idx++) {\n                range = this._ranges[idx];\n\n                that._removeModelFromRange(range, model);\n            }\n\n            that._updateRangesLength();\n        },\n\n        _removeModelFromRange: function(range, model) {\n            this._eachItem(range.data, function(data) {\n                if (!data) {\n                    return;\n                }\n                for (var idx = 0; idx < data.length; idx++) {\n                    var dataItem = data[idx];\n\n                    if (dataItem.uid && dataItem.uid == model.uid) {\n                        [].splice.call(data, idx, 1);\n                        break;\n                    }\n                }\n            });\n        },\n\n        _insertModelInRange: function(index, model) {\n            var that = this;\n            var ranges = that._ranges || [];\n            var rangesLength = ranges.length;\n            var range;\n            var i;\n\n            for (i = 0; i < rangesLength; i++) {\n                range = ranges[i];\n\n                if (range.start <= index && range.end >= index) {\n                    if (!that._getByUid(model.uid, range.data)) {\n                        if (that._isServerGrouped()) {\n                            range.data.splice(index, 0, that._wrapInEmptyGroup(model));\n                        } else {\n                            range.data.splice(index, 0, model);\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            that._updateRangesLength();\n        },\n\n        _updateRangesLength: function() {\n            var that = this;\n            var ranges = that._ranges || [];\n            var rangesLength = ranges.length;\n            var mismatchFound = false;\n            var mismatchLength = 0;\n            var lengthDifference = 0;\n            var rangeLength;\n            var range;\n            var i;\n\n            for (i = 0; i < rangesLength; i++) {\n                range = ranges[i];\n                rangeLength = that._isGroupPaged() ? range.data.length : that._flatData(range.data, true).length;\n                lengthDifference = rangeLength - math.abs(range.end - range.start);\n\n                if (!mismatchFound && lengthDifference !== 0) {\n                    mismatchFound = true;\n                    mismatchLength = lengthDifference;\n                    range.end += mismatchLength;\n                    continue;\n                }\n\n                if (mismatchFound) {\n                    range.start += mismatchLength;\n                    range.end += mismatchLength;\n                }\n            }\n        },\n\n        _updateOuterRangesLength: function() {\n            var that = this;\n            var ranges = that._ranges || [];\n            var rangesLength = ranges.length;\n            var mismatchLength = 0;\n            var range;\n            var i;\n            var prevRange;\n            var rangeLength;\n\n            for (i = 0; i < rangesLength; i++) {\n                range = ranges[i];\n                rangeLength = that._isGroupPaged() ? that._calculateGroupsTotal(range.data, true, \"items\", true) : that._flatData(range.data, true).length;\n\n                if (prevRange) {\n                    if (prevRange.end != range.start) {\n                        mismatchLength = range.start - prevRange.end;\n                    }\n                    range.outerStart = prevRange.outerEnd + mismatchLength;\n                    mismatchLength = 0;\n                } else {\n                    range.outerStart = range.start;\n                }\n\n                range.outerEnd = range.outerStart + rangeLength;\n                prevRange = range;\n            }\n        }\n    });\n\n    var Transport = {};\n\n    Transport.create = function(options, data, dataSource) {\n        var transport,\n            transportOptions = options.transport ? $.extend({}, options.transport) : null;\n\n        if (transportOptions) {\n            transportOptions.read = typeof transportOptions.read === STRING ? { url: transportOptions.read } : transportOptions.read;\n\n            if (options.type === \"jsdo\") {\n                transportOptions.dataSource = dataSource;\n            }\n\n            if (options.type) {\n                kendo.data.transports = kendo.data.transports || {};\n                kendo.data.schemas = kendo.data.schemas || {};\n\n                if (!kendo.data.transports[options.type]) {\n                    kendo.logToConsole(\"Unknown DataSource transport type '\" + options.type + \"'.\\nVerify that registration scripts for this type are included after Kendo UI on the page.\", \"warn\");\n                } else if (!isPlainObject(kendo.data.transports[options.type])) {\n                    transport = new kendo.data.transports[options.type](extend(transportOptions, { data: data }));\n                } else {\n                    transportOptions = extend(true, {}, kendo.data.transports[options.type], transportOptions);\n                }\n\n                options.schema = extend(true, {}, kendo.data.schemas[options.type], options.schema);\n            }\n\n            if (!transport) {\n                transport = isFunction(transportOptions.read) ? transportOptions : new RemoteTransport(transportOptions);\n            }\n        } else {\n            transport = new LocalTransport({ data: options.data || [] });\n        }\n        return transport;\n    };\n\n    DataSource.create = function(options) {\n        if (isArray(options) || options instanceof ObservableArray) {\n           options = { data: options };\n        }\n\n        var dataSource = options || {},\n            data = dataSource.data,\n            fields = dataSource.fields,\n            table = dataSource.table,\n            select = dataSource.select,\n            idx,\n            length,\n            model = {},\n            field;\n\n        if (!data && fields && !dataSource.transport) {\n            if (table) {\n                data = inferTable(table, fields);\n            } else if (select) {\n                data = inferSelect(select, fields);\n\n                if (dataSource.group === undefined$1 && data[0] && data[0].optgroup !== undefined$1) {\n                    dataSource.group = \"optgroup\";\n                }\n            }\n        }\n\n        if (kendo.data.Model && fields && (!dataSource.schema || !dataSource.schema.model)) {\n            for (idx = 0, length = fields.length; idx < length; idx++) {\n                field = fields[idx];\n                if (field.type) {\n                    model[field.field] = field;\n                }\n            }\n\n            if (!isEmptyObject(model)) {\n                dataSource.schema = extend(true, dataSource.schema, { model: { fields: model } });\n            }\n        }\n\n        dataSource.data = data;\n\n        select = null;\n        dataSource.select = null;\n        table = null;\n        dataSource.table = null;\n\n        return dataSource instanceof DataSource ? dataSource : new DataSource(dataSource);\n    };\n\n    function inferSelect(select, fields) {\n        select = $(select)[0];\n        var options = select.options;\n        var firstField = fields[0];\n        var secondField = fields[1];\n\n        var data = [];\n        var idx, length;\n        var optgroup;\n        var option;\n        var record;\n        var value;\n\n        for (idx = 0, length = options.length; idx < length; idx++) {\n            record = {};\n            option = options[idx];\n            optgroup = option.parentNode;\n\n            if (optgroup === select) {\n                optgroup = null;\n            }\n\n            if (option.disabled || (optgroup && optgroup.disabled)) {\n                continue;\n            }\n\n            if (optgroup) {\n                record.optgroup = optgroup.label;\n            }\n\n            record[firstField.field] = option.text;\n\n            value = option.attributes.value;\n\n            if (value && value.specified) {\n                value = option.value;\n            } else {\n                value = option.text;\n            }\n\n            record[secondField.field] = value;\n\n            data.push(record);\n        }\n\n        return data;\n    }\n\n    function inferTable(table, fields) {\n        var tbody = $(table)[0].tBodies[0],\n        rows = tbody ? tbody.rows : [],\n        idx,\n        length,\n        fieldIndex,\n        fieldCount = fields.length,\n        data = [],\n        cells,\n        record,\n        cell,\n        empty;\n\n        for (idx = 0, length = rows.length; idx < length; idx++) {\n            record = {};\n            empty = true;\n            cells = rows[idx].cells;\n\n            for (fieldIndex = 0; fieldIndex < fieldCount; fieldIndex++) {\n                cell = cells[fieldIndex];\n                if (cell.nodeName.toLowerCase() !== \"th\") {\n                    empty = false;\n                    record[fields[fieldIndex].field] = cell.innerHTML;\n                }\n            }\n            if (!empty) {\n                data.push(record);\n            }\n        }\n\n        return data;\n    }\n\n    var Node = Model.define({\n        idField: \"id\",\n\n        init: function(value) {\n            var that = this,\n                hasChildren = that.hasChildren || value && value.hasChildren,\n                childrenField = \"items\",\n                childrenOptions = {};\n\n            kendo.data.Model.fn.init.call(that, value);\n\n            if (typeof that.children === STRING) {\n                childrenField = that.children;\n            }\n\n            childrenOptions = {\n                schema: {\n                    data: childrenField,\n                    model: {\n                        hasChildren: hasChildren,\n                        id: that.idField,\n                        fields: that.fields\n                    }\n                }\n            };\n\n            if (typeof that.children !== STRING) {\n                extend(childrenOptions, that.children);\n            }\n\n            childrenOptions.data = value;\n\n            if (!hasChildren) {\n                hasChildren = childrenOptions.schema.data;\n            }\n\n            if (typeof hasChildren === STRING) {\n                hasChildren = kendo.getter(hasChildren);\n            }\n\n            if (isFunction(hasChildren)) {\n                var hasChildrenObject = hasChildren.call(that, that);\n\n                if (hasChildrenObject && hasChildrenObject.length === 0) {\n                    that.hasChildren = false;\n                } else {\n                    that.hasChildren = !!hasChildrenObject;\n                }\n            }\n\n            that._childrenOptions = childrenOptions;\n\n            if (that.hasChildren) {\n                that._initChildren();\n            }\n\n            that._loaded = !!(value && value._loaded);\n        },\n\n        _initChildren: function() {\n            var that = this;\n            var children, transport, parameterMap;\n\n            if (!(that.children instanceof HierarchicalDataSource)) {\n                children = that.children = new HierarchicalDataSource(that._childrenOptions);\n\n                transport = children.transport;\n                parameterMap = transport.parameterMap;\n\n                transport.parameterMap = function(data, type) {\n                    data[that.idField || \"id\"] = that.id;\n\n                    if (parameterMap) {\n                        data = parameterMap.call(that, data, type);\n                    }\n\n                    return data;\n                };\n\n                children.parent = function() {\n                    return that;\n                };\n\n                children.bind(CHANGE, function(e) {\n                    e.node = e.node || that;\n                    that.trigger(CHANGE, e);\n                });\n\n                children.bind(ERROR, function(e) {\n                    var collection = that.parent();\n\n                    if (collection) {\n                        e.node = e.node || that;\n                        collection.trigger(ERROR, e);\n                    }\n                });\n\n                children.bind(ITEMSLOADED, function(e) {\n                    var collection = that.parent();\n\n                    if (collection) {\n                        collection.trigger(ITEMSLOADED, e);\n                    }\n                });\n\n                that._updateChildrenField();\n            }\n        },\n\n        append: function(model) {\n            this._initChildren();\n            this.loaded(true);\n            this.children.add(model);\n        },\n\n        hasChildren: false,\n\n        level: function() {\n            var parentNode = this.parentNode(),\n                level = 0;\n\n            while (parentNode && parentNode.parentNode) {\n                level++;\n                parentNode = parentNode.parentNode ? parentNode.parentNode() : null;\n            }\n\n            return level;\n        },\n\n        _updateChildrenField: function() {\n            var fieldName = this._childrenOptions.schema.data;\n\n            this[fieldName || \"items\"] = this.children.data();\n        },\n\n        _childrenLoaded: function() {\n            this._loaded = true;\n\n            this._updateChildrenField();\n        },\n\n        load: function() {\n            var options = {};\n            var method = \"_query\";\n            var children, promise;\n\n            if (this.hasChildren) {\n                this._initChildren();\n\n                children = this.children;\n\n                options[this.idField || \"id\"] = this.id;\n\n                if (!this._loaded) {\n                    children._data = undefined$1;\n                    method = \"read\";\n                }\n\n                children.one(CHANGE, this._childrenLoaded.bind(this));\n\n                if (this._matchFilter) {\n                    options.filter = { field: '_matchFilter', operator: 'eq', value: true };\n                }\n\n                promise = children[method](options);\n                if (!this._loaded) {\n                    this.trigger(ITEMLOAD, { promise: promise, node: this });\n                }\n            } else {\n                this.loaded(true);\n            }\n\n            return promise || $.Deferred().resolve().promise();\n        },\n\n        parentNode: function() {\n            var array = this.parent();\n\n            return array.parent();\n        },\n\n        loaded: function(value) {\n            if (value !== undefined$1) {\n                this._loaded = value;\n            } else {\n                return this._loaded;\n            }\n        },\n\n        shouldSerialize: function(field) {\n            return Model.fn.shouldSerialize.call(this, field) &&\n                    field !== \"children\" &&\n                    field !== \"_loaded\" &&\n                    field !== \"hasChildren\" &&\n                    field !== \"_childrenOptions\";\n        }\n    });\n\n    function dataMethod(name) {\n        return function() {\n            var data = this._data,\n                result = DataSource.fn[name].apply(this, slice.call(arguments));\n\n            if (this._data != data) {\n                this._attachBubbleHandlers();\n            }\n\n            return result;\n        };\n    }\n\n    var HierarchicalDataSource = DataSource.extend({\n        init: function(options) {\n            var node = Node.define({\n                children: options\n            });\n\n            if (options.filter && !options.serverFiltering) {\n                this._hierarchicalFilter = options.filter;\n                options.filter = null;\n            }\n\n            DataSource.fn.init.call(this, extend(true, {}, { schema: { modelBase: node, model: node } }, options));\n\n            this._attachBubbleHandlers();\n        },\n\n        _attachBubbleHandlers: function() {\n            var that = this;\n\n            that._data.bind(ERROR, function(e) {\n                that.trigger(ERROR, e);\n            });\n\n            that._data.bind(ITEMSLOADED, function(e) {\n                that.trigger(ITEMSLOADED, e);\n            });\n        },\n\n        loading: function() {\n            if (this._data) {\n                return this._data.loading() || this._childrenLoading();\n            }\n            return false;\n        },\n\n        _childrenLoading: function() {\n            var isLoading = false;\n            this._data.forEach(function(node) {\n                if (node.hasChildren && node.children.loading()) {\n                    isLoading = true;\n                }\n            });\n            return isLoading;\n        },\n\n        read: function(data) {\n            var result = DataSource.fn.read.call(this, data);\n\n            if (this._hierarchicalFilter) {\n                if (this._data && this._data.length > 0) {\n                    this.filter(this._hierarchicalFilter);\n                } else {\n                    this.options.filter = this._hierarchicalFilter;\n                    this._filter = normalizeFilter(this.options.filter);\n                    this._hierarchicalFilter = null;\n                }\n            }\n\n            return result;\n        },\n\n        remove: function(node) {\n            var parentNode = node.parentNode(),\n                dataSource = this,\n                result;\n\n            if (parentNode && parentNode._initChildren) {\n                dataSource = parentNode.children;\n            }\n\n            result = DataSource.fn.remove.call(dataSource, node);\n\n            if (parentNode && !dataSource.data().length) {\n                parentNode.hasChildren = false;\n            }\n\n            return result;\n        },\n\n        success: dataMethod(\"success\"),\n\n        data: dataMethod(\"data\"),\n\n        insert: function(index, model) {\n            var parentNode = this.parent();\n\n            if (parentNode && parentNode._initChildren) {\n                parentNode.hasChildren = true;\n                parentNode._initChildren();\n            }\n\n            return DataSource.fn.insert.call(this, index, model);\n        },\n\n        filter: function(val) {\n            if (val === undefined$1) {\n                 return this._filter;\n            }\n\n            if (!this.options.serverFiltering && this._markHierarchicalQuery(val)) {\n                val = { logic: \"or\", filters: [val, { field: '_matchFilter', operator: 'equals', value: true }] };\n            }\n\n            this.trigger(\"reset\");\n            this._query({ filter: val, page: 1 });\n        },\n\n        _markHierarchicalQuery: function(expressions) {\n            var compiled;\n            var predicate;\n            var fields;\n            var operators;\n            var filter;\n            var accentFoldingFiltering = this.options.accentFoldingFiltering;\n\n            expressions = accentFoldingFiltering ? $.extend({}, normalizeFilter(expressions), { accentFoldingFiltering: accentFoldingFiltering }) : normalizeFilter(expressions);\n\n            if (!expressions || expressions.filters.length === 0) {\n                this._updateHierarchicalFilter(function() {return true;});\n                return false;\n            }\n\n            compiled = Query.filterExpr(expressions);\n            fields = compiled.fields;\n            operators = compiled.operators;\n\n            predicate = filter = new Function(\"d, __f, __o\", \"return \" + compiled.expression);\n\n            if (fields.length || operators.length) {\n                filter = function(d) {\n                    return predicate(d, fields, operators);\n                };\n            }\n\n            this._updateHierarchicalFilter(filter);\n            return true;\n        },\n\n         _updateHierarchicalFilter: function(filter) {\n            var current;\n            var data = this._data;\n            var result = false;\n\n            for (var idx = 0; idx < data.length; idx++) {\n                 current = data[idx];\n\n                 if (current.hasChildren) {\n                     current._matchFilter = current.children._updateHierarchicalFilter(filter);\n                    if (!current._matchFilter) {\n                        current._matchFilter = filter(current);\n                    }\n                } else {\n                    current._matchFilter = filter(current);\n                }\n\n                if (current._matchFilter) {\n                    result = true;\n                }\n            }\n            return result;\n        },\n\n        _find: function(method, value) {\n            var idx, length, node, children;\n            var data = this._data;\n\n            if (!data) {\n                return;\n            }\n\n            node = DataSource.fn[method].call(this, value);\n\n            if (node) {\n                return node;\n            }\n\n            data = this._flatData(this._data);\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                children = data[idx].children;\n\n                if (!(children instanceof HierarchicalDataSource)) {\n                    continue;\n                }\n\n                node = children[method](value);\n\n                if (node) {\n                    return node;\n                }\n            }\n        },\n\n        get: function(id) {\n            return this._find(\"get\", id);\n        },\n\n        getByUid: function(uid) {\n            return this._find(\"getByUid\", uid);\n        }\n    });\n\n    function inferList(list, fields) {\n        var items = $(list).children(),\n            idx,\n            length,\n            data = [],\n            record,\n            textField = fields[0].field,\n            urlField = fields[1] && fields[1].field,\n            spriteCssClassField = fields[2] && fields[2].field,\n            imageUrlField = fields[3] && fields[3].field,\n            item,\n            id,\n            textChild,\n            className,\n            children;\n\n        function elements(collection, tagName) {\n            return collection.filter(tagName).add(collection.find(tagName));\n        }\n\n        for (idx = 0, length = items.length; idx < length; idx++) {\n            record = { _loaded: true };\n            item = items.eq(idx);\n\n            textChild = item[0].firstChild;\n            children = item.children();\n            list = children.filter(\"ul\");\n            children = children.filter(\":not(ul)\");\n\n            id = item.attr(\"data-id\");\n\n            if (id) {\n                record.id = id;\n            }\n\n            if (textChild) {\n                record[textField] = textChild.nodeType == 3 ? textChild.nodeValue : children.text();\n            }\n\n            if (urlField) {\n                record[urlField] = elements(children, \"a\").attr(\"href\");\n            }\n\n            if (imageUrlField) {\n                record[imageUrlField] = elements(children, \"img\").attr(\"src\");\n            }\n\n            if (spriteCssClassField) {\n                className = elements(children, \".k-sprite\").prop(\"className\");\n                record[spriteCssClassField] = className && kendo.trim(className.replace(\"k-sprite\", \"\"));\n            }\n\n            if (list.length) {\n                record.items = inferList(list.eq(0), fields);\n            }\n\n            if (item.attr(\"data-hasChildren\") == \"true\") {\n                record.hasChildren = true;\n            }\n\n            data.push(record);\n        }\n\n        return data;\n    }\n\n    HierarchicalDataSource.create = function(options) {\n        options = options && options.push ? { data: options } : options;\n\n        var dataSource = options || {},\n            data = dataSource.data,\n            fields = dataSource.fields,\n            list = dataSource.list;\n\n        if (data && data._dataSource) {\n            return data._dataSource;\n        }\n\n        if (!data && fields && !dataSource.transport) {\n            if (list) {\n                data = inferList(list, fields);\n            }\n        }\n\n        dataSource.data = data;\n\n        return dataSource instanceof HierarchicalDataSource ? dataSource : new HierarchicalDataSource(dataSource);\n    };\n\n    var Buffer = kendo.Observable.extend({\n        init: function(dataSource, viewSize, disablePrefetch) {\n            kendo.Observable.fn.init.call(this);\n\n            this._prefetching = false;\n            this.dataSource = dataSource;\n            this.prefetch = !disablePrefetch;\n\n            var buffer = this;\n\n            dataSource.bind(\"change\", function() {\n                buffer._change();\n            });\n\n            dataSource.bind(\"reset\", function() {\n                buffer._reset();\n            });\n\n            this._syncWithDataSource();\n\n            this.setViewSize(viewSize);\n        },\n\n        setViewSize: function(viewSize) {\n            this.viewSize = viewSize;\n            this._recalculate();\n        },\n\n        at: function(index) {\n            var pageSize = this.pageSize,\n                itemPresent = true;\n\n            if (index >= this.total()) {\n                this.trigger(\"endreached\", { index: index });\n                return null;\n            }\n\n            if (!this.useRanges) {\n               return this.dataSource.view()[index];\n            }\n            if (this.useRanges) {\n                // out of range request\n                if (index < this.dataOffset || index >= this.skip + pageSize) {\n                    itemPresent = this.range(Math.floor(index / pageSize) * pageSize);\n                }\n\n                // prefetch\n                if (index === this.prefetchThreshold) {\n                    this._prefetch();\n                }\n\n                // mid-range jump - prefetchThreshold and nextPageThreshold may be equal, do not change to else if\n                if (index === this.midPageThreshold) {\n                    this.range(this.nextMidRange, true);\n                }\n                // next range jump\n                else if (index === this.nextPageThreshold) {\n                    this.range(this.nextFullRange);\n                }\n                // pull-back\n                else if (index === this.pullBackThreshold) {\n                    if (this.offset === this.skip) { // from full range to mid range\n                        this.range(this.previousMidRange);\n                    } else { // from mid range to full range\n                        this.range(this.previousFullRange);\n                    }\n                }\n\n                if (itemPresent) {\n                    return this.dataSource.at(index - this.dataOffset);\n                } else {\n                    this.trigger(\"endreached\", { index: index });\n                    return null;\n                }\n            }\n        },\n\n        indexOf: function(item) {\n            return this.dataSource.data().indexOf(item) + this.dataOffset;\n        },\n\n        total: function() {\n            return parseInt(this.dataSource.total(), 10);\n        },\n\n        next: function() {\n            var buffer = this,\n                pageSize = buffer.pageSize,\n                offset = buffer.skip - buffer.viewSize + pageSize,\n                pageSkip = math.max(math.floor(offset / pageSize), 0) * pageSize;\n\n            this.offset = offset;\n            this.dataSource.prefetch(pageSkip, pageSize, function() {\n                buffer._goToRange(offset, true);\n            });\n        },\n\n        range: function(offset, nextRange) {\n            if (this.offset === offset) {\n                return true;\n            }\n\n            var buffer = this,\n                pageSize = this.pageSize,\n                pageSkip = math.max(math.floor(offset / pageSize), 0) * pageSize,\n                dataSource = this.dataSource;\n\n            if (nextRange) {\n                pageSkip += pageSize;\n            }\n\n            if (dataSource.inRange(offset, pageSize)) {\n                this.offset = offset;\n                this._recalculate();\n                this._goToRange(offset);\n                return true;\n            } else if (this.prefetch) {\n                dataSource.prefetch(pageSkip, pageSize, function() {\n                    buffer.offset = offset;\n                    buffer._recalculate();\n                    buffer._goToRange(offset, true);\n                });\n                return false;\n            }\n\n            return true;\n        },\n\n        syncDataSource: function() {\n            var offset = this.offset;\n            this.offset = null;\n            this.range(offset);\n        },\n\n        destroy: function() {\n            this.unbind();\n        },\n\n        _prefetch: function() {\n            var buffer = this,\n                pageSize = this.pageSize,\n                prefetchOffset = this.skip + pageSize,\n                dataSource = this.dataSource;\n\n            if (!dataSource.inRange(prefetchOffset, pageSize) && !this._prefetching && this.prefetch) {\n                this._prefetching = true;\n                this.trigger(\"prefetching\", { skip: prefetchOffset, take: pageSize });\n\n                dataSource.prefetch(prefetchOffset, pageSize, function() {\n                    buffer._prefetching = false;\n                    buffer.trigger(\"prefetched\", { skip: prefetchOffset, take: pageSize });\n                });\n            }\n        },\n\n        _goToRange: function(offset, expanding) {\n            if (this.offset !== offset) {\n                return;\n            }\n\n            this.dataOffset = offset;\n            this._expanding = expanding;\n            this.dataSource.range(offset, this.pageSize);\n            this.dataSource.enableRequestsInProgress();\n        },\n\n        _reset: function() {\n            this._syncPending = true;\n        },\n\n        _change: function() {\n            var dataSource = this.dataSource;\n\n            this.length = this.useRanges ? dataSource.lastRange().end : dataSource.view().length;\n\n            if (this._syncPending) {\n                this._syncWithDataSource();\n                this._recalculate();\n                this._syncPending = false;\n                this.trigger(\"reset\", { offset: this.offset });\n            }\n\n            this.trigger(\"resize\");\n\n            if (this._expanding) {\n                this.trigger(\"expand\");\n            }\n\n            delete this._expanding;\n        },\n\n        _syncWithDataSource: function() {\n            var dataSource = this.dataSource;\n\n            this._firstItemUid = dataSource.firstItemUid();\n            this.dataOffset = this.offset = dataSource.skip() || 0;\n            this.pageSize = dataSource.pageSize();\n            this.useRanges = dataSource.options.serverPaging;\n        },\n\n        _recalculate: function() {\n            var pageSize = this.pageSize,\n                offset = this.offset,\n                viewSize = this.viewSize,\n                skip = Math.ceil(offset / pageSize) * pageSize;\n\n            this.skip = skip;\n            this.midPageThreshold = skip + pageSize - 1;\n            this.nextPageThreshold = skip + viewSize - 1;\n            this.prefetchThreshold = skip + Math.floor(pageSize / 3 * 2);\n            this.pullBackThreshold = this.offset - 1;\n\n            this.nextMidRange = skip + pageSize - viewSize;\n            this.nextFullRange = skip;\n            this.previousMidRange = offset - viewSize;\n            this.previousFullRange = skip - pageSize;\n        }\n    });\n\n    var BatchBuffer = kendo.Observable.extend({\n        init: function(dataSource, batchSize) {\n            var batchBuffer = this;\n\n            kendo.Observable.fn.init.call(batchBuffer);\n\n            this.dataSource = dataSource;\n            this.batchSize = batchSize;\n            this._total = 0;\n\n            this.buffer = new Buffer(dataSource, batchSize * 3);\n\n            this.buffer.bind({\n                \"endreached\": function(e) {\n                    batchBuffer.trigger(\"endreached\", { index: e.index });\n                },\n                \"prefetching\": function(e) {\n                    batchBuffer.trigger(\"prefetching\", { skip: e.skip, take: e.take });\n                },\n                \"prefetched\": function(e) {\n                    batchBuffer.trigger(\"prefetched\", { skip: e.skip, take: e.take });\n                },\n                \"reset\": function() {\n                    batchBuffer._total = 0;\n                    batchBuffer.trigger(\"reset\");\n                },\n                \"resize\": function() {\n                    batchBuffer._total = Math.ceil(this.length / batchBuffer.batchSize);\n                    batchBuffer.trigger(\"resize\", { total: batchBuffer.total(), offset: this.offset });\n                }\n            });\n        },\n\n        syncDataSource: function() {\n            this.buffer.syncDataSource();\n        },\n\n        at: function(index) {\n            var buffer = this.buffer,\n                skip = index * this.batchSize,\n                take = this.batchSize,\n                view = [],\n                item;\n\n            if (buffer.offset > skip) {\n                buffer.at(buffer.offset - 1);\n            }\n\n            for (var i = 0; i < take; i++) {\n                item = buffer.at(skip + i);\n\n                if (item === null) {\n                    break;\n                }\n\n                view.push(item);\n            }\n\n            return view;\n        },\n\n        total: function() {\n            return this._total;\n        },\n\n        destroy: function() {\n            this.buffer.destroy();\n            this.unbind();\n        }\n    });\n\n    extend(true, kendo.data, {\n        readers: {\n            json: DataReader\n        },\n        Query: Query,\n        DataSource: DataSource,\n        HierarchicalDataSource: HierarchicalDataSource,\n        Node: Node,\n        Comparer: Comparer,\n        ObservableObject: ObservableObject,\n        ObservableArray: ObservableArray,\n        LazyObservableArray: LazyObservableArray,\n        LocalTransport: LocalTransport,\n        RemoteTransport: RemoteTransport,\n        Cache: Cache,\n        DataReader: DataReader,\n        Model: Model,\n        Buffer: Buffer,\n        BatchBuffer: BatchBuffer\n    });\n})(window.kendo.jQuery);\n"]}