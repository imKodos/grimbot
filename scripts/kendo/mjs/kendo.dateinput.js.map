{"version":3,"file":"kendo.dateinput.js","names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","caret","ui","Widget","keys","ns","objectToString","toString","isPlainObject","INPUT_EVENT_NAME","support","propertyChangeEvent","FOCUSED","STATEDISABLED","STATEINVALID","DISABLED","READONLY","CHANGE","knownSymbols","DateInput","extend","init","element","options","that","this","fn","call","format","_extractFormat","getCulture","culture","calendars","standard","patterns","d","min","parseDate","attr","max","wrapperClass","parent","skipWrapping","indexOf","wrapper","wrap","addClass","className","removeClass","style","cssText","css","height","_validationIcon","insertAfter","_form","on","_change","setAttribute","e","type","is","parents","enable","readonly","value","val","_applyCssClasses","label","_label","notify","Date","messages","year","month","day","weekday","hour","minute","second","dayperiod","size","fillMode","rounded","events","setOptions","_unbindInput","_bindInput","_updateElementValue","_inputLabel","_unwrapFloating","remove","destroy","off","_formElement","_resetHandler","_dateTime","getDateObject","getTime","customDateTime","_oldValue","floatingLabel","refresh","stringAndFormat","toPair","_oldText","_format","_toggleDateMask","toShow","_editable","disable","labelOptions","content","Label","widget","floatCheck","document","activeElement","_paste","bind","_keydown","_input","_mouseUp","_scroll","length","removeAttribute","oldValue","trigger","blinkInvalid","_activeElement","diff","oldText","oldFormat","newText","oldTextSeparator","substring","i","push","deletedSymbol","symbol","Math","approximateStringMatching","navigationOnly","valid","parsePart","_selectSegment","difSym","setTimeout","keyCode","preventDefault","_blinkInvalidState","_addInvalidState","clearTimeout","_invalidStateTimeout","_removeInvalidState","selection","_selectNearestSegment","newEvent","event","shiftKey","wheelDelta","detail","returnValue","stopPropagation","formId","form","closest","initialValue","key","dir","index","interval","modifyPart","browser","msie","version","keycode","which","ENTER","start","j","begin","end","cssProperties","registerPrefix","registerValues","prop","values","roundedValues","concat","plugin","initDate","initFormat","initCulture","initMessages","date","hours","minutes","seconds","typedMonthPart","typedDayPeriodPart","placeholders","zeros","pad","number","digits","dateFormatRegExp","months","calendar","days","returnsFormat","matcher","match","mins","sign","result","getDate","namesAbbr","getDay","names","getMonth","getFullYear","getHours","getMinutes","getSeconds","floor","getMilliseconds","AM","PM","getTimezoneOffset","abs","split","slice","formatResult","generateMatcher","retFormat","setExisting","setMonth","setValue","getValue","offset","newValue","setFullYear","newMonth","setDate","setHours","setMinutes","setSeconds","currentChar","newHours","lastDateOfMonth","newDate","parseInt","isNaN","monthNames","toLowerCase","newYear","newMinutes","newSeconds","replace","sampleFormat","jQuery"],"sources":["kendo.dateinput.js"],"mappings":"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","sourcesContent":["import './kendo.core.js';\nimport './kendo.label.js';\n\nvar __meta__ = {\n    id: \"dateinput\",\n    name: \"DateInput\",\n    category: \"web\",\n    description: \"The DateInput widget allows to edit date by typing.\",\n    depends: [ \"core\", \"label\" ]\n};\n\n(function($, undefined$1) {\n    var global = window;\n    var kendo = global.kendo;\n    var caret = kendo.caret;\n    var ui = kendo.ui;\n    var Widget = ui.Widget;\n    var keys = kendo.keys;\n    var ns = \".kendoDateInput\";\n    var objectToString = {}.toString;\n    var isPlainObject = $.isPlainObject;\n\n    var INPUT_EVENT_NAME = (kendo.support.propertyChangeEvent ? \"propertychange.kendoDateInput input\" : \"input\") + ns;\n\n    var FOCUSED = \"k-focus\";\n    var STATEDISABLED = \"k-disabled\";\n    var STATEINVALID = \"k-invalid\";\n\n    var DISABLED = \"disabled\";\n    var READONLY = \"readonly\";\n    var CHANGE = \"change\";\n\n    var knownSymbols = \"dMyHhmftsz\";\n\n    var DateInput = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n            element = that.element;\n\n            options = that.options;\n            options.format = kendo._extractFormat(options.format || kendo.getCulture(options.culture).calendars.standard.patterns.d);\n            options.min = kendo.parseDate(element.attr(\"min\")) || kendo.parseDate(options.min);\n            options.max = kendo.parseDate(element.attr(\"max\")) || kendo.parseDate(options.max);\n\n            var wrapperClass = (element.parent().attr(\"class\") || \"\");\n            var skipWrapping = wrapperClass.indexOf(\"picker\") >= 0 && wrapperClass.indexOf(\"rangepicker\") < 0;\n\n            if (skipWrapping) {\n                that.wrapper = element.parent();\n            } else {\n                that.wrapper = element.wrap(\"<span class='k-dateinput k-input'></span>\").parent();\n                that.wrapper.addClass(element[0].className).removeClass('input-validation-error');\n                that.wrapper[0].style.cssText = element[0].style.cssText;\n                element.css({\n                    height: element[0].style.height\n                });\n            }\n\n            that._validationIcon = $(\"<span class='k-input-validation-icon k-icon k-i-warning k-hidden'></span>\").insertAfter(element);\n\n            that._form();\n\n            that.element\n                .addClass(skipWrapping ? \" \" : \"k-input-inner\")\n                .attr(\"autocomplete\", \"off\")\n                .on(\"focus\" + ns, function() {\n                    that.wrapper.addClass(FOCUSED);\n                })\n                .on(\"focusout\" + ns, function() {\n                    that.wrapper.removeClass(FOCUSED);\n                    that._change();\n                });\n\n            try {\n                element[0].setAttribute(\"type\", \"text\");\n            } catch (e) {\n                element[0].type = \"text\";\n            }\n\n            var disabled = element.is(\"[disabled]\") || $(that.element).parents(\"fieldset\").is(':disabled');\n\n            if (disabled) {\n                that.enable(false);\n            } else {\n                that.readonly(element.is(\"[readonly]\"));\n            }\n            that.value(that.options.value || element.val());\n            that._applyCssClasses();\n\n            if (options.label) {\n                that._label();\n            }\n\n            kendo.notify(that);\n        },\n\n        options: {\n            name: \"DateInput\",\n            culture: \"\",\n            value: \"\",\n            format: \"\",\n            min: new Date(1900, 0, 1),\n            max: new Date(2099, 11, 31),\n            messages: {\n                \"year\": \"year\",\n                \"month\": \"month\",\n                \"day\": \"day\",\n                \"weekday\": \"day of the week\",\n                \"hour\": \"hours\",\n                \"minute\": \"minutes\",\n                \"second\": \"seconds\",\n                \"dayperiod\": \"AM/PM\"\n            },\n            size: \"medium\",\n            fillMode: \"solid\",\n            rounded: \"medium\",\n            label: null\n        },\n\n        events: [\n            CHANGE\n        ],\n\n        min: function(value) {\n            if (value !== undefined$1) {\n                this.options.min = value;\n            } else {\n                return this.options.min;\n            }\n        },\n\n        max: function(value) {\n            if (value !== undefined$1) {\n                this.options.max = value;\n            } else {\n                return this.options.max;\n            }\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            Widget.fn.setOptions.call(that, options);\n            this._unbindInput();\n            this._bindInput();\n            this._updateElementValue();\n\n            if (options.label && that._inputLabel) {\n                that.label.setOptions(options.label);\n            } else if (options.label === false) {\n                that.label._unwrapFloating();\n                that._inputLabel.remove();\n                delete that._inputLabel;\n            } else if (options.label) {\n                that._label();\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n            that.element.off(ns);\n\n            if (that._formElement) {\n                that._formElement.off(\"reset\", that._resetHandler);\n            }\n\n            if (that.label) {\n                that.label.destroy();\n            }\n\n            Widget.fn.destroy.call(that);\n        },\n\n        value: function(value) {\n            if (value === undefined$1) {\n                return this._dateTime.getDateObject();\n            }\n\n            if (value === null) {\n                value = \"\";\n            }\n\n            if (objectToString.call(value) !== \"[object Date]\") {\n                value = kendo.parseDate(value, this.options.format, this.options.culture);\n            }\n\n            if (value && !value.getTime()) {\n                value = null;\n            }\n\n            this._dateTime = new customDateTime(value, this.options.format, this.options.culture, this.options.messages);\n\n            this._updateElementValue();\n            this._oldValue = value;\n\n            if (this.label && this.label.floatingLabel) {\n                this.label.floatingLabel.refresh();\n            }\n        },\n\n        _updateElementValue: function() {\n            var stringAndFormat = this._dateTime.toPair(this.options.format, this.options.culture, this.options.messages);\n            this.element.val(stringAndFormat[0]);\n            this._oldText = stringAndFormat[0];\n            this._format = stringAndFormat[1];\n        },\n\n        _toggleDateMask: function(toShow) {\n            var that = this;\n\n            if (toShow) {\n                that._updateElementValue();\n            } else {\n                this.element.val(\"\");\n            }\n        },\n\n        readonly: function(readonly) {\n            this._editable({\n                readonly: readonly === undefined$1 ? true : readonly,\n                disable: false\n            });\n\n            if (this.label && this.label.floatingLabel) {\n                this.label.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n            }\n        },\n\n        enable: function(enable) {\n            this._editable({\n                readonly: false,\n                disable: !(enable = enable === undefined$1 ? true : enable)\n            });\n\n            if (this.label && this.label.floatingLabel) {\n                this.label.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n            }\n        },\n\n        _label: function() {\n            var that = this;\n            var options = that.options;\n            var labelOptions = isPlainObject(options.label) ? options.label : {\n                content: options.label\n            };\n\n            that.label = new kendo.ui.Label(null, $.extend({}, labelOptions, {\n                widget: that,\n                floatCheck: () => {\n                    that._toggleDateMask(true);\n\n                    if (!that.value() && document.activeElement !== that.element[0]) {\n                        that._toggleDateMask(false);\n                        return true;\n                    }\n\n                    return false;\n                }\n            }));\n\n            that._inputLabel = that.label.element;\n        },\n\n        _bindInput: function() {\n            var that = this;\n            that.element\n                .on(\"focus\" + ns, function() {\n                    that.wrapper.addClass(FOCUSED);\n                })\n                .on(\"focusout\" + ns, function() {\n                    that.wrapper.removeClass(FOCUSED);\n                    that._change();\n                })\n                .on(\"paste\" + ns, that._paste.bind(that))\n                .on(\"keydown\" + ns, that._keydown.bind(that))\n                .on(INPUT_EVENT_NAME, that._input.bind(that))\n                .on(\"mouseup\" + ns, that._mouseUp.bind(that))\n                .on(\"DOMMouseScroll\" + ns + \" mousewheel\" + ns, that._scroll.bind(that));\n        },\n\n        _unbindInput: function() {\n            this.element\n                .off(\"keydown\" + ns)\n                .off(\"paste\" + ns)\n                .off(\"focus\" + ns)\n                .off(\"focusout\" + ns)\n                .off(INPUT_EVENT_NAME)\n                .off(\"mouseup\" + ns)\n                .off(\"DOMMouseScroll\" + ns + \" mousewheel\" + ns);\n        },\n\n        _editable: function(options) {\n            var that = this;\n            var element = that.element;\n            var disable = options.disable;\n            var readonly = options.readonly;\n            var wrapper = that.wrapper;\n\n            that._unbindInput();\n\n            if (!readonly && !disable) {\n                wrapper.removeClass(STATEDISABLED);\n                if (element && element.length) {\n                    element[0].removeAttribute(DISABLED);\n                    element[0].removeAttribute(READONLY);\n                }\n\n                that._bindInput();\n            } else {\n                if (disable) {\n                    wrapper.addClass(STATEDISABLED);\n                    element.attr(DISABLED, disable);\n                    if (element && element.length) {\n                        element[0].removeAttribute(READONLY);\n                    }\n                }\n                if (readonly) {\n                    element.attr(READONLY, readonly);\n                }\n            }\n        },\n\n        _change: function() {\n            var that = this;\n            var oldValue = that._oldValue;\n            var value = that.value();\n\n            if (value && that.min() && value < that.min()) {\n                that.value(that.min());\n                value = that.value();\n            }\n            if (value && that.max() && value > that.max()) {\n                that.value(that.max());\n                value = that.value();\n            }\n\n            if (oldValue && value && value.getTime() !== oldValue.getTime() ||\n                oldValue && !value ||\n                !oldValue && value\n            ) {\n                that._oldValue = value;\n                that.trigger(CHANGE);\n                that.element.trigger(CHANGE);\n            }\n        },\n\n        _input: function() {\n            var that = this;\n            var element = that.element[0];\n            var blinkInvalid = false;\n\n            if (kendo._activeElement() !== element) {\n                return;\n            }\n\n            var diff = approximateStringMatching(\n                this._oldText,\n                this._format,\n                this.element[0].value,\n                caret(this.element[0])[0]);\n\n            var navigationOnly = (diff.length === 1 && diff[0][1] === \" \");\n            if (!navigationOnly) {\n                for (var i = 0; i < diff.length; i++) {\n                    var valid = this._dateTime.parsePart(diff[i][0], diff[i][1]);\n                    blinkInvalid = blinkInvalid || !valid;\n                }\n            }\n            this._updateElementValue();\n\n            if (diff.length && diff[0][0] !== \" \") {\n                this._selectSegment(diff[0][0]);\n\n                //android fix\n                if (!navigationOnly) {\n                    var difSym = diff[0][0];\n                    setTimeout(function() { that._selectSegment(difSym); });\n                }\n            }\n            if (navigationOnly) {\n                var newEvent = { keyCode: 39, preventDefault: function() { } };\n                this._keydown(newEvent);\n            }\n            if (blinkInvalid) {\n                that._blinkInvalidState();\n            }\n        },\n\n        _blinkInvalidState: function() {\n            var that = this;\n\n            that._addInvalidState();\n            clearTimeout(that._invalidStateTimeout);\n            that._invalidStateTimeout = setTimeout(that._removeInvalidState.bind(that), 100);\n        },\n\n        _addInvalidState: function() {\n            var that = this;\n\n            that.wrapper.addClass(STATEINVALID);\n            that._validationIcon.removeClass(\"k-hidden\");\n        },\n\n        _removeInvalidState: function() {\n            var that = this;\n\n            that.wrapper.removeClass(STATEINVALID);\n            that._validationIcon.addClass(\"k-hidden\");\n            that._invalidStateTimeout = null;\n        },\n\n        _mouseUp: function() {\n            var selection = caret(this.element[0]);\n            if (selection[0] === selection[1]) {\n                this._selectNearestSegment();\n            }\n        },\n\n        _scroll: function(e) {\n            if (kendo._activeElement() !== this.element[0] || this.element.is(\"[readonly]\")) {\n                return;\n            }\n            e = window.event || e;\n\n            var newEvent = { keyCode: 37, preventDefault: function() { } };\n\n            if (e.shiftKey) {\n                newEvent.keyCode = (e.wheelDelta || -e.detail) > 0 ? 37 : 39;\n            } else {\n                newEvent.keyCode = (e.wheelDelta || -e.detail) > 0 ? 38 : 40;\n            }\n            this._keydown(newEvent);\n            e.returnValue = false;\n            if (e.preventDefault) {\n                e.preventDefault();\n            }\n            if (e.stopPropagation) {\n                e.stopPropagation();\n            }\n        },\n\n        _form: function() {\n            var that = this;\n            var element = that.element;\n            var formId = element.attr(\"form\");\n            var form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n            var initialValue = element[0].value;\n\n            if (!initialValue && that.options.value) {\n                initialValue = that.options.value;\n            }\n\n            if (form[0]) {\n                that._resetHandler = function() {\n                    setTimeout(function() {\n                        that.value(initialValue);\n                    });\n                };\n\n                that._formElement = form.on(\"reset\", that._resetHandler);\n            }\n        },\n\n        _paste: function(e) {\n            e.preventDefault();\n        },\n\n        _keydown: function(e) {\n            var key = e.keyCode;\n            var selection;\n            if (key == 37 || key == 39) { //left/right\n                e.preventDefault();\n                selection = caret(this.element[0]);\n                if (selection[0] != selection[1]) {\n                    this._selectNearestSegment();\n                }\n                var dir = (key == 37) ? -1 : 1;\n                var index = (dir == -1) ? caret(this.element[0])[0] - 1 : caret(this.element[0])[1] + 1;\n                while (index >= 0 && index < this._format.length) {\n                    if (knownSymbols.indexOf(this._format[index]) >= 0) {\n                        this._selectSegment(this._format[index]);\n                        break;\n                    }\n                    index += dir;\n                }\n            }\n            if (key == 38 || key == 40) { //up/down\n                e.preventDefault();\n                selection = caret(this.element[0]);\n                var symbol = this._format[selection[0]];\n                if (knownSymbols.indexOf(symbol) >= 0) {\n                    var interval = 1;\n                    if (symbol == 'm') {\n                        interval = this.options.interval || 1;\n                    }\n                    this._dateTime.modifyPart(symbol, key == 38 ? interval * 1 : interval * -1);\n                    this._updateElementValue();\n                    this._selectSegment(symbol);\n                    this.element.trigger(CHANGE);\n                }\n            }\n            if (kendo.support.browser.msie && kendo.support.browser.version < 10) {\n                var keycode = e.keyCode ? e.keyCode : e.which;\n                if (keycode === 8 || keycode === 46) {\n                    var that = this;\n                    setTimeout(function() {\n                        that._input();\n                    }, 0);\n                }\n            }\n            if (key === keys.ENTER) {\n                this._change();\n            }\n        },\n\n        _selectNearestSegment: function() {\n            var selection = caret(this.element[0]);\n            var start = selection[0];\n            for (var i = start, j = start - 1; i < this._format.length || j >= 0; i++ , j--) {\n                if (i < this._format.length && knownSymbols.indexOf(this._format[i]) !== -1) {\n                    this._selectSegment(this._format[i]);\n                    return;\n                }\n                if (j >= 0 && knownSymbols.indexOf(this._format[j]) !== -1) {\n                    this._selectSegment(this._format[j]);\n                    return;\n                }\n            }\n        },\n\n        _selectSegment: function(symbol) {\n            var begin = -1, end = 0;\n            for (var i = 0; i < this._format.length; i++) {\n                if (this._format[i] === symbol) {\n                    end = i + 1;\n                    if (begin === -1) {\n                        begin = i;\n                    }\n                }\n            }\n            if (begin < 0) {\n                begin = 0;\n            }\n            caret(this.element, begin, end);\n        }\n\n    });\n\n    kendo.cssProperties.registerPrefix(\"DateInput\", \"k-input-\");\n\n    kendo.cssProperties.registerValues(\"DateInput\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    ui.plugin(DateInput);\n\n    var customDateTime = function(initDate, initFormat, initCulture, initMessages) {\n\n        var value = null;\n        var year = true, month = true, date = true, hours = true, minutes = true, seconds = true, milliseconds = true;\n        var typedMonthPart = \"\";\n        var typedDayPeriodPart = \"\";\n        var placeholders = {};\n\n        //TODO: rewrite pad method\n        var zeros = [\"\", \"0\", \"00\", \"000\", \"0000\"];\n        function pad(number, digits, end) {\n            number = number + \"\";\n            digits = digits || 2;\n            end = digits - number.length;\n\n            if (end) {\n                return zeros[digits].substring(0, end) + number;\n            }\n\n            return number;\n        }\n        var dateFormatRegExp = /dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|HH|H|hh|h|mm|m|fff|ff|f|tt|ss|s|zzz|zz|z|\"[^\"]*\"|'[^']*'/g;\n        var months = null, calendar = null, days = null, returnsFormat = false;\n        var matcher = function(match) {\n            var mins, sign;\n            var result;\n\n            switch (match) {\n                case (\"d\"): result = date ? value.getDate() : placeholders.day; break;\n                case (\"dd\"): result = date ? pad(value.getDate()) : placeholders.day; break;\n                case (\"ddd\"): result = date && month && year ? days.namesAbbr[value.getDay()] : placeholders.weekday; break;\n                case (\"dddd\"): result = date && month && year ? days.names[value.getDay()] : placeholders.weekday; break;\n\n                case (\"M\"): result = month ? value.getMonth() + 1 : placeholders.month; break;\n                case (\"MM\"): result = month ? pad(value.getMonth() + 1) : placeholders.month; break;\n                case (\"MMM\"): result = month ? months.namesAbbr[value.getMonth()] : placeholders.month; break;\n                case (\"MMMM\"): result = month ? months.names[value.getMonth()] : placeholders.month; break;\n\n                case (\"yy\"): result = year ? pad(value.getFullYear() % 100) : placeholders.year; break;\n                case (\"yyyy\"): result = year ? pad(value.getFullYear(), 4) : placeholders.year; break;\n\n                case (\"h\"): result = hours ? value.getHours() % 12 || 12 : placeholders.hour; break;\n                case (\"hh\"): result = hours ? pad(value.getHours() % 12 || 12) : placeholders.hour; break;\n                case (\"H\"): result = hours ? value.getHours() : placeholders.hour; break;\n                case (\"HH\"): result = hours ? pad(value.getHours()) : placeholders.hour; break;\n\n                case (\"m\"): result = minutes ? value.getMinutes() : placeholders.minute; break;\n                case (\"mm\"): result = minutes ? pad(value.getMinutes()) : placeholders.minute; break;\n                case (\"s\"): result = seconds ? value.getSeconds() : placeholders.second; break;\n                case (\"ss\"): result = seconds ? pad(value.getSeconds()) : placeholders.second; break;\n                case (\"f\"): result = milliseconds ? Math.floor(value.getMilliseconds() / 100) : milliseconds; break;\n                case (\"ff\"):\n                    result = value.getMilliseconds();\n                    if (result > 99) {\n                        result = Math.floor(result / 10);\n                    }\n                    result = milliseconds ? pad(result) : match;\n                    break;\n                case (\"fff\"): result = milliseconds ? pad(value.getMilliseconds(), 3) : match; break;\n                case (\"tt\"): result = hours ? (value.getHours() < 12 ? calendar.AM[0] : calendar.PM[0]) : placeholders.dayperiod; break;\n                case (\"zzz\"):\n                    mins = value.getTimezoneOffset();\n                    sign = mins < 0;\n                    result = Math.abs(mins / 60).toString().split(\".\")[0];\n                    mins = Math.abs(mins) - (result * 60);\n                    result = (sign ? \"+\" : \"-\") + pad(result);\n                    result += \":\" + pad(mins);\n                    break;\n                case (\"z\"):\n                case (\"zz\"):\n                    result = value.getTimezoneOffset() / 60;\n                    sign = result < 0;\n                    result = Math.abs(result).toString().split(\".\")[0];\n                    result = (sign ? \"+\" : \"-\") + (match === \"zz\" ? pad(result) : result);\n                    break;\n            }\n            result = (result !== undefined$1 ? result : match.slice(1, match.length - 1));\n\n            if (returnsFormat) {\n                result = \"\" + result;\n                var formatResult = \"\";\n                if (match == \"ddd\") { match = \"EEE\"; }\n                if (match == \"dddd\") { match = \"EEEE\"; }\n                for (var i = 0; i < result.length; i++) {\n                    formatResult += match[0];\n                }\n                return formatResult;\n            } else {\n                return result;\n            }\n        };\n\n        function generateMatcher(retFormat) {\n            returnsFormat = retFormat;\n            return matcher;\n        }\n\n        function setExisting(symbol, val) {\n            switch (symbol) {\n                case \"y\": year = val; break;\n                case \"M\": month = val;\n                    if (!val) {\n                        value.setMonth(0);\n                        typedMonthPart = \"\";\n                    }\n                    break;\n                case \"d\": date = val; break;\n                case \"H\":\n                case \"h\": hours = val;\n                    if (!val) {\n                        typedDayPeriodPart = \"\";\n                    }\n                    break;\n                case \"m\": minutes = val; break;\n                case \"s\": seconds = val; break;\n                default: return;\n            }\n        }\n\n        this.setValue = function(val) {\n            date = val;\n        };\n\n        this.getValue = function() {\n            return date;\n        };\n\n        this.modifyPart = function(symbol, offset) {\n            var newValue = new Date((value && value.getTime) ? value.getTime() : value);\n            switch (symbol) {\n                case \"y\": newValue.setFullYear(newValue.getFullYear() + offset); break;\n                case \"M\":\n                    var newMonth = newValue.getMonth() + offset;\n                    newValue.setMonth(newMonth);\n                    if (newValue.getMonth() % 12 !== (newMonth + 12) % 12) {\n                        //handle case when new month does not have such date\n                        newValue.setDate(1);\n                        newValue.setMonth(newMonth);\n                    }\n                    break;\n                case \"d\":\n                case \"E\": newValue.setDate(newValue.getDate() + offset); break;\n                case \"H\":\n                case \"h\": newValue.setHours(newValue.getHours() + offset); break;\n                case \"m\": newValue.setMinutes(newValue.getMinutes() + offset); break;\n                case \"s\": newValue.setSeconds(newValue.getSeconds() + offset); break;\n                case \"t\": newValue.setHours((newValue.getHours() + 12) % 24); break;\n                default: break;\n            }\n            if (newValue.getFullYear() > 0) {\n                setExisting(symbol, true);\n                value = newValue;\n            }\n        };\n\n        this.parsePart = function(symbol, currentChar) {\n            if (!currentChar) {\n                setExisting(symbol, false);\n                return true;\n            }\n            var newValue = new Date((value && value.getTime) ? value.getTime() : value);\n            var lastDateOfMonth = new Date(newValue.getFullYear(), newValue.getMonth() + 1, 0).getDate();\n            var newHours;\n            switch (symbol) {\n                case \"d\":\n                    var newDate = (date ? newValue.getDate() * 10 : 0) + parseInt(currentChar, 10);\n                    if (isNaN(newDate)) { return; }\n                    while (newDate > lastDateOfMonth) {\n                        newDate = parseInt(newDate.toString().slice(1), 10);\n                    }\n                    if (newDate < 1) {\n                        date = false;\n                    } else {\n                        newValue.setDate(newDate);\n                        if (newValue.getMonth() !== value.getMonth()) {\n                            return;\n                        }\n                        date = true;\n                    }\n                    break;\n                case \"M\":\n                    var newMonth = (month ? (newValue.getMonth() + 1) * 10 : 0) + parseInt(currentChar, 10);\n                    if (!isNaN(newMonth)) {\n                        while (newMonth > 12) {\n                            newMonth = parseInt(newMonth.toString().slice(1), 10);\n                        }\n                        if (newMonth < 1) {\n                            month = false;\n                        } else {\n                            newValue.setMonth(newMonth - 1);\n                            if (newValue.getMonth() !== newMonth - 1) {\n                                newValue.setDate(1);\n                                newValue.setMonth(newMonth - 1);\n                            }\n                            month = true;\n                        }\n                    }\n                    else {\n                        var monthNames = calendar.months.names;\n                        typedMonthPart += currentChar.toLowerCase();\n\n                        while (typedMonthPart.length > 0) {\n                            for (var i = 0; i < monthNames.length; i++) {\n                                if (monthNames[i].toLowerCase().indexOf(typedMonthPart) === 0) {\n                                    newValue.setMonth(i);\n                                    month = true;\n                                    value = newValue;\n                                    return true;\n                                }\n                            }\n                            typedMonthPart = typedMonthPart.substring(1, typedMonthPart.length);\n                        }\n                        return false;\n                    }\n                    break;\n                case \"y\":\n                    var newYear = (year ? (newValue.getFullYear()) * 10 : 0) + parseInt(currentChar, 10);\n                    if (isNaN(newYear)) {return;}\n                    while (newYear > 9999) {\n                        newYear = parseInt(newYear.toString().slice(1), 10);\n                    }\n                    if (newYear < 1) {\n                        year = false;\n                    } else {\n                        newValue.setFullYear(newYear);\n                        year = true;\n                    }\n                    break;\n                case \"h\":\n                    newHours = (hours ? (newValue.getHours() % 12 || 12) * 10 : 0) + parseInt(currentChar, 10);\n                    if (isNaN(newHours)) { return; }\n                    while (newHours > 12) {\n                        newHours = parseInt(newHours.toString().slice(1), 10);\n                    }\n                    newValue.setHours(Math.floor(newValue.getHours() / 12) * 12 + newHours % 12);\n                    hours = true;\n                    break;\n                case \"H\":\n                    newHours = (hours ? (newValue.getHours()) * 10 : 0) + parseInt(currentChar, 10);\n                    if (isNaN(newHours)) { return; }\n                    while (newHours > 23) {\n                        newHours = parseInt(newHours.toString().slice(1), 10);\n                    }\n                    newValue.setHours(newHours);\n                    hours = true;\n                    break;\n                case \"m\":\n                    var newMinutes = (minutes ? (newValue.getMinutes()) * 10 : 0) + parseInt(currentChar, 10);\n                    if (isNaN(newMinutes)) { return; }\n                    while (newMinutes > 59) {\n                        newMinutes = parseInt(newMinutes.toString().slice(1), 10);\n                    }\n                    newValue.setMinutes(newMinutes);\n                    minutes = true;\n                    break;\n                case \"s\":\n                    var newSeconds = (seconds ? (newValue.getSeconds()) * 10 : 0) + parseInt(currentChar, 10);\n                    if (isNaN(newSeconds)) { return; }\n                    while (newSeconds > 59) {\n                        newSeconds = parseInt(newSeconds.toString().slice(1), 10);\n                    }\n                    newValue.setSeconds(newSeconds);\n                    seconds = true;\n                    break;\n                case \"t\":\n                    if (hours) {\n                        typedDayPeriodPart += currentChar.toLowerCase();\n                        while (typedDayPeriodPart.length > 0) {\n                            if (calendar.AM[0].toLowerCase().indexOf(typedDayPeriodPart) === 0 && newValue.getHours() >= 12 ||\n                                calendar.PM[0].toLowerCase().indexOf(typedDayPeriodPart) === 0 && newValue.getHours() < 12) {\n                                newValue.setHours((newValue.getHours() + 12) % 24);\n                                value = newValue;\n                                return true;\n                            }\n                            typedDayPeriodPart = typedDayPeriodPart.substring(1, typedDayPeriodPart.length);\n                        }\n                        return false;\n                    }\n                    break;\n                default: break;\n            }\n            value = newValue;\n            return true;\n        };\n\n        this.toPair = function(format, culture , messages) {\n            if (!format) {\n                return [\"\", \"\"];\n            }\n            culture = kendo.getCulture(culture);\n            calendar = culture.calendars.standard;\n            format = calendar.patterns[format] || format;\n            days = calendar.days;\n            months = calendar.months;\n            placeholders = messages;\n            return [\n                format.replace(dateFormatRegExp, generateMatcher(false)),\n                format.replace(dateFormatRegExp, generateMatcher(true))\n            ];\n        };\n\n        this.getDateObject = function() {\n            return (year && month && date && hours && minutes && seconds && milliseconds) ?\n                new Date(value.getTime()) : null;\n        };\n\n        if (!initDate) {\n            value = new Date();\n            var sampleFormat = this.toPair(initFormat, initCulture, initMessages)[1];\n            for (var i = 0; i < sampleFormat.length; i++) {\n                setExisting(sampleFormat[i], false);\n            }\n        } else {\n            value = new Date(initDate.getTime());\n        }\n    };\n\n    function approximateStringMatching(oldText, oldFormat, newText, caret) {\n        var oldTextSeparator = oldText[caret + oldText.length - newText.length];\n        oldText = oldText.substring(0, caret + oldText.length - newText.length);\n        newText = newText.substring(0, caret);\n        var diff = [];\n        var i;\n        //handle typing single character over the same selection\n        if (oldText === newText && caret > 0) {\n            diff.push([oldFormat[caret - 1], newText[caret - 1]]);\n            return diff;\n        }\n        if (oldText.indexOf(newText) === 0 && (newText.length === 0 || oldFormat[newText.length - 1] !== oldFormat[newText.length])) {\n            //handle delete/backspace\n            var deletedSymbol = \"\";\n            for (i = newText.length; i < oldText.length; i++) {\n                if (oldFormat[i] !== deletedSymbol && knownSymbols.indexOf(oldFormat[i]) >= 0) {\n                    deletedSymbol = oldFormat[i];\n                    diff.push([deletedSymbol, \"\"]);\n                }\n            }\n            return diff;\n        }\n\n        //handle entering space or separator, for nagivation to next item\n        if (newText[newText.length - 1] === \" \" || newText[newText.length - 1] === oldTextSeparator) {\n            return [[oldFormat[caret - 1], \" \"]];\n        }\n\n        //handle inserting text (new text is longer than previous)\n        //handle typing over literal as well\n        if (newText.indexOf(oldText) === 0 || knownSymbols.indexOf(oldFormat[caret - 1]) === -1) {\n            var symbol = oldFormat[0];\n            for (i = Math.max(0, oldText.length - 1); i < oldFormat.length; i++) {\n                if (knownSymbols.indexOf(oldFormat[i]) >= 0) {\n                    symbol = oldFormat[i];\n                    break;\n                }\n            }\n            return [[symbol, newText[caret - 1]]];\n        }\n        //handle typing over correctly selected part\n        return [[oldFormat[caret - 1], newText[caret - 1]]];\n}\n\n})(window.kendo.jQuery);\n"]}