{"version":3,"file":"kendo.badge.js","names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","Widget","ui","iconTemplate","svgIconTemplate","Badge","extend","init","element","options","that","this","fn","call","_content","_appearance","notify","destroy","cutoutBorder","data","fillMode","icon","max","Infinity","position","align","rounded","roundings","small","medium","large","full","sizes","size","template","text","themeColor","visible","_classNames","_text","_template","bind","html","_themeColor","_shape","shape","_sizes","_size","_fillMode","_rounded","_roundings","_cutoutBorder","_align","_position","_visible","_updateClassNames","classNames","keepClassNames","sizeAbbr","roundedAbbr","removeClass","index","className","indexOf","push","split","length","replace","addClass","join","setOptions","arguments","toString","iconTemplateFunction","_icon","color","hide","show","plugin","jQuery"],"sources":["kendo.badge.js"],"mappings":"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","sourcesContent":["import './kendo.core.js';\n\nvar __meta__ = {\n    id: \"badge\",\n    name: \"Badge\",\n    category: \"web\", // suite\n    description: \"The Badge decorates avatars, navigation menus, or other components in the application when visual notification is needed\",\n    depends: [\"core\"] // dependencies\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo;\n    var Widget = kendo.ui.Widget;\n    var ui = kendo.ui;\n    var HIDDEN = 'k-hidden';\n\n    var iconTemplate = '<span class=\\'k-badge-icon k-icon k-i-#= icon #\\'></span>';\n    var svgIconTemplate = '<span class=\\'k-badge-icon k-svg-icon\\'>#= icon #</span>';\n\n    var Badge = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that._content();\n\n            that._appearance();\n\n            kendo.notify(that);\n        },\n\n        destroy: function() {\n            var that = this;\n\n            Widget.fn.destroy.call(that);\n        },\n\n        options: {\n            name: 'Badge',\n            cutoutBorder: false,\n            data: {},\n            fillMode: 'solid',\n            icon: '',\n            max: Infinity,\n            position: 'inline',\n            align: '',\n            rounded: 'medium',\n            roundings: {\n                'small': 'sm',\n                'medium': 'md',\n                'large': 'lg',\n                'full': 'full'\n            },\n            sizes: {\n                'small': 'sm',\n                'medium': 'md',\n                'large': 'lg'\n            },\n            size: 'medium',\n            template: null,\n            text: '',\n            themeColor: 'secondary',\n            visible: true,\n            _classNames: []\n        },\n\n        _content: function() {\n            var that = this;\n            var text = that.options.text;\n            var template = that.options.template;\n            var data = that.options.data;\n            var icon = that.options.icon;\n\n            // Order of precedence\n            // 1) template\n            // 2) icon\n            // 3) text\n            // 4) content\n\n            if (template !== null) {\n                that._text = text;\n                that._template = kendo.template(template).bind(that);\n                that.element.html( that._template(data) );\n\n                return;\n            }\n\n            if (icon !== '') {\n                that.icon(icon);\n\n                return;\n            }\n\n            if (text !== '') {\n                that.text(text);\n\n                return;\n            }\n\n            that.text(that.element.html());\n        },\n\n        _appearance: function() {\n            var that = this;\n            that._themeColor = that.options.themeColor;\n            that._shape = that.options.shape;\n            that._sizes = that.options.sizes;\n            that._size = that.options.size;\n            that._fillMode = that.options.fillMode;\n            that._rounded = that.options.rounded;\n            that._roundings = that.options.roundings;\n            that._cutoutBorder = that.options.cutoutBorder;\n            that._align = that.options.align;\n            that._position = that.options.position;\n            that._visible = that.options.visible;\n\n            that._updateClassNames();\n        },\n\n        _updateClassNames: function() {\n            var that = this;\n            var classNames = ['k-badge'];\n            var keepClassNames = that.options._classNames;\n            var themeColor = that._themeColor;\n            var shape = that._shape;\n            var sizes = that._sizes;\n            var size = that._size;\n            var sizeAbbr = sizes[size] === undefined$1 ? size : sizes[size];\n            var fillMode = that._fillMode;\n            var rounded = that._rounded;\n            var roundings = that._roundings;\n            var roundedAbbr = roundings[rounded] === undefined$1 ? rounded : roundings[rounded];\n            var cutoutBorder = that._cutoutBorder;\n            var align = that._align;\n            var position = that._position;\n            var visible = that._visible;\n\n            // Remove all class names\n            that.element.removeClass(function(index, className) {\n                if (className.indexOf('k-') === 0 && keepClassNames.indexOf(className) === -1) {\n                    that.element.removeClass(className);\n                }\n            });\n\n            // Fill\n            if (typeof fillMode === 'string' && fillMode !== '') {\n                classNames.push('k-badge-' + fillMode);\n            }\n\n            // Color\n            if (typeof themeColor === 'string' && themeColor !== '') {\n                classNames.push('k-badge-' + fillMode + '-' + themeColor);\n            }\n\n            // Size\n            if (typeof size === 'string' && size !== '') {\n                classNames.push('k-badge-' + sizeAbbr);\n            }\n\n            // Rounded\n            if (typeof rounded === 'string' && rounded !== '') {\n                classNames.push('k-rounded-' + roundedAbbr);\n            }\n\n            // Shape\n            if (typeof shape === 'string' && shape !== '') {\n                classNames.push('k-badge-' + shape);\n            }\n\n            // Cutout border\n            if (typeof cutoutBorder === 'boolean' && cutoutBorder === true) {\n                classNames.push('k-badge-border-cutout');\n            }\n\n            // Position\n            if (typeof position === 'string' && position !== '') {\n                classNames.push('k-badge-' + position);\n            }\n\n            // Align\n            if (typeof position === 'string' && position !== '' && position !== 'inline' && typeof align === 'string' && align.split(' ').length == 2) {\n                classNames.push('k-' + align.replace(' ', '-'));\n            }\n\n            // Visibility\n            if (visible === false) {\n                classNames.push(HIDDEN);\n            }\n\n            // Apply classnames\n            that.element.addClass(classNames.join(' '));\n        },\n\n        setOptions: function(options) {\n            var that = this;\n\n            that.element.removeClass(function(index, className) {\n                if (className.indexOf('k-') >= 0) {\n                    that.element.removeClass(className);\n                }\n            });\n\n            Widget.fn.setOptions.call(that, options);\n\n            that._content();\n\n            that._appearance();\n        },\n\n        text: function(text) {\n            var that = this;\n            var max = that.options.max;\n\n            // handle badge.text()\n            if (arguments.length === 0 || text === undefined$1) {\n                return that._text;\n            }\n\n            that._text = text;\n\n            // handle badge.text(true|false|null)\n            if (text === true || text === false || text === null) {\n                that.element.html('');\n\n                return;\n            }\n\n            // handle badge.text('string')\n            if (typeof text === 'string') {\n                that.element.html(text);\n\n                return;\n            }\n\n            // handle badge.text(1)\n            if (typeof text === 'number') {\n                if (text > max) {\n                    that.element.html(max + '+');\n                } else {\n                    that.element.html(text);\n                }\n\n                return;\n            }\n\n            // handle other objects\n            if (typeof text === 'object' && 'toString' in text) {\n                that.element.html(text.toString());\n\n                return;\n            }\n\n        },\n\n        icon: function(icon) {\n            var that = this;\n            var iconTemplateFunction;\n\n            // handle badge.icon()\n            if (arguments.length === 0 || icon === undefined$1) {\n                return that._icon;\n            }\n\n            that._icon = icon;\n\n            // Handle badge.icon(<SVG />)\n            if (icon.indexOf('<svg') === 0) {\n                iconTemplateFunction = kendo.template(svgIconTemplate);\n                that.element.html(iconTemplateFunction({ icon: icon }));\n\n                return;\n            }\n\n            // Handle badge.icon(ICON_NAME)\n            iconTemplateFunction = kendo.template(iconTemplate);\n            that.element.html(iconTemplateFunction({ icon: icon }));\n        },\n\n        themeColor: function(color) {\n            var that = this;\n\n            // handle badge.color()\n            if (arguments.length === 0 || color === undefined$1) {\n                return that._themeColor;\n            }\n\n            that._themeColor = color;\n            that._updateClassNames();\n        },\n\n        rounded: function(rounded) {\n            var that = this;\n\n            // handle badge.shape()\n            if (arguments.length === 0 || rounded === undefined$1) {\n                return that._rounded;\n            }\n\n            that._rounded = rounded;\n            that._updateClassNames();\n        },\n\n        hide: function() {\n            var that = this;\n            that._visible = false;\n\n            that._updateClassNames();\n        },\n\n        show: function() {\n            var that = this;\n            that._visible = true;\n\n            that._updateClassNames();\n        }\n    });\n\n    ui.plugin(Badge);\n\n})(window.kendo.jQuery);\n"]}