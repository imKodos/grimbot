{"version":3,"file":"kendo.numerictextbox.js","names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","caret","keys","html","ui","Widget","activeElement","_activeElement","extractFormat","_extractFormat","parse","parseFloat","placeholderSupported","support","placeholder","getCulture","CHANGE","DISABLED","READONLY","INPUT","SPIN","ns","HOVEREVENTS","FOCUSED","HOVER","FOCUS","POINT","SELECTED","STATEDISABLED","STATEINVALID","ARIA_DISABLED","INTEGER_REGEXP","NULL","isPlainObject","extend","NumericTextBox","init","element","options","min","max","step","value","inputType","that","this","isStep","fn","call","on","_focusout","bind","attr","_parse","_initialOptions","_reset","_wrapper","_arrows","_validation","_input","mobileOS","_text","browser","edge","one","_focusin","selectValue","_click","factor","format","val","enable","is","parents","readonly","angular","elements","get","_label","_ariaLabel","_applyCssClasses","notify","decimals","restrictDecimals","round","culture","spinners","selectOnFocus","upArrowText","downArrowText","label","size","fillMode","rounded","events","_editable","disable","text","add","wrapper","off","_toggleText","_upArrowEventHandler","unbind","_downArrowEventHandler","_inputLabel","addClass","removeClass","_toggleHover","prop","e","preventDefault","_spin","_upArrow","_downArrow","_keydown","_keyup","_paste","_inputHandler","focus","floatingLabel","setOptions","toggleClass","_placeholder","destroy","_arrowsWrap","remove","_floatingLabelContainer","unwrap","_form","_resetHandler","_option","_value","_adjust","_update","_old","refresh","arrows","_release","clearTimeout","_spinning","siblings","buttonHtml","appendTo","wrapAll","parent","toggle","eq","UserEvents","release","_validationIcon","insertAfter","_blur","_change","_focusing","setTimeout","result","groupRegExp","extractRegExp","input","target","idx","substring","_format","group","caretPosition","RegExp","exec","replace","length","indexOf","select","_getFactorValue","_typing","trigger","_culture","_removeInvalidState","numberFormat","toLowerCase","currency","percent","show","accessKey","find","first","insertBefore","setAttribute","type","title","tabIndex","style","cssText","className","role","autocomplete","key","keyCode","NUMPAD_DOT","_numPadDot","DOWN","UP","ENTER","TAB","_cachedCaret","_step","decimalSeparator","minInvalid","charAt","_isPasted","toString","_numericRegex","test","_oldText","_blinkInvalidState","_addInvalidState","_invalidStateTimeout","separator","precision","fractionRule","_separator","_floatRegExp","option","timeout","originalValue","toFixed","currentTarget","removeAttr","_round","truncate","isNotNull","floating","labelText","content","wrap","FloatingLabel","widget","isFunction","guid","DOMElement","hide","width","css","formId","form","closest","direction","dir","renderButton","icon","shape","parts","split","join","cssProperties","registerPrefix","registerValues","values","roundedValues","concat","plugin","jQuery"],"sources":["kendo.numerictextbox.js"],"mappings":"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","sourcesContent":["import './kendo.core.js';\nimport './kendo.userevents.js';\nimport './kendo.floatinglabel.js';\nimport './kendo.html.button.js';\n\nvar __meta__ = {\n    id: \"numerictextbox\",\n    name: \"NumericTextBox\",\n    category: \"web\",\n    description: \"The NumericTextBox widget can format and display numeric, percentage or currency textbox.\",\n    depends: [ \"core\", \"userevents\", \"floatinglabel\", \"html.button\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        caret = kendo.caret,\n        keys = kendo.keys,\n        html = kendo.html,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        activeElement = kendo._activeElement,\n        extractFormat = kendo._extractFormat,\n        parse = kendo.parseFloat,\n        placeholderSupported = kendo.support.placeholder,\n        getCulture = kendo.getCulture,\n        CHANGE = \"change\",\n        DISABLED = \"disabled\",\n        READONLY = \"readonly\",\n        INPUT = \"k-input-inner\",\n        SPIN = \"spin\",\n        ns = \".kendoNumericTextBox\",\n        TOUCHEND = \"touchend\",\n        MOUSELEAVE = \"mouseleave\" + ns,\n        HOVEREVENTS = \"mouseenter\" + ns + \" \" + MOUSELEAVE,\n        FOCUSED = \"k-focus\",\n        HOVER = \"k-hover\",\n        FOCUS = \"focus\",\n        POINT = \".\",\n        SYMBOL = \"symbol\",\n        CLASS_ICON = \"k-icon\",\n        LABELCLASSES = \"k-label k-input-label\",\n        SELECTED = \"k-selected\",\n        STATEDISABLED = \"k-disabled\",\n        STATEINVALID = \"k-invalid\",\n        ARIA_DISABLED = \"aria-disabled\",\n        INTEGER_REGEXP = /^(-)?(\\d*)$/,\n        NULL = null,\n        isPlainObject = $.isPlainObject,\n        extend = $.extend;\n\n    var NumericTextBox = Widget.extend({\n         init: function(element, options) {\n             var that = this,\n             isStep = options && options.step !== undefined$1,\n             min, max, step, value, disabled;\n             var inputType;\n\n             Widget.fn.init.call(that, element, options);\n\n             options = that.options;\n             element = that.element\n                           .on(\"focusout\" + ns, that._focusout.bind(that))\n                           .attr(\"role\", \"spinbutton\");\n\n             options.placeholder = options.placeholder || element.attr(\"placeholder\");\n\n             min = that.min(element.attr(\"min\"));\n             max = that.max(element.attr(\"max\"));\n             step = that._parse(element.attr(\"step\"));\n\n             if (options.min === NULL && min !== NULL) {\n                 options.min = min;\n             }\n\n             if (options.max === NULL && max !== NULL) {\n                 options.max = max;\n             }\n\n             if (!isStep && step !== NULL) {\n                 options.step = step;\n             }\n\n             that._initialOptions = extend({}, options);\n\n             inputType = element.attr(\"type\");\n\n             that._reset();\n             that._wrapper();\n             that._arrows();\n             that._validation();\n             that._input();\n\n             if (!kendo.support.mobileOS) {\n                 that._text.on(FOCUS + ns, that._click.bind(that));\n             } else {\n                 that._text.on(TOUCHEND + ns + \" \" + FOCUS + ns, function() {\n                     if (kendo.support.browser.edge) {\n                         that._text.one(FOCUS + ns, function() {\n                            that._focusin();\n                         });\n                     } else {\n                        that._focusin();\n                     }\n                     that.selectValue();\n                 });\n             }\n\n             element.attr(\"aria-valuemin\", options.min !== NULL ? options.min * options.factor : options.min)\n                    .attr(\"aria-valuemax\", options.max !== NULL ? options.max * options.factor : options.max);\n\n             options.format = extractFormat(options.format);\n\n             value = options.value;\n\n             if (value == NULL) {\n                 if (inputType == \"number\") {\n                    value = parseFloat(element.val());\n                 } else {\n                     value = element.val();\n                 }\n             }\n\n             that.value(value);\n\n             disabled = !options.enable || element.is(\"[disabled]\") || $(that.element).parents(\"fieldset\").is(':disabled');\n\n             if (disabled) {\n                 that.enable(false);\n             } else {\n                 that.readonly(element.is(\"[readonly]\"));\n             }\n\n             that.angular(\"compile\", function() {\n                 return {\n                     elements: that._text.get()\n                 };\n             });\n\n             that._label();\n             that._ariaLabel(that._text);\n             that._applyCssClasses();\n\n             kendo.notify(that);\n         },\n\n        options: {\n            name: \"NumericTextBox\",\n            decimals: NULL,\n            enable: true,\n            restrictDecimals: false,\n            min: NULL,\n            max: NULL,\n            value: NULL,\n            step: 1,\n            round: true,\n            culture: \"\",\n            format: \"n\",\n            spinners: true,\n            placeholder: \"\",\n            selectOnFocus: false,\n            factor: 1,\n            upArrowText: \"Increase value\",\n            downArrowText: \"Decrease value\",\n            label: null,\n            size: \"medium\",\n            fillMode: \"solid\",\n            rounded: \"medium\"\n        },\n        events: [\n            CHANGE,\n            SPIN\n        ],\n\n        _editable: function(options) {\n            var that = this,\n                element = that.element,\n                disable = options.disable,\n                readonly = options.readonly,\n                text = that._text.add(element),\n                wrapper = that.wrapper.off(HOVEREVENTS);\n\n            that._toggleText(true);\n\n            that._upArrowEventHandler.unbind(\"press\");\n            that._downArrowEventHandler.unbind(\"press\");\n            element\n                .off(\"keydown\" + ns)\n                .off(\"keyup\" + ns)\n                .off(\"input\" + ns)\n                .off(\"paste\" + ns);\n\n            if (that._inputLabel) {\n                that._inputLabel.off(ns);\n            }\n\n            if (!readonly && !disable) {\n                wrapper\n                    .removeClass(STATEDISABLED)\n                    .on(HOVEREVENTS, that._toggleHover);\n\n                text.prop(DISABLED, false)\n                    .prop(READONLY, false)\n                    .attr(ARIA_DISABLED, false);\n\n                that._upArrowEventHandler.bind(\"press\", function(e) {\n                    e.preventDefault();\n                    that._spin(1);\n                    that._upArrow.addClass(SELECTED);\n                });\n\n                that._downArrowEventHandler.bind(\"press\", function(e) {\n                    e.preventDefault();\n                    that._spin(-1);\n                    that._downArrow.addClass(SELECTED);\n                });\n\n                that.element\n                    .on(\"keydown\" + ns, that._keydown.bind(that))\n                    .on(\"keyup\" + ns, that._keyup.bind(that))\n                    .on(\"paste\" + ns, that._paste.bind(that))\n                    .on(\"input\" + ns, that._inputHandler.bind(that));\n\n                if (that._inputLabel) {\n                    that._inputLabel.on(\"click\" + ns, that.focus.bind(that));\n                }\n\n            } else {\n                wrapper\n                    .addClass(disable ? STATEDISABLED : \"\")\n                    .removeClass(disable ? \"\" : STATEDISABLED);\n\n                text.attr(DISABLED, disable)\n                    .attr(READONLY, readonly)\n                    .attr(ARIA_DISABLED, disable);\n            }\n        },\n\n        readonly: function(readonly) {\n            var that = this;\n\n            this._editable({\n                readonly: readonly === undefined$1 ? true : readonly,\n                disable: false\n            });\n\n            if (that.floatingLabel) {\n                that.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n            }\n        },\n\n        enable: function(enable) {\n            var that = this;\n\n            this._editable({\n                readonly: false,\n                disable: !(enable = enable === undefined$1 ? true : enable)\n            });\n\n            if (that.floatingLabel) {\n                that.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n            }\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            Widget.fn.setOptions.call(that, options);\n\n            that.wrapper.toggleClass(\"k-expand-padding\", !that.options.spinners);\n            that._text.prop(\"placeholder\", that.options.placeholder);\n            that._placeholder(that.options.placeholder);\n            that.element.attr({\n                \"aria-valuemin\": that.options.min !== NULL ? that.options.min * that.options.factor : that.options.min,\n                \"aria-valuemax\": that.options.max !== NULL ? that.options.max * that.options.factor : that.options.max\n            });\n\n            that.options.format = extractFormat(that.options.format);\n            that._upArrowEventHandler.destroy();\n            that._upArrowEventHandler = null;\n            that._downArrowEventHandler.destroy();\n            that._downArrowEventHandler = null;\n            that._arrowsWrap.remove();\n            that._arrows();\n\n            that._applyCssClasses();\n\n            if (that._inputLabel) {\n                that._inputLabel.off(ns);\n                that._inputLabel.remove();\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.destroy();\n                    if (that._floatingLabelContainer) {\n                        that.wrapper.unwrap();\n                    }\n                }\n            }\n\n            that._label();\n\n            that._editable({\n                readonly: that.options.readonly,\n                disable: !that.options.enable\n            });\n\n            if (options.value !== undefined$1) {\n                that.value(options.value);\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that._inputLabel) {\n                that._inputLabel.off(ns);\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.destroy();\n                }\n            }\n\n            that.element\n                .add(that._text)\n                .add(that._upArrow)\n                .add(that._downArrow)\n                .off(ns);\n\n            that._upArrowEventHandler.destroy();\n            that._downArrowEventHandler.destroy();\n\n            if (that._form) {\n                that._form.off(\"reset\", that._resetHandler);\n            }\n\n            Widget.fn.destroy.call(that);\n        },\n\n        min: function(value) {\n            return this._option(\"min\", value);\n        },\n\n        max: function(value) {\n            return this._option(\"max\", value);\n        },\n\n        step: function(value) {\n            return this._option(\"step\", value);\n        },\n\n        value: function(value) {\n            var that = this, adjusted;\n\n            if (value === undefined$1) {\n                return that._value;\n            }\n\n            value = that._parse(value);\n            adjusted = that._adjust(value);\n\n            if (value !== adjusted) {\n                return;\n            }\n\n            that._update(value);\n            that._old = that._value;\n\n            if (that.floatingLabel) {\n                that.floatingLabel.refresh();\n            }\n        },\n\n        focus: function() {\n            this._focusin();\n        },\n\n        _adjust: function(value) {\n            var that = this,\n            options = that.options,\n            min = options.min,\n            max = options.max;\n\n            if (value === NULL) {\n                return value;\n            }\n\n            if (min !== NULL && value < min) {\n                value = min;\n            } else if (max !== NULL && value > max) {\n                value = max;\n            }\n\n            return value;\n        },\n\n        _arrows: function() {\n            var that = this,\n            arrows,\n            _release = function() {\n                clearTimeout( that._spinning );\n                arrows.removeClass(SELECTED);\n            },\n            options = that.options,\n            spinners = options.spinners,\n            element = that.element;\n\n            arrows = element.siblings(\".k-icon-button\");\n\n            if (!arrows[0]) {\n                arrows = $(buttonHtml(\"increase\", options.upArrowText, options) + buttonHtml(\"decrease\", options.downArrowText, options))\n                        .appendTo(that.wrapper);\n\n                that._arrowsWrap = arrows.wrapAll('<span class=\"k-input-spinner k-spin-button\"/>').parent();\n            }\n\n            if (!spinners) {\n                arrows.parent().toggle(spinners);\n                that.wrapper.addClass(\"k-expand-padding\");\n            }\n\n            that._upArrow = arrows.eq(0);\n            that._upArrowEventHandler = new kendo.UserEvents(that._upArrow, { release: _release });\n            that._downArrow = arrows.eq(1);\n            that._downArrowEventHandler = new kendo.UserEvents(that._downArrow, { release: _release });\n        },\n\n        _validation: function() {\n            var that = this;\n            var element = that.element;\n\n            that._validationIcon = $(\"<span class='k-input-validation-icon \" + CLASS_ICON + \" k-i-warning k-hidden'></span>\").insertAfter(element);\n        },\n\n        _blur: function() {\n            var that = this;\n\n            that._toggleText(true);\n\n            that._change(that.element.val());\n        },\n\n        _click: function(e) {\n            var that = this;\n\n            clearTimeout(that._focusing);\n            that._focusing = setTimeout(function() {\n                var input = e.target,\n                    idx = caret(input)[0],\n                    value = input.value.substring(0, idx),\n                    format = that._format(that.options.format),\n                    group = format[\",\"],\n                    result, groupRegExp, extractRegExp,\n                    caretPosition = 0;\n\n                if (group) {\n                    groupRegExp = new RegExp(\"\\\\\" + group, \"g\");\n                    extractRegExp = new RegExp(\"(-)?(\" + format[SYMBOL] + \")?([\\\\d\\\\\" + group + \"]+)(\\\\\" + format[POINT] + \")?(\\\\d+)?\");\n                }\n\n                if (extractRegExp) {\n                    result = extractRegExp.exec(value);\n                }\n\n                if (result) {\n                    caretPosition = result[0].replace(groupRegExp, \"\").length;\n\n                    if (value.indexOf(\"(\") != -1 && that._value < 0) {\n                        caretPosition++;\n                    }\n                }\n\n                that._focusin();\n\n                caret(that.element[0], caretPosition);\n                that.selectValue();\n            });\n        },\n\n        selectValue: function() {\n            if (this.options.selectOnFocus) {\n                this.element[0].select();\n            }\n        },\n\n        _getFactorValue: function(value) {\n            var that = this,\n                factor = that.options.factor;\n\n            if (factor && factor !== 1) {\n                value = kendo.parseFloat(value);\n                if (value !== null) {\n                    value = value / factor;\n                }\n            }\n\n            return value;\n        },\n\n        _change: function(value) {\n            var that = this;\n\n            value = that._getFactorValue(value);\n            that._update(value);\n            value = that._value;\n\n            if (that._old != value) {\n                that._old = value;\n\n                if (!that._typing) {\n                    // trigger the DOM change event so any subscriber gets notified\n                    that.element.trigger(CHANGE);\n                }\n\n                that.trigger(CHANGE);\n            }\n\n            that._typing = false;\n        },\n\n        _culture: function(culture) {\n            return culture || getCulture(this.options.culture);\n        },\n\n        _focusin: function() {\n            var that = this;\n            that.wrapper.addClass(FOCUSED);\n            that._toggleText(false);\n            that.element[0].focus();\n        },\n\n        _focusout: function() {\n            var that = this;\n\n            clearTimeout(that._focusing);\n            that.wrapper.removeClass(FOCUSED).removeClass(HOVER);\n            that._blur();\n            that._removeInvalidState();\n        },\n\n        _format: function(format, culture) {\n            var numberFormat = this._culture(culture).numberFormat;\n\n            format = format.toLowerCase();\n\n            if (format.indexOf(\"c\") > -1) {\n                numberFormat = numberFormat.currency;\n            } else if (format.indexOf(\"p\") > -1) {\n                numberFormat = numberFormat.percent;\n            }\n\n            return numberFormat;\n        },\n\n        _input: function() {\n            var that = this,\n                options = that.options,\n                element = that.element.addClass(INPUT).show()[0],\n                accessKey = element.accessKey,\n                wrapper = that.wrapper,\n                inputs = wrapper.find(POINT + INPUT),\n                text;\n\n            text = inputs.first();\n\n            if (text.length < 2) {\n                text = $('<input type=\"text\"/>')\n                        .attr(kendo.attr(\"validate\"), false)\n                        .insertBefore(element);\n            }\n\n            try {\n                element.setAttribute(\"type\", \"text\");\n            } catch (e) {\n                element.type = \"text\";\n            }\n\n            text[0].title = element.title;\n            text[0].tabIndex = element.tabIndex;\n            text[0].style.cssText = element.style.cssText;\n            text.prop(\"placeholder\", options.placeholder);\n\n            if (accessKey) {\n                text.attr(\"accesskey\", accessKey);\n                element.accessKey = \"\";\n            }\n\n\n            that._text = text.addClass(element.className)\n                             .attr({\n                                 \"role\": \"spinbutton\",\n                                 \"aria-valuemin\": options.min !== NULL ? options.min * options.factor : options.min,\n                                 \"aria-valuemax\": options.max !== NULL ? options.max * options.factor : options.max,\n                                 \"autocomplete\": \"off\"\n                             });\n        },\n\n        _keydown: function(e) {\n            var that = this,\n                key = e.keyCode;\n\n            if (key === keys.NUMPAD_DOT) {\n                that._numPadDot = true;\n            }\n\n            if (key == keys.DOWN) {\n                that._step(-1);\n                return;\n            } else if (key == keys.UP) {\n                that._step(1);\n                return;\n            } else if (key == keys.ENTER) {\n                that._change(that.element.val());\n                return;\n            }\n\n            if (key != keys.TAB) {\n                that._typing = true;\n            }\n            that._cachedCaret = caret(that.element);\n        },\n\n        _keyup: function() {\n            this._removeInvalidState();\n        },\n\n        _inputHandler: function() {\n            var element = this.element;\n            var value = element.val();\n            var min = this.options.min;\n            var numberFormat = this._format(this.options.format);\n            var decimalSeparator = numberFormat[POINT];\n            var minInvalid = (min !== null && min >= 0 && value.charAt(0) === \"-\");\n\n            if (this._numPadDot && decimalSeparator !== POINT) {\n                value = value.replace(POINT, decimalSeparator);\n                this.element.val(value);\n                this._numPadDot = false;\n            }\n\n            if (this._isPasted && this._parse(value)) {\n                value = this._parse(value)\n                    .toString()\n                    .replace(POINT, numberFormat[POINT]);\n            }\n\n            if (this._numericRegex(numberFormat).test(value) && !minInvalid) {\n                this._oldText = value;\n            } else {\n                this._blinkInvalidState();\n                this.element.val(this._oldText);\n                if (this._cachedCaret) {\n                    caret(element, this._cachedCaret[0]);\n                    this._cachedCaret = null;\n                }\n            }\n\n            this._isPasted = false;\n        },\n\n        _blinkInvalidState: function() {\n            var that = this;\n\n            that._addInvalidState();\n            clearTimeout(that._invalidStateTimeout);\n            that._invalidStateTimeout = setTimeout(that._removeInvalidState.bind(that), 100);\n        },\n\n        _addInvalidState: function() {\n            var that = this;\n\n            that.wrapper.addClass(STATEINVALID);\n            that._validationIcon.removeClass('k-hidden');\n        },\n\n        _removeInvalidState: function() {\n            var that = this;\n\n            that.wrapper.removeClass(STATEINVALID);\n            that._validationIcon.addClass('k-hidden');\n            that._invalidStateTimeout = null;\n        },\n\n        _numericRegex: function(numberFormat) {\n            var that = this;\n            var separator = numberFormat[POINT];\n            var precision = that.options.decimals;\n            var fractionRule = \"*\";\n\n            if (separator === POINT) {\n                separator = \"\\\\\" + separator;\n            }\n\n            if (precision === NULL) {\n                precision = numberFormat.decimals;\n            }\n\n            if (precision === 0 && that.options.restrictDecimals) {\n                return INTEGER_REGEXP;\n            }\n\n            if (that.options.restrictDecimals) {\n                fractionRule = \"{0,\" + precision + \"}\";\n            }\n\n            if (that._separator !== separator) {\n                that._separator = separator;\n                that._floatRegExp = new RegExp(\"^(-)?(((\\\\d+(\" + separator + \"\\\\d\" + fractionRule + \")?)|(\" + separator + \"\\\\d\" + fractionRule + \")))?$\");\n            }\n\n            return that._floatRegExp;\n        },\n\n        _paste: function(e) {\n            var that = this;\n            var element = e.target;\n            var value = element.value;\n            var numberFormat = that._format(that.options.format);\n\n            that._isPasted = true;\n\n           setTimeout(function() {\n                var result = that._parse(element.value);\n\n                if (result === NULL) {\n                    that._update(value);\n                } else {\n                    element.value = result.toString().replace(POINT, numberFormat[POINT]);\n                    if (that._adjust(result) !== result || !that._numericRegex(numberFormat).test(element.value)) {\n                        value = that._getFactorValue(element.value);\n                        that._update(value);\n                    }\n                }\n            });\n        },\n\n        _option: function(option, value) {\n            var that = this,\n                element = that.element,\n                options = that.options;\n\n            if (value === undefined$1) {\n                return options[option];\n            }\n\n            value = that._parse(value);\n\n            if (!value && option === \"step\") {\n                return;\n            }\n\n            options[option] = value;\n            element\n                .add(that._text)\n                .attr(\"aria-value\" + option, value);\n\n            element.attr(option, value);\n        },\n\n        _spin: function(step, timeout) {\n            var that = this;\n\n            timeout = timeout || 500;\n\n            clearTimeout( that._spinning );\n            that._spinning = setTimeout(function() {\n                that._spin(step, 50);\n            }, timeout );\n\n            that._step(step);\n        },\n\n        _step: function(step) {\n            var that = this,\n                element = that.element,\n                originalValue = that._value,\n                value = that._parse(element.val()) || 0,\n                precision = that.options.decimals || 2;\n\n            if (activeElement() != element[0]) {\n                that._focusin();\n            }\n\n            if (that.options.factor && value) {\n                value = value / that.options.factor;\n            }\n\n            value = +(value + that.options.step * step).toFixed(precision);\n            value = that._adjust(value);\n            that._update(value);\n            that._typing = false;\n\n            if (originalValue !== value) {\n                that.trigger(SPIN);\n            }\n        },\n\n        _toggleHover: function(e) {\n            $(e.currentTarget).toggleClass(HOVER, e.type === \"mouseenter\");\n        },\n\n        _toggleText: function(toggle) {\n            var that = this;\n\n            that._text.toggle(toggle);\n            if (toggle) {\n                that._text.removeAttr(\"aria-hidden\");\n            } else {\n                that._text.attr(\"aria-hidden\", \"true\");\n            }\n            that.element.toggle(!toggle);\n        },\n\n        _parse: function(value, culture) {\n            return parse(value, this._culture(culture), this.options.format);\n        },\n\n        _round: function(value, precision) {\n            var rounder = this.options.round ? kendo._round : truncate;\n\n            return rounder(value, precision);\n        },\n\n        _update: function(value) {\n            var that = this,\n                options = that.options,\n                factor = options.factor,\n                format = options.format,\n                decimals = options.decimals,\n                culture = that._culture(),\n                numberFormat = that._format(format, culture),\n                originalValue,\n                isNotNull;\n\n            if (decimals === NULL) {\n                decimals = numberFormat.decimals;\n            }\n\n            value = that._parse(value, culture);\n\n            isNotNull = value !== NULL;\n\n            if (isNotNull) {\n                value = parseFloat(that._round(value, decimals), 10);\n            }\n\n            that._value = value = that._adjust(value);\n            that._placeholder(kendo.toString(value, format, culture));\n\n            if (isNotNull) {\n                if (factor) {\n                    value = parseFloat(that._round(value * factor, decimals), 10);\n                }\n                value = value.toString();\n                if (value.indexOf(\"e\") !== -1) {\n                    value = that._round(+value, decimals);\n                }\n                originalValue = value;\n                value = value.replace(POINT, numberFormat[POINT]);\n            } else {\n                value = null;\n                originalValue = null;\n            }\n\n            that.element.val(value);\n            that._oldText = value;\n            that.element.add(that._text).attr(\"aria-valuenow\", originalValue);\n        },\n\n        _placeholder: function(value) {\n            var input = this._text;\n\n            input.val(value);\n            if (!placeholderSupported && !value) {\n                input.val(this.options.placeholder);\n            }\n\n            input.attr(\"title\", this.element.attr(\"title\") || input.val());\n        },\n\n        _label: function() {\n            var that = this;\n            var element = that.element;\n            var options = that.options;\n            var id = element.attr(\"id\");\n            var floating;\n            var labelText;\n\n            if (options.label !== null) {\n                floating = isPlainObject(options.label) ? options.label.floating : false;\n                labelText = isPlainObject(options.label) ? options.label.content : options.label;\n\n                if (floating) {\n                    that._floatingLabelContainer = that.wrapper.wrap(\"<span></span>\").parent();\n                    that.floatingLabel = new kendo.ui.FloatingLabel(that._floatingLabelContainer, { widget: that });\n                }\n\n                if (kendo.isFunction(labelText)) {\n                    labelText = labelText.call(that);\n                }\n\n                if (!labelText) {\n                    labelText = \"\";\n                }\n\n                if (!id) {\n                    id = options.name + \"_\" + kendo.guid();\n                    element.attr(\"id\", id);\n                }\n\n                that._inputLabel = $(\"<label class='\" + LABELCLASSES + \"' for='\" + id + \"'>\" + labelText + \"</label>'\").insertBefore(that.wrapper);\n\n                if ((that.element.attr(\"disabled\") === undefined$1) && (that.element.attr(\"readonly\") === undefined$1)) {\n                    that._inputLabel.on(\"click\" + ns, that.focus.bind(that));\n                }\n            }\n        },\n\n        _wrapper: function() {\n            var that = this,\n                element = that.element,\n                DOMElement = element[0],\n                wrapper;\n\n            wrapper = element.parents(\".k-numerictextbox\");\n\n            if (!wrapper.is(\"span.k-numerictextbox\")) {\n                wrapper = element.hide().wrap(\"<span/>\").parent();\n            }\n\n            wrapper[0].style.cssText = DOMElement.style.cssText;\n            DOMElement.style.width = \"\";\n            that.wrapper = wrapper.addClass(\"k-numerictextbox k-input\")\n                                  .addClass(DOMElement.className)\n                                  .removeClass('input-validation-error')\n                                  .css(\"display\", \"\");\n        },\n\n        _reset: function() {\n            var that = this,\n                element = that.element,\n                formId = element.attr(\"form\"),\n                form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n            if (form[0]) {\n                that._resetHandler = function() {\n                    setTimeout(function() {\n                        that.value(element[0].value);\n                        that.max(that._initialOptions.max);\n                        that.min(that._initialOptions.min);\n                    });\n                };\n\n                that._form = form.on(\"reset\", that._resetHandler);\n            }\n        }\n    });\n\n    kendo.cssProperties.registerPrefix(\"NumericTextBox\", \"k-input-\");\n\n    kendo.cssProperties.registerValues(\"NumericTextBox\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    function buttonHtml(direction, text, options) {\n        var className = direction === \"increase\" ? \"arrow-n\" : \"arrow-s\";\n        var dir = direction === \"increase\" ? \"increase\" : \"decrease\";\n\n        return html.renderButton('<button role=\"button\" tabindex=\"-1\" unselectable=\"on\" class=\"k-spinner-' + dir + '\" aria-label=\"' + text + '\" title=\"' + text + '\"></button>', extend({}, options, {\n            icon: className,\n            shape: null,\n            rounded: null\n        }));\n    }\n\n    function truncate(value, precision) {\n        var parts = parseFloat(value, 10).toString().split(POINT);\n\n        if (parts[1]) {\n            parts[1] = parts[1].substring(0, precision);\n        }\n\n        return parts.join(POINT);\n\n    }\n\n    ui.plugin(NumericTextBox);\n})(window.kendo.jQuery);\n"]}