{"version":3,"file":"kendo.window.js","names":["__meta__","id","name","category","description","depends","features","$","undefined$1","templates","kendo","window","Widget","ui","TabKeyTrap","Popup","Draggable","isPlainObject","activeElement","_activeElement","outerWidth","_outerWidth","outerHeight","_outerHeight","extend","each","template","BODY","NS","MODAL_NS","KWINDOW","KWINDOWTITLE","KWINDOWTITLEBAR","KWINDOWCONTENT","KWINDOWRESIZEHANDLES","KOVERLAY","KCONTENTFRAME","LOADING","KHOVERSTATE","KFOCUSEDSTATE","MAXIMIZEDSTATE","INLINE_FLEX","VISIBLE","HIDDEN","CURSOR","OPEN","ACTIVATE","DEACTIVATE","CLOSE","REFRESH","RESIZESTART","RESIZEEND","DRAGSTART","DRAGEND","RESTORE","ERROR","OVERFLOW","DATADOCOVERFLOWRULE","ZINDEX","MINIMIZE_MAXIMIZE","KPIN","KUNPIN","PIN_UNPIN","TITLEBAR_BUTTONS","REFRESHICON","WINDOWEVENTSHANDLED","zero","isLocalUrl","SIZE","small","medium","large","defined","x","toInt","element","property","parseInt","css","constrain","value","low","high","isNaN","toString","indexOf","Math","max","min","Infinity","executableScript","this","type","toLowerCase","getPosition","elem","result","top","offsetTop","left","offsetLeft","parent","offsetParent","parentOverflowX","parentOverflowY","scrollTop","scrollLeft","Window","init","options","wrapper","visibility","display","position","content","windowContent","globalWindow","that","offset","suppressActions","actions","length","fn","call","appendTo","containment","draggable","first","url","find","filter","remove","is","document","body","contains","visible","closest","addClass","attr","_createWindow","title","_dimensions","minTop","minLeft","maxTop","maxLeft","_position","refresh","toFront","modal","children","_overlay","opacity","on","_buttonEnter","bind","_buttonLeave","_windowActionHandler","_keydown","_focus","_blur","_keydownContent","data","widgetInstance","not","i","_resizable","_draggable","pinned","pin","role","add","support","mousedown","touchScroller","_resizeHandler","_onDocumentResize","_marker","guid","substring","trigger","notify","_tabKeyTrap","trap","shouldTrap","e","currentTarget","removeClass","width","height","maxHeight","sizeClass","size","dimensions","contentBoxSizing","lrBorderWidth","tbBorderWidth","paddingTop","_isPinned","_updateBoundaries","maxWidth","minWidth","minHeight","hide","containmentTop","containmentLeft","parseFloat","Number","replace","innerWidth","innerHeight","clientWidth","scrollbar","clientHeight","_animationOptions","animation","open","effects","close","_resize","resize","resizable","resizing","off","destroy","target","toggleMaximization","split","index","handler","append","resizeHandle","WindowResizing","dragging","WindowDragging","dragHandle","_actions","container","windowSpecificCommands","map","action","html","render","setOptions","doc","cachedOptions","JSON","parse","stringify","_containerScrollTop","_containerScrollLeft","scrollable","restore","_enableDocumentScrolling","events","zoom","direction","fade","duration","properties","scale","autoFocus","isMaximized","isMinimized","_closable","inArray","keys","keyCode","ESC","stopPropagation","_close","handled","newWidth","newHeight","w","h","distance","_closing","altKey","unpin","UP","maximize","DOWN","minimize","getOffset","ctrlKey","LEFT","RIGHT","preventDefault","overlay","zIndex","insertBefore","preventScroll","_stopDocumentScrolling","_actionForIcon","icon","exec","className","_modals","windowInstance","windowElements","modals","_object","push","sort","a","b","style","widget","center","newTop","newLeft","documentWindow","_scrollIsAppended","encoded","titleBar","titleElement","arguments","text","htmlEncode","prepend","titlebar","scrollContainer","angular","elements","empty","dataItem","otherModalsVisible","showOptions","contentElement","kendoStop","Fade","overlayFx","fx","fadeIn","endValue","play","show","kendoAnimate","complete","_activate","_removeOverlay","suppressAnimation","hideOverlay","hideOptions","fadeOut","startValue","last","systemTriggered","defaultPrevented","userTriggered","reverse","_deactivate","iframe","lastModal","_actionable","_shouldFocus","active","avoidFocus","currentWindow","containmentContext","openAnimation","originalZIndex","windowObject","zIndexNew","setTimeout","focus","windowTop","restoreOptions","end","removeAttr","_sizingAction","actionId","callback","eq","before","toggle","_storeOverflowRule","$body","$html","_restoreOverflowRule","$element","_isOverflowStored","overflowRule","get","overflow","removeData","win","wnd","zoomLevel","showIframe","initOptions","src","contentFrame","_triggerRefresh","_ajaxRequest","toggleClass","_ajaxComplete","clearTimeout","_loadingIconTimeout","_ajaxError","xhr","status","_ajaxSuccess","contentTemplate","prop","_showLoading","ajax","dataType","cache","error","success","_destroy","unbind","iframeSrcAttributes","contentHtml","isRtl","getAttribute","editor","owner","_preventDragging","group","dragstart","drag","dragend","userEvents","addOverlay","removeOverlay","dragcancel","prototype","elementPadding","initialPosition","resizeDirection","initialSize","containerOffset","marginTop","marginLeft","test","wrapperPosition","relativeElMarginLeft","relativeElMarginTop","_relativeElMarginLeft","_relativeElMarginTop","windowBottom","windowRight","rtl","leftRtlOffset","scrollOffset","location","y","newWindowTop","reset","initialWindowPosition","initialPointerPosition","startPosition","client","axis","transforms","_finishDrag","plugin","jQuery"],"sources":["kendo.window.js"],"mappings":"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","sourcesContent":["import './kendo.draganddrop.js';\nimport './kendo.popup.js';\n\nvar __meta__ = {\n        id: \"window\",\n        name: \"Window\",\n        category: \"web\",\n        description: \"The Window widget displays content in a modal or non-modal HTML window.\",\n        depends: [ \"draganddrop\", \"popup\" ],\n        features: [ {\n            id: \"window-fx\",\n            name: \"Animation\",\n            description: \"Support for animation\",\n            depends: [ \"fx\" ]\n        } ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            TabKeyTrap = kendo.ui.Popup.TabKeyTrap,\n            Draggable = kendo.ui.Draggable,\n            isPlainObject = $.isPlainObject,\n            activeElement = kendo._activeElement,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            extend = $.extend,\n            each = $.each,\n            template = kendo.template,\n            BODY = \"body\",\n            templates,\n            NS = \".kendoWindow\",\n            MODAL_NS = \".kendoWindowModal\",\n            // classNames\n            KWINDOW = \".k-window\",\n            KWINDOWTITLE = \".k-window-title\",\n            KWINDOWTITLEBAR = KWINDOWTITLE + \"bar\",\n            KWINDOWCONTENT = \".k-window-content\",\n            KDIALOGCONTENT = \".k-dialog-content\",\n            KWINDOWRESIZEHANDLES = \".k-resize-handle\",\n            KOVERLAY = \".k-overlay\",\n            KCONTENTFRAME = \"k-content-frame\",\n            LOADING = \"k-i-loading\",\n            KHOVERSTATE = \"k-hover\",\n            KFOCUSEDSTATE = \"k-focus\",\n            MAXIMIZEDSTATE = \"k-window-maximized\",\n            INLINE_FLEX = \"k-display-inline-flex\",\n            // constants\n            VISIBLE = \":visible\",\n            HIDDEN = \"hidden\",\n            CURSOR = \"cursor\",\n            // events\n            OPEN = \"open\",\n            ACTIVATE = \"activate\",\n            DEACTIVATE = \"deactivate\",\n            CLOSE = \"close\",\n            REFRESH = \"refresh\",\n            MINIMIZE = \"minimize\",\n            MAXIMIZE = \"maximize\",\n            RESIZESTART = \"resizeStart\",\n            RESIZE = \"resize\",\n            RESIZEEND = \"resizeEnd\",\n            DRAGSTART = \"dragstart\",\n            DRAGEND = \"dragend\",\n            RESTORE = \"restore\",\n            KENDOKEYDOWN = \"kendoKeydown\",\n            ERROR = \"error\",\n            OVERFLOW = \"overflow\",\n            DATADOCOVERFLOWRULE = \"original-overflow-rule\",\n            ZINDEX = \"zIndex\",\n            MINIMIZE_MAXIMIZE = \".k-window-actions .k-i-window-minimize,.k-window-actions .k-i-window-maximize\",\n            KPIN = \".k-i-pin\",\n            KUNPIN = \".k-i-unpin\",\n            PIN_UNPIN = KPIN + \",\" + KUNPIN,\n            TITLEBAR_BUTTONS = \".k-window-titlebar .k-window-action\",\n            REFRESHICON = \".k-window-titlebar .k-i-refresh\",\n            WINDOWEVENTSHANDLED = \"WindowEventsHandled\",\n            zero = /^0[a-z]*$/i,\n            isLocalUrl = kendo.isLocalUrl,\n            SIZE = {\n                small: \"k-window-sm\",\n                medium: \"k-window-md\",\n                large: \"k-window-lg\"\n            };\n\n        function defined(x) {\n            return (typeof x != \"undefined\");\n        }\n\n        function toInt(element, property) {\n            return parseInt(element.css(property), 10) || 0;\n        }\n\n        function constrain(value, low, high) {\n            var normalizedValue;\n\n            if (value && isNaN(value) && value.toString().indexOf(\"px\") < 0) {\n                normalizedValue = value;\n            } else {\n                normalizedValue = Math.max(\n                    Math.min(parseInt(value, 10), high === Infinity ? high : parseInt(high, 10)),\n                    low === -Infinity ? low : parseInt(low, 10)\n                );\n            }\n\n            return normalizedValue;\n        }\n\n        function executableScript() {\n            return !this.type || this.type.toLowerCase().indexOf(\"script\") >= 0;\n        }\n\n\n        function getPosition(elem) {\n            var result = { top: elem.offsetTop, left: elem.offsetLeft },\n                parent = elem.offsetParent;\n\n            while (parent) {\n                result.top += parent.offsetTop;\n                result.left += parent.offsetLeft;\n\n                var parentOverflowX = $(parent).css(\"overflowX\");\n                var parentOverflowY = $(parent).css(\"overflowY\");\n\n                if (parentOverflowY === \"auto\" || parentOverflowY === \"scroll\") {\n                    result.top -= parent.scrollTop;\n                }\n\n                if (parentOverflowX === \"auto\" || parentOverflowX === \"scroll\") {\n                    result.left -= parent.scrollLeft;\n                }\n\n                parent = parent.offsetParent;\n            }\n\n            return result;\n        }\n\n        var Window = Widget.extend({\n            init: function(element, options) {\n                var that = this,\n                    wrapper,\n                    offset = {},\n                    visibility, display, position,\n                    isVisible = false,\n                    content,\n                    windowContent,\n                    windowFrame,\n                    globalWindow,\n                    suppressActions = options && options.actions && !options.actions.length,\n                    id;\n\n                Widget.fn.init.call(that, element, options);\n                options = that.options;\n                position = options.position;\n                element = that.element;\n                content = options.content;\n                globalWindow = $(window);\n\n                if (suppressActions) {\n                    options.actions = [];\n                }\n\n                that.appendTo = $(options.appendTo);\n\n                that.containment = options.draggable.containment ? $(options.draggable.containment).first() : null;\n\n                if (content && !isPlainObject(content)) {\n                    content = options.content = { url: content };\n                }\n\n                // remove script blocks to prevent double-execution\n                element.find(\"script\").filter(executableScript).remove();\n\n                if (!element.parent().is(that.appendTo) && !that.containment && (position.top === undefined$1 || position.left === undefined$1)) {\n                    if (element.is(VISIBLE)) {\n                        offset = element.offset();\n                        isVisible = true;\n                    } else {\n                        visibility = element.css(\"visibility\");\n                        display = element.css(\"display\");\n\n                        element.css({ visibility: HIDDEN, display: \"\" });\n\n                        if (document.body.contains(element[0])) {\n                            offset = element.offset();\n                        } else {\n                            offset = { top: 0, left: 0 };\n                        }\n\n                        element.css({ visibility: visibility, display: display });\n                    }\n\n                    if (position.top === undefined$1) {\n                        position.top = offset.top;\n                    }\n                    if (position.left === undefined$1) {\n                        position.left = offset.left;\n                    }\n                }\n\n                if (!defined(options.visible) || options.visible === null) {\n                    options.visible = element.is(VISIBLE);\n                }\n\n                wrapper = that.wrapper = element.closest(KWINDOW);\n\n                if (!element.is(\".k-window-content\") || !wrapper[0]) {\n                    element.addClass(\"k-window-content\");\n                    element.attr(\"tabindex\", 0);\n                    that._createWindow(element, options);\n                    wrapper = that.wrapper = element.closest(KWINDOW);\n\n                    that.title(that.options.title);\n                    that._dimensions();\n                }\n\n                that.minTop = that.minLeft = -Infinity;\n                that.maxTop = that.maxLeft = Infinity;\n                that._position();\n\n                if (content) {\n                    that.refresh(content);\n                }\n\n                if (options.visible) {\n                    that.toFront(null, !options.modal);\n                }\n\n                windowContent = wrapper.children(KWINDOWCONTENT);\n\n                if (options.visible && options.modal) {\n                    that._overlay(wrapper.is(VISIBLE)).css({ opacity: 0.5 });\n                }\n\n                wrapper\n                    .on(\"mouseenter\" + NS, TITLEBAR_BUTTONS, that._buttonEnter.bind(that))\n                    .on(\"mouseleave\" + NS, TITLEBAR_BUTTONS, that._buttonLeave.bind(that))\n                    .on(\"click\" + NS, \"> \" + TITLEBAR_BUTTONS, that._windowActionHandler.bind(that))\n                    .on(\"keydown\" + NS, that, that._keydown.bind(that))\n                    .on(\"focus\" + NS, that._focus.bind(that))\n                    .on(\"blur\" + NS, that._blur.bind(that));\n\n                windowContent\n                    .on(\"keydown\" + NS, that, that._keydownContent.bind(that));\n\n                windowFrame = windowContent.find(\".\" + KCONTENTFRAME)[0];\n\n                if (windowFrame && !globalWindow.data(WINDOWEVENTSHANDLED)) {\n\n                    globalWindow.on(\"blur\" + NS, function() {\n                        var element = $(document.activeElement).parent(KWINDOWCONTENT);\n                        if (element.length) {\n                            var windowInstance = kendo.widgetInstance(element);\n                            windowInstance._focus();\n                        }\n                    });\n\n                    globalWindow.on(\"focus\" + NS, function() {\n                        $(KWINDOWCONTENT).not(KDIALOGCONTENT).each(function(i, element) {\n                            kendo.widgetInstance($(element))._blur();\n                        });\n                    });\n\n                    globalWindow.data(WINDOWEVENTSHANDLED, true);\n                }\n\n                this._resizable();\n\n                this._draggable();\n\n                if (options.pinned && this.wrapper.is(\":visible\")) {\n                    that.pin();\n                }\n\n                id = element.attr(\"id\");\n                if (id) {\n                    id = id + \"_wnd_title\";\n                    wrapper.attr({\n                            \"role\": \"dialog\",\n                            \"aria-labelledby\": id\n                        }).children(KWINDOWTITLEBAR)\n                        .children(KWINDOWTITLE)\n                        .attr(\"id\", id);\n                }\n\n                wrapper.add(wrapper.children(\".k-resize-handle,\" + KWINDOWTITLEBAR))\n                    .on(kendo.support.mousedown + NS, that.toFront.bind(that));\n\n                that.touchScroller = kendo.touchScroller(element);\n\n                that._resizeHandler = that._onDocumentResize.bind(that);\n\n                that._marker = kendo.guid().substring(0, 8);\n\n                $(window).on(\"resize\" + NS + that._marker, that._resizeHandler);\n\n                if (options.visible) {\n                    that.trigger(OPEN);\n                    that.trigger(ACTIVATE);\n                }\n\n                kendo.notify(that);\n\n                if (this.options.modal) {\n                    this._tabKeyTrap = new TabKeyTrap(wrapper);\n                    this._tabKeyTrap.trap();\n                    this._tabKeyTrap.shouldTrap = function() {\n                        return wrapper.data(\"isFront\");\n                    };\n                }\n            },\n\n            _buttonEnter: function(e) {\n                $(e.currentTarget).addClass(KHOVERSTATE);\n            },\n\n            _buttonLeave: function(e) {\n                $(e.currentTarget).removeClass(KHOVERSTATE);\n            },\n\n            _focus: function() {\n                this.wrapper.addClass(KFOCUSEDSTATE);\n            },\n\n            _blur: function() {\n                this.wrapper.removeClass(KFOCUSEDSTATE);\n            },\n\n            _dimensions: function() {\n                var wrapper = this.wrapper;\n                var options = this.options;\n                var width = options.width;\n                var height = options.height;\n                var maxHeight = options.maxHeight;\n                var sizeClass = options.size;\n                var dimensions = [\"minWidth\",\"minHeight\",\"maxWidth\",\"maxHeight\"];\n                var contentBoxSizing = wrapper.css(\"box-sizing\") == \"content-box\";\n\n                var lrBorderWidth = contentBoxSizing ? toInt(wrapper, \"border-left-width\") + toInt(wrapper, \"border-right-width\") : 0;\n                var tbBorderWidth = contentBoxSizing ? toInt(wrapper, \"border-top-width\") + toInt(wrapper, \"border-bottom-width\") : 0;\n                var paddingTop = contentBoxSizing ? toInt(wrapper, \"padding-top\") : 0;\n\n                if (this.containment && !this._isPinned) {\n                    this._updateBoundaries();\n                    options.maxHeight = Math.min(this.containment.height - (tbBorderWidth + paddingTop), maxHeight);\n                    options.maxWidth = Math.min(this.containment.width - lrBorderWidth, options.maxWidth);\n                }\n\n                for (var i = 0; i < dimensions.length; i++) {\n                    var value = options[dimensions[i]] || \"\";\n                    if (value != Infinity) {\n                        wrapper.css(dimensions[i], value);\n                    }\n                }\n\n                if (maxHeight != Infinity) {\n                    this.element.css(\"maxHeight\", maxHeight);\n                }\n\n                if (width) {\n                    wrapper.outerWidth(constrain(width, options.minWidth, options.maxWidth));\n                }\n                else {\n                    wrapper.outerWidth(\"\");\n                }\n\n                if (height) {\n                    wrapper.outerHeight(constrain(height, options.minHeight, options.maxHeight));\n                }\n                else {\n                    wrapper.outerHeight(\"\");\n                }\n\n                if (!options.visible) {\n                    wrapper.removeClass(INLINE_FLEX).hide();\n                }\n\n                if (sizeClass && SIZE[sizeClass]) {\n                    wrapper.addClass(SIZE[sizeClass]);\n                }\n            },\n\n            _position: function() {\n                var wrapper = this.wrapper,\n                    position = this.options.position,\n                    containmentTop, containmentLeft;\n\n                this._updateBoundaries();\n\n                if (this.containment) {\n                    position.top = position.top || 0;\n                    position.left = position.left || 0;\n\n                    containmentTop = position.top.toString().indexOf(\"%\") > 0 ?\n                        parseInt(this.containment.height * (parseFloat(position.top) / 100), 10) :\n                        position.top;\n\n                    containmentLeft = position.left.toString().indexOf(\"%\") > 0 ?\n                        parseInt(this.containment.width * (parseFloat(position.left) / 100), 10) :\n                        position.left;\n\n                    position.top = constrain(containmentTop, this.minTop, this.maxTop);\n                    position.left = constrain(containmentLeft, this.minLeft, this.maxLeft);\n                }\n\n                if (position.top && position.top.toString().indexOf(\"px\") > 0) {\n                    position.top = Number(position.top.replace(\"px\", \"\"));\n                }\n\n                if (position.left && position.left.toString().indexOf(\"px\") > 0) {\n                    position.left = Number(position.left.replace(\"px\", \"\"));\n                }\n\n                if (position.top === 0) {\n                    position.top = position.top.toString();\n                }\n\n                if (position.left === 0) {\n                    position.left = position.left.toString();\n                }\n\n                wrapper.css({\n                    top: position.top || \"\",\n                    left: position.left || \"\"\n                });\n            },\n\n            _updateBoundaries: function() {\n                var containment = this.containment;\n\n                if (!containment) {\n                    return null;\n                }\n\n                containment.width = containment.innerWidth();\n                containment.height = containment.innerHeight();\n\n                if (parseInt(containment.width, 10) > containment[0].clientWidth) {\n                    containment.width -= kendo.support.scrollbar();\n                }\n\n                if (parseInt(containment.height, 10) > containment[0].clientHeight) {\n                    containment.height -= kendo.support.scrollbar();\n                }\n\n                containment.position = getPosition(containment[0]);\n\n                if (this._isPinned) {\n                    this.minTop = this.minLeft = -Infinity;\n                    this.maxTop = this.maxLeft = Infinity;\n                } else {\n                    this.minTop = containment.scrollTop();\n                    this.minLeft = containment.scrollLeft();\n                    this.maxLeft = this.minLeft + containment.width - outerWidth(this.wrapper, true);\n                    this.maxTop = this.minTop + containment.height - outerHeight(this.wrapper, true);\n                }\n            },\n\n            _animationOptions: function(id) {\n                var animation = this.options.animation;\n                var basicAnimation = {\n                    open: { effects: {} },\n                    close: { hide: true, effects: {} }\n                };\n\n                return animation && animation[id] || basicAnimation[id];\n            },\n\n            _resize: function() {\n                kendo.resize(this.element.children());\n            },\n\n            _resizable: function() {\n                var resizable = this.options.resizable;\n                var wrapper = this.wrapper;\n\n                if (this.resizing) {\n                    wrapper\n                        .off(\"dblclick\" + NS)\n                        .children(KWINDOWRESIZEHANDLES).remove();\n\n                    this.resizing.destroy();\n                    this.resizing = null;\n                }\n\n                if (resizable) {\n                    wrapper.on(\"dblclick\" + NS, KWINDOWTITLEBAR, (function(e) {\n                        if (!$(e.target).closest(\".k-window-action\").length) {\n                            this.toggleMaximization();\n                        }\n                    }).bind(this));\n\n                    each(\"n e s w se sw ne nw\".split(\" \"), function(index, handler) {\n                        wrapper.append(templates.resizeHandle(handler));\n                    });\n\n                    this.resizing = new WindowResizing(this);\n                }\n\n                wrapper = null;\n            },\n\n            _draggable: function() {\n                var draggable = this.options.draggable;\n\n                if (this.dragging) {\n                    this.dragging.destroy();\n                    this.dragging = null;\n                }\n                if (draggable) {\n                    this.dragging = new WindowDragging(this, draggable.dragHandle || KWINDOWTITLEBAR);\n                }\n            },\n\n            _actions: function() {\n                var options = this.options;\n                var actions = options.actions;\n                var pinned = options.pinned;\n                var titlebar = this.wrapper.children(KWINDOWTITLEBAR);\n                var container = titlebar.find(\".k-window-actions\");\n                var windowSpecificCommands = [ \"maximize\", \"minimize\" ];\n\n                actions = $.map(actions, function(action) {\n                    action = pinned && action.toLowerCase() === \"pin\" ? \"unpin\" : action;\n                    return { name: (windowSpecificCommands.indexOf(action.toLowerCase()) > - 1) ? \"window-\" + action : action };\n                });\n\n                container.html(kendo.render(templates.action, actions));\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                var sizeClass = that.options.size;\n                var doc = this.containment && !that._isPinned ? this.containment : $(document);\n                // make a deep extend over options.position telerik/kendo-ui-core#844\n                var cachedOptions = JSON.parse(JSON.stringify(options));\n                extend(options.position, that.options.position);\n                extend(options.position, cachedOptions.position);\n\n                that._containerScrollTop = doc.scrollTop();\n                that._containerScrollLeft = doc.scrollLeft();\n\n                Widget.fn.setOptions.call(that, options);\n                var scrollable = that.options.scrollable !== false;\n\n                that.restore();\n\n                if (typeof options.title !== \"undefined\") {\n                    that.title(options.title);\n                }\n\n                that.wrapper.removeClass(SIZE[sizeClass]);\n                that._dimensions();\n\n                that._position();\n                that._resizable();\n                that._draggable();\n                that._actions();\n                if (typeof options.modal !== \"undefined\") {\n                    var visible = that.options.visible !== false;\n                    that._enableDocumentScrolling();\n                    that._overlay(options.modal && visible);\n                }\n\n                that.element.css(OVERFLOW, scrollable ? \"\" : \"hidden\");\n            },\n\n            events: [\n                OPEN,\n                ACTIVATE,\n                DEACTIVATE,\n                CLOSE,\n                MINIMIZE,\n                MAXIMIZE,\n                REFRESH,\n                RESTORE,\n                RESIZESTART,\n                RESIZE,\n                RESIZEEND,\n                DRAGSTART,\n                DRAGEND,\n                KENDOKEYDOWN,\n                ERROR\n            ],\n\n            options: {\n                name: \"Window\",\n                animation: {\n                    open: {\n                        effects: { zoom: { direction: \"in\" }, fade: { direction: \"in\" } },\n                        duration: 350\n                    },\n                    close: {\n                        effects: { zoom: { direction: \"out\", properties: { scale: 0.7 } }, fade: { direction: \"out\" } },\n                        duration: 350,\n                        hide: true\n                    }\n                },\n                title: \"\",\n                actions: [\"Close\"],\n                autoFocus: true,\n                modal: false,\n                size: \"auto\",\n                resizable: true,\n                draggable: true,\n                minWidth: 90,\n                minHeight: 50,\n                maxWidth: Infinity,\n                maxHeight: Infinity,\n                pinned: false,\n                scrollable: true,\n                position: {},\n                content: null,\n                visible: null,\n                height: null,\n                width: null,\n                appendTo: \"body\",\n                isMaximized: false,\n                isMinimized: false\n            },\n\n            _closable: function() {\n                return $.inArray(\"close\", $.map(this.options.actions, function(x) { return x.toLowerCase(); })) > -1;\n            },\n\n            _keydownContent: function(e) {\n                var that = this,\n                    keys = kendo.keys,\n                    keyCode = e.keyCode;\n\n                if (keyCode == keys.ESC && that._closable()) {\n                    e.stopPropagation();\n                    that._close(false);\n                }\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    options = that.options,\n                    keys = kendo.keys,\n                    keyCode = e.keyCode,\n                    wrapper = that.wrapper,\n                    offset, handled,\n                    distance = 10,\n                    isMaximized = options.isMaximized,\n                    isMinimized = options.isMinimized,\n                    newWidth, newHeight, w, h;\n\n                if (keyCode == keys.ESC && that._closable()) {\n                    e.stopPropagation();\n                    that._close(false);\n                }\n\n                if (e.target != e.currentTarget || that._closing) {\n                    return;\n                }\n\n                 // Refresh\n                if (e.altKey && keyCode == 82) {// Alt + R\n                    that.refresh();\n                }\n\n                // Pin/Unpin\n                if (e.altKey && keyCode == 80) {// Alt + P\n                    if (that.options.pinned) {\n                        that.unpin();\n                    } else {\n                        that.pin();\n                    }\n                }\n\n                // Maximize/Restore/Miminimize\n                if (e.altKey && keyCode == keys.UP) {\n                    if (isMinimized) {\n                        that.restore();\n                        that.wrapper.trigger(\"focus\");\n                    } else if (!isMaximized) {\n                        that.maximize();\n                        that.wrapper.trigger(\"focus\");\n                    }\n                } else if (e.altKey && keyCode == keys.DOWN) {\n                    if (!isMinimized && !isMaximized) {\n                        that.minimize();\n                        that.wrapper.trigger(\"focus\");\n                    } else if (isMaximized) {\n                        that.restore();\n                        that.wrapper.trigger(\"focus\");\n                    }\n                }\n\n                offset = kendo.getOffset(wrapper);\n\n                if (that.containment && !that._isPinned) {\n                    offset = that.options.position;\n                }\n\n                if (options.draggable && !e.ctrlKey && !e.altKey && !isMaximized) {\n                    that._updateBoundaries();\n                    if (keyCode == keys.UP) {\n                        offset.top = constrain(offset.top - distance, that.minTop, that.maxTop);\n                        handled = wrapper.css(\"top\", offset.top);\n                    } else if (keyCode == keys.DOWN) {\n                        offset.top = constrain(offset.top + distance, that.minTop, that.maxTop);\n                        handled = wrapper.css(\"top\", offset.top);\n                    } else if (keyCode == keys.LEFT) {\n                        offset.left = constrain(offset.left - distance, that.minLeft, that.maxLeft);\n                        handled = wrapper.css(\"left\", offset.left);\n                    } else if (keyCode == keys.RIGHT) {\n                        offset.left = constrain(offset.left + distance, that.minLeft, that.maxLeft);\n                        handled = wrapper.css(\"left\", offset.left);\n                    }\n                }\n\n                if (options.resizable && e.ctrlKey && !isMaximized && !isMinimized) {\n                    if (keyCode == keys.UP) {\n                        handled = true;\n                        newHeight = wrapper.outerHeight() - distance;\n                    } else if (keyCode == keys.DOWN) {\n                        handled = true;\n                        if (that.containment && !that._isPinned) {\n                            newHeight = Math.min(wrapper.outerHeight() + distance,\n                                that.containment.height - offset.top - toInt(wrapper, \"padding-top\") -\n                                toInt(wrapper, \"borderBottomWidth\") - toInt(wrapper, \"borderTopWidth\"));\n                        } else {\n                            newHeight = wrapper.outerHeight() + distance;\n                        }\n                    } if (keyCode == keys.LEFT) {\n                        handled = true;\n                        newWidth = wrapper.outerWidth() - distance;\n                    } else if (keyCode == keys.RIGHT) {\n                        handled = true;\n                        if (that.containment && !that._isPinned) {\n                            newWidth = Math.min(wrapper.outerWidth() + distance,\n                                                that.containment.width - offset.left -\n                                                toInt(wrapper, \"borderLeftWidth\") - toInt(wrapper, \"borderRightWidth\"));\n                        } else {\n                            newWidth = wrapper.outerWidth() + distance;\n                        }\n                    }\n\n                    if (handled) {\n                        w = constrain(newWidth, options.minWidth, options.maxWidth);\n                        h = constrain(newHeight, options.minHeight, options.maxHeight);\n\n                        if (!isNaN(w)) {\n                            wrapper.outerWidth(w);\n                            that.options.width = w + \"px\";\n                        }\n                        if (!isNaN(h)) {\n                            wrapper.outerHeight(h);\n                            that.options.height = h + \"px\";\n                        }\n\n                        that.resize();\n                    }\n                }\n\n                if (handled) {\n                    e.preventDefault();\n                }\n            },\n\n            _overlay: function(visible) {\n                var overlay = this.containment ? this.containment.children(KOVERLAY) : this.appendTo.children(KOVERLAY),\n                    wrapper = this.wrapper,\n                    display = visible ? \"block\" : \"none\",\n                    zIndex = parseInt(wrapper.css(ZINDEX), 10) - 1;\n\n                if (!overlay.length) {\n                    overlay = $(\"<div class='k-overlay' />\");\n                }\n\n                overlay\n                    .insertBefore(wrapper[0])\n                    .css({\n                        zIndex: zIndex,\n                        display: display\n                    });\n\n                if (this.options.modal.preventScroll && !this.containment) {\n                    this._stopDocumentScrolling();\n                }\n\n                return overlay;\n            },\n\n            _actionForIcon: function(icon) {\n                var iconClass = /\\bk-i(-\\w+)+\\b/.exec(icon[0].className)[0];\n                return {\n                    \"k-i-close\": \"_close\",\n                    \"k-i-window-maximize\": \"maximize\",\n                    \"k-i-window-minimize\": \"minimize\",\n                    \"k-i-window-restore\": \"restore\",\n                    \"k-i-refresh\": \"refresh\",\n                    \"k-i-pin\": \"pin\",\n                    \"k-i-unpin\": \"unpin\"\n                }[iconClass];\n            },\n\n            _windowActionHandler: function(e) {\n                if (this._closing) {\n                    return;\n                }\n                var icon = $(e.target).closest(\".k-window-action\").find(\".k-icon\");\n                var action = this._actionForIcon(icon);\n\n                if (action) {\n                    e.preventDefault();\n                    this[action]();\n                    return false;\n                }\n            },\n\n            _modals: function() {\n                var that = this,\n                    windowElements = $(KWINDOW + VISIBLE),\n                    windowInstance,\n                    modals = [];\n\n                for (var i = 0; i < windowElements.length; i += 1) {\n                    windowInstance = that._object($(windowElements[i]));\n\n                    if (windowInstance &&\n                        windowInstance.options &&\n                        windowInstance.options.modal &&\n                        windowInstance.options.visible &&\n                        windowInstance.options.appendTo === that.options.appendTo &&\n                        (!windowInstance.containment || (that.containment && windowInstance.containment[0] === that.containment[0]))) {\n                            modals.push(windowInstance.wrapper[0]);\n                    }\n                }\n\n                modals.sort(function(a, b) {\n                    return a.style.zIndex - b.style.zIndex;\n                });\n\n                that = null;\n\n                return $(modals);\n            },\n\n            _object: function(element) {\n                var content = element.children(KWINDOWCONTENT);\n                var widget = kendo.widgetInstance(content);\n\n                if (widget) {\n                    return widget;\n                }\n\n                return undefined$1;\n            },\n\n            center: function() {\n                var that = this,\n                    position = that.options.position,\n                    wrapper = that.wrapper,\n                    documentWindow = $(window),\n                    scrollTop = 0,\n                    scrollLeft = 0,\n                    newTop, newLeft;\n\n                if (that.options.isMaximized) {\n                    return that;\n                }\n\n                if (that.options.pinned && !that._isPinned) {\n                    that.pin();\n                }\n\n                if (!that.options.pinned) {\n                    scrollTop = documentWindow.scrollTop();\n                    scrollLeft = documentWindow.scrollLeft();\n                }\n\n                if (this.containment && !that.options.pinned) {\n                    newTop = this.minTop + (this.maxTop - this.minTop) / 2;\n                    newLeft = this.minLeft + (this.maxLeft - this.minLeft) / 2;\n                } else {\n                    that._scrollIsAppended = true;\n                    newLeft = scrollLeft + Math.max(0, (documentWindow.width() - wrapper.outerWidth()) / 2);\n                    newTop = scrollTop + Math.max(0, (documentWindow.height() - wrapper.outerHeight() - toInt(wrapper, \"paddingTop\")) / 2);\n                }\n\n                wrapper.css({\n                    left: newLeft,\n                    top: newTop\n                });\n\n                position.top = newTop;\n                position.left = newLeft;\n\n                return that;\n            },\n\n            title: function(title) {\n                var that = this,\n                    value,\n                    encoded = true,\n                    wrapper = that.wrapper,\n                    titleBar = wrapper.children(KWINDOWTITLEBAR),\n                    titleElement = titleBar.children(KWINDOWTITLE);\n\n                if (!arguments.length) {\n                    return titleElement.html();\n                }\n\n                if ($.isPlainObject(title)) {\n                    value = typeof title.text !== \"undefined\" ? title.text : \"\";\n                    encoded = title.encoded !== false;\n                } else {\n                    value = title;\n                }\n\n                if (value === false) {\n                    wrapper.addClass(\"k-window-titleless\");\n                    wrapper.css(\"padding-top\", 0);\n                    titleBar.remove();\n                } else {\n                    if (!titleBar.length) {\n                        wrapper.prepend(templates.titlebar({\n                            title: encoded ? kendo.htmlEncode(value) : value\n                        }));\n                        that._actions();\n                        titleBar = wrapper.children(KWINDOWTITLEBAR);\n                    } else {\n                        titleElement.html(encoded ? kendo.htmlEncode(value) : value);\n                    }\n                }\n\n                that.options.title = value;\n\n                return that;\n            },\n\n            content: function(html, data) {\n                var content = this.wrapper.children(KWINDOWCONTENT),\n                    scrollContainer = content.children(\".km-scroll-container\");\n\n                content = scrollContainer[0] ? scrollContainer : content;\n\n                if (!defined(html)) {\n                    return content.html();\n                }\n\n                this.angular(\"cleanup\", function() {\n                    return { elements: content.children() };\n                });\n\n                kendo.destroy(this.element.children());\n\n                content.empty().html(html);\n\n                this.angular(\"compile\", function() {\n                    var a = [];\n                    for (var i = content.length; --i >= 0;) {\n                        a.push({ dataItem: data });\n                    }\n                    return {\n                        elements: content.children(),\n                        data: a\n                    };\n                });\n\n                return this;\n            },\n\n            open: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    options = that.options,\n                    showOptions = this._animationOptions(\"open\"),\n                    contentElement = wrapper.children(KWINDOWCONTENT),\n                    overlay, otherModalsVisible,\n                    containmentContext = this.containment && !that._isPinned,\n                    doc = containmentContext ? this.containment : $(document);\n\n                if (!that.trigger(OPEN)) {\n                    if (that._closing) {\n                        wrapper.kendoStop(true, true);\n                    }\n\n                    that._closing = false;\n\n                    that.toFront();\n\n                    if (options.autoFocus) {\n                        that.wrapper.trigger(\"focus\");\n                    }\n\n                    options.visible = true;\n\n                    if (options.modal) {\n                        otherModalsVisible = !!that._modals().length;\n                        overlay = that._overlay(otherModalsVisible);\n\n                        overlay.kendoStop(true, true);\n\n                        if (showOptions.duration && kendo.effects.Fade && !otherModalsVisible) {\n                            var overlayFx = kendo.fx(overlay).fadeIn();\n                            overlayFx.duration(showOptions.duration || 0);\n                            overlayFx.endValue(0.5);\n                            overlayFx.play();\n                        } else {\n                            overlay.css(\"opacity\", 0.5);\n                        }\n\n                        overlay.show();\n\n                        $(window).on(\"focus\" + MODAL_NS, function() {\n                            if (wrapper.data(\"isFront\") && !$(document.activeElement).closest(wrapper).length) {\n                               that.wrapper.trigger(\"focus\");\n                            }\n                        });\n                    }\n\n                    if (!wrapper.is(VISIBLE)) {\n                        contentElement.css(OVERFLOW, HIDDEN);\n\n                        that.wrapper.find(TITLEBAR_BUTTONS).addClass(\"k-button-flat\");\n\n                        wrapper.addClass(INLINE_FLEX).kendoStop().kendoAnimate({\n                            effects: showOptions.effects,\n                            duration: showOptions.duration,\n                            complete: this._activate.bind(this)\n                        });\n                    }\n                }\n\n                if (options.isMaximized) {\n                    that._containerScrollTop = doc.scrollTop();\n                    that._containerScrollLeft = doc.scrollLeft();\n                    that._stopDocumentScrolling();\n                }\n\n                if (this.options.pinned && !this._isPinned) {\n                    this.pin();\n                }\n\n                return that;\n            },\n\n            _activate: function() {\n                var scrollable = this.options.scrollable !== false;\n\n                if (this.options.autoFocus) {\n                    this.wrapper.trigger(\"focus\");\n                }\n\n                this.element.css(OVERFLOW, scrollable ? \"\" : \"hidden\");\n                kendo.resize(this.element.children());\n\n                this.trigger(ACTIVATE);\n            },\n\n            _removeOverlay: function(suppressAnimation) {\n                var modals = this._modals();\n                var options = this.options;\n                var hideOverlay = options.modal && !modals.length;\n                var hideOptions = this._animationOptions(\"close\");\n\n                if (hideOverlay) {\n                    if (!suppressAnimation && hideOptions.duration && kendo.effects.Fade) {\n                        var overlayFx = kendo.fx(options.modal ? this._overlay(true) : $(undefined$1)).fadeOut();\n                        overlayFx.duration(hideOptions.duration || 0);\n                        overlayFx.startValue(0.5);\n                        overlayFx.play();\n                    } else {\n                        this._overlay(false).remove();\n                    }\n                    if (options.modal.preventScroll) {\n                        this._enableDocumentScrolling();\n                    }\n                } else if (modals.length) {\n                    this._object(modals.last())._overlay(true);\n\n                    if (options.modal.preventScroll) {\n                        this._stopDocumentScrolling();\n                    }\n                }\n            },\n\n            _close: function(systemTriggered) {\n                var that = this,\n                    wrapper = that.wrapper,\n                    options = that.options,\n                    showOptions = this._animationOptions(\"open\"),\n                    hideOptions = this._animationOptions(\"close\"),\n                    containmentContext = this.containment && !that._isPinned,\n                    doc = containmentContext ? this.containment : $(document),\n                    defaultPrevented;\n\n                if (that._closing) {\n                    return;\n                }\n\n                defaultPrevented = that.trigger(CLOSE, { userTriggered: !systemTriggered });\n                that._closing = !defaultPrevented;\n\n                if (wrapper.is(VISIBLE) && !defaultPrevented) {\n                    options.visible = false;\n\n                    $(KWINDOW).each(function(i, element) {\n                        var contentElement = $(element).children(KWINDOWCONTENT);\n\n                        // Remove overlay set by toFront\n                        if (element != wrapper && contentElement.find(\"> .\" + KCONTENTFRAME).length > 0) {\n                            contentElement.children(KOVERLAY).remove();\n                        }\n                    });\n\n                    this._removeOverlay();\n\n                    // Prevent close animation from stopping\n                    that.wrapper.find(TITLEBAR_BUTTONS).removeClass(\"k-button-flat\");\n\n                    wrapper.kendoStop().kendoAnimate({\n                        effects: hideOptions.effects || showOptions.effects,\n                        reverse: hideOptions.reverse === true,\n                        duration: hideOptions.duration,\n                        complete: this._deactivate.bind(this)\n                    });\n                    $(window).off(MODAL_NS);\n                }\n\n                if (that.options.isMaximized) {\n                    that._enableDocumentScrolling();\n                    if (that._containerScrollTop && that._containerScrollTop > 0) {\n                        doc.scrollTop(that._containerScrollTop);\n                    }\n                    if (that._containerScrollLeft && that._containerScrollLeft > 0) {\n                        doc.scrollLeft(that._containerScrollLeft);\n                    }\n                }\n\n                if (that.options.iframe) {\n                    that.wrapper.trigger(\"blur\");\n                }\n            },\n\n            _deactivate: function() {\n                var that = this;\n\n                that.wrapper\n                    .removeClass(INLINE_FLEX)\n                    .hide()\n                    .css(\"opacity\", \"\");\n\n                that.trigger(DEACTIVATE);\n\n                if (that.options.modal) {\n                    var lastModal = that._object(that._modals().last());\n                    if (lastModal) {\n                        lastModal.toFront();\n                    }\n                }\n            },\n\n            close: function() {\n                this._close(true);\n                return this;\n            },\n\n            _actionable: function(element) {\n                return $(element).is(TITLEBAR_BUTTONS + \",\" + TITLEBAR_BUTTONS + \" .k-icon, :input, a, .k-input, .k-icon, [role='gridcell'], .k-input-value-text\");\n            },\n\n            _shouldFocus: function(target) {\n                var active = activeElement(),\n                    element = this.wrapper;\n\n                return this.options.autoFocus &&\n                    !$(active).is(element) &&\n                    !this._actionable(target) &&\n                    (!element.find(active).length || !element.find(target).length);\n            },\n\n            toFront: function(e, avoidFocus) {\n                var that = this,\n                    wrapper = that.wrapper,\n                    currentWindow = wrapper[0],\n                    containmentContext = that.containment && !that._isPinned,\n                    openAnimation = this._animationOptions(\"open\"),\n                    zIndex = +wrapper.css(ZINDEX),\n                    originalZIndex = zIndex,\n                    target = (e && e.target) || null;\n\n                $(KWINDOW).each(function(i, element) {\n                    var windowObject = $(element),\n                        zIndexNew = windowObject.css(ZINDEX),\n                        contentElement = windowObject.children(KWINDOWCONTENT);\n\n                    if (!isNaN(zIndexNew)) {\n                        zIndex = Math.max(+zIndexNew, zIndex);\n                    }\n\n                    wrapper.data(\"isFront\", element == currentWindow);\n                    // Add overlay to windows with iframes and lower z-index to prevent\n                    // trapping of events when resizing / dragging\n\n                    if (element != currentWindow &&\n                        contentElement.find(\".\" + KCONTENTFRAME).length &&\n                        !contentElement.find(KOVERLAY).length) {\n                        contentElement.append(templates.overlay);\n                    }\n                });\n\n                if (!wrapper[0].style.zIndex || originalZIndex < zIndex) {\n                    wrapper.css(ZINDEX, zIndex + 2);\n                }\n                that.element.find(\"> .k-overlay\").remove();\n\n                if (that._shouldFocus(target)) {\n                    if (!avoidFocus) {\n                        setTimeout(function() {\n                            that.wrapper.focus();\n                        }, openAnimation ? openAnimation.duration : 0);\n                    }\n\n                    var scrollTop = containmentContext ? that.containment.scrollTop() : $(window).scrollTop(),\n                        windowTop = parseInt(wrapper.position().top, 10);\n\n                    if (!that.options.pinned && windowTop > 0 && windowTop < scrollTop) {\n                        if (scrollTop > 0) {\n                            $(window).scrollTop(windowTop);\n                        } else {\n                            wrapper.css(\"top\", scrollTop);\n                        }\n                    }\n                }\n\n                wrapper = null;\n\n                return that;\n            },\n\n            toggleMaximization: function() {\n                if (this._closing) {\n                    return this;\n                }\n\n                return this[this.options.isMaximized ? \"restore\" : \"maximize\"]();\n            },\n\n            restore: function() {\n                var that = this;\n                var options = that.options;\n                var minHeight = options.minHeight;\n                var restoreOptions = that.restoreOptions;\n                var shouldRestrictTop;\n                var container = that.containment && !that._isPinned ? that.containment : $(document);\n\n                if (!options.isMaximized && !options.isMinimized) {\n                    return that;\n                }\n\n                if (minHeight && minHeight != Infinity) {\n                    that.wrapper.css(\"min-height\", minHeight);\n                }\n\n                if (restoreOptions && !options.isMaximized) {\n                    restoreOptions.height = constrain(restoreOptions.height, that.options.minHeight, that.options.maxHeight);\n\n                    shouldRestrictTop = options.position.top + parseInt(restoreOptions.height, 10) > that.maxTop;\n\n                    if (shouldRestrictTop) {\n                        options.position.top = constrain(options.position.top, that.minTop, that.maxTop - parseInt(restoreOptions.height, 10));\n\n                        extend(restoreOptions, {\n                            left: options.position.left,\n                            top: options.position.top\n                        });\n                    }\n                }\n\n                that.wrapper\n                    .css({\n                        position: options.pinned ? \"fixed\" : \"absolute\",\n                        left: restoreOptions.left,\n                        top: restoreOptions.top,\n                        width: restoreOptions.width,\n                        height: restoreOptions.height\n                    })\n                    .removeClass(MAXIMIZEDSTATE)\n                    .find(\".k-window-content,.k-resize-handle\").show().end()\n                    .find(\".k-window-titlebar .k-i-window-restore\").parent().remove().end().end()\n                    .find(MINIMIZE_MAXIMIZE).parent().show().end().end()\n                    .find(PIN_UNPIN).parent().show();\n\n                if (options.isMaximized) {\n                    that.wrapper.find(\".k-i-window-maximize\").parent().trigger(\"focus\");\n                } else if (options.isMinimized) {\n                    that.wrapper.find(\".k-i-window-minimize\").parent().trigger(\"focus\");\n                }\n\n                that.options.width = restoreOptions.width;\n                that.options.height = restoreOptions.height;\n\n                if (!that.options.modal.preventScroll) {\n                    that._enableDocumentScrolling();\n                }\n\n                if (that._containerScrollTop && that._containerScrollTop > 0) {\n                    container.scrollTop(that._containerScrollTop);\n                }\n                if (that._containerScrollLeft && that._containerScrollLeft > 0) {\n                    container.scrollLeft(that._containerScrollLeft);\n                }\n\n                options.isMaximized = options.isMinimized = false;\n\n                that.wrapper.removeAttr(\"aria-labelled-by\");\n\n                that.resize();\n\n                that.trigger(RESTORE);\n\n                return that;\n            },\n\n            _sizingAction: function(actionId, callback) {\n                var that = this,\n                    wrapper = that.wrapper,\n                    style = wrapper[0].style,\n                    options = that.options;\n\n                if (options.isMaximized || options.isMinimized) {\n                    return that;\n                }\n\n                that.restoreOptions = {\n                    width: style.width,\n                    height: style.height\n                };\n\n                wrapper\n                    .children(KWINDOWRESIZEHANDLES).hide().end()\n                    .children(KWINDOWTITLEBAR).find(MINIMIZE_MAXIMIZE).parent().hide()\n                    .eq(0).before(templates.action({ name: \"window-restore\" }));\n\n                callback.call(that);\n\n                that.wrapper.children(KWINDOWTITLEBAR).find(PIN_UNPIN).parent().toggle(actionId !== \"maximize\");\n\n                that.trigger(actionId);\n\n                wrapper.find(\".k-i-window-restore\").parent().trigger(\"focus\");\n\n                return that;\n            },\n\n            maximize: function() {\n                this._sizingAction(\"maximize\", function() {\n                    var that = this,\n                        wrapper = that.wrapper,\n                        containmentContext = this.containment && !that._isPinned,\n                        position = wrapper.position(),\n                        doc = $(document);\n\n                    extend(that.restoreOptions, {\n                        left: position.left + (containmentContext ? this.containment.scrollLeft() : 0),\n                        top: position.top + (containmentContext ? this.containment.scrollTop() : 0)\n                    });\n\n                    this._containerScrollTop = containmentContext ? this.containment.scrollTop() : doc.scrollTop();\n                    this._containerScrollLeft = containmentContext ? this.containment.scrollLeft() : doc.scrollLeft();\n\n                    that._stopDocumentScrolling();\n\n                    wrapper\n                        .css({\n                            top: containmentContext ? this.containment.scrollTop() : 0,\n                            left: containmentContext ? this.containment.scrollLeft() : 0,\n                            position: containmentContext ? \"absolute\" : \"fixed\"\n                        })\n                        .addClass(MAXIMIZEDSTATE);\n\n                    that.options.isMaximized = true;\n\n                    that._onDocumentResize();\n                });\n\n                return this;\n            },\n\n            _stopDocumentScrolling: function() {\n                var that = this;\n                var containment = that.containment;\n\n                if (containment && !that._isPinned) {\n                    that._storeOverflowRule(containment);\n                    containment.css(OVERFLOW, HIDDEN);\n                    that.wrapper.css({\n                        maxWidth: containment.innerWidth(),\n                        maxHeight: containment.innerHeight()\n                    });\n                    return;\n                }\n\n                var $body = $(\"body\");\n                that._storeOverflowRule($body);\n                $body.css(OVERFLOW, HIDDEN);\n\n                var $html = $(\"html\");\n                that._storeOverflowRule($html);\n                $html.css(OVERFLOW, HIDDEN);\n            },\n\n            _enableDocumentScrolling: function() {\n                var that = this;\n                var containment = that.containment;\n\n                if (containment && !that._isPinned) {\n                    that._restoreOverflowRule(containment);\n                    that.wrapper.css({\n                        maxWidth: containment.width,\n                        maxHeight: containment.height\n                    });\n                    return;\n                }\n\n                that._restoreOverflowRule($(document.body));\n                that._restoreOverflowRule($(\"html\"));\n            },\n\n            _storeOverflowRule: function($element) {\n                if (this._isOverflowStored($element)) {\n                    return;\n                }\n\n                var overflowRule = $element.get(0).style.overflow;\n\n                if (typeof overflowRule === \"string\") {\n                    $element.data(DATADOCOVERFLOWRULE, overflowRule);\n                }\n            },\n\n            _isOverflowStored: function($element) {\n                return typeof $element.data(DATADOCOVERFLOWRULE) === \"string\";\n            },\n\n            _restoreOverflowRule: function($element) {\n                var overflowRule = $element.data(DATADOCOVERFLOWRULE);\n\n                if (overflowRule !== null && overflowRule !== undefined$1) {\n                    $element.css(OVERFLOW, overflowRule);\n                    $element.removeData(DATADOCOVERFLOWRULE);\n                } else {\n                    $element.css(OVERFLOW, \"\");\n                }\n            },\n\n            isMaximized: function() {\n                return this.options.isMaximized;\n            },\n\n            minimize: function() {\n                this._sizingAction(\"minimize\", function() {\n                    var that = this;\n\n                    that.wrapper.css({\n                        height: \"\",\n                        minHeight: \"\"\n                    });\n\n                    that.element.hide();\n\n                    that.options.isMinimized = true;\n                });\n\n                this.wrapper.attr(\"aria-labelled-by\", this.element.attr(\"aria-labelled-by\"));\n\n                this._updateBoundaries();\n\n                return this;\n            },\n\n            isMinimized: function() {\n                return this.options.isMinimized;\n            },\n\n            pin: function() {\n                var that = this,\n                    win = $(window),\n                    wrapper = that.wrapper,\n                    options = that.options,\n                    position = options.position,\n                    top = this.containment ? getPosition(wrapper[0]).top + toInt(this.containment, \"borderTopWidth\") : toInt(wrapper, \"top\"),\n                    left = this.containment ? getPosition(wrapper[0]).left + toInt(this.containment, \"borderLeftWidth\") : toInt(wrapper, \"left\");\n\n                if (!that.options.isMaximized) {\n                    position.top = top;\n                    position.left = left;\n\n                    if (that._scrollIsAppended && (!this.containment || this.containment.css(\"position\") !== \"fixed\")) {\n\n                        position.top -= win.scrollTop();\n                        position.left -= win.scrollLeft();\n                        that._scrollIsAppended = false;\n                    }\n\n                    wrapper.css(extend(position, { position: \"fixed\" }));\n                    wrapper.children(KWINDOWTITLEBAR).find(KPIN).addClass(\"k-i-unpin\").removeClass(\"k-i-pin\");\n\n                    that._isPinned = true;\n                    that.options.pinned = true;\n\n                    if (this.containment) {\n                        options.maxWidth = options.maxHeight = Infinity;\n                        wrapper.css({\n                            maxWidth: \"\",\n                            maxHeight: \"\"\n                        });\n                    }\n                }\n            },\n\n            unpin: function() {\n                var that = this,\n                    win = $(window),\n                    wrapper = that.wrapper,\n                    options = that.options,\n                    position = that.options.position,\n                    containment = that.containment,\n                    top = parseInt(wrapper.css(\"top\"), 10) + win.scrollTop(),\n                    left = parseInt(wrapper.css(\"left\"), 10) + win.scrollLeft();\n\n                if (!that.options.isMaximized) {\n                    that._isPinned = false;\n                    that._scrollIsAppended = true;\n                    that.options.pinned = false;\n\n                    if (containment) {\n                        that._updateBoundaries();\n\n                        options.maxWidth = Math.min(containment.width, options.maxWidth);\n                        options.maxHeight = Math.min(containment.height - toInt(wrapper, \"padding-top\"), options.maxHeight);\n\n                        wrapper.css({\n                            maxWidth: options.maxWidth,\n                            maxHeight: options.maxHeight\n                        });\n\n                        if (top < containment.position.top) {\n                            top = that.minTop;\n                        } else if (top > containment.position.top + containment.height) {\n                            top = that.maxTop;\n                        } else {\n                            top = top + containment.scrollTop() - (containment.position.top + toInt(containment, \"border-top-width\"));\n                        }\n\n                        if (left < containment.position.left) {\n                            left = that.minLeft;\n                        } else if (left > containment.position.left + containment.width) {\n                            left = that.maxLeft;\n                        } else {\n                            left = left + containment.scrollLeft() - (containment.position.left + toInt(containment, \"border-left-width\"));\n                        }\n\n                    }\n\n                    position.top = constrain(top, that.minTop, that.maxTop);\n                    position.left = constrain(left, that.minLeft, that.maxLeft);\n\n                    wrapper.css(extend(position, { position: \"\" }));\n                    wrapper.children(KWINDOWTITLEBAR).find(KUNPIN).addClass(\"k-i-pin\").removeClass(\"k-i-unpin\");\n                }\n            },\n\n            _onDocumentResize: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    wnd = $(window),\n                    zoomLevel = kendo.support.zoomLevel(),\n                    contentBoxSizing = wrapper.css(\"box-sizing\") == \"content-box\",\n                    w, h;\n\n                if (!that.options.isMaximized) {\n                    return;\n                }\n\n                var lrBorderWidth = contentBoxSizing ? toInt(wrapper, \"border-left-width\") + toInt(wrapper, \"border-right-width\") : 0;\n                var tbBorderWidth = contentBoxSizing ? toInt(wrapper, \"border-top-width\") + toInt(wrapper, \"border-bottom-width\") : 0;\n                var paddingTop = contentBoxSizing ? toInt(wrapper, \"padding-top\") : 0;\n\n                if (that.containment && !that._isPinned) {\n                    w = that.containment.innerWidth() - lrBorderWidth;\n                    h = that.containment.innerHeight() - (tbBorderWidth + paddingTop);\n                } else {\n                    w = wnd.width() / zoomLevel - lrBorderWidth;\n                    h = wnd.height() / zoomLevel - (tbBorderWidth + paddingTop);\n                }\n\n                wrapper.css({\n                    width: w,\n                    height: h\n                });\n                that.options.width = w;\n                that.options.height = h;\n\n                that.resize();\n            },\n\n            refresh: function(options) {\n                var that = this,\n                    initOptions = that.options,\n                    element = $(that.element),\n                    iframe,\n                    showIframe,\n                    url;\n\n                if (!isPlainObject(options)) {\n                    options = { url: options };\n                }\n\n                options = extend(initOptions.content, options);\n\n                showIframe = defined(initOptions.iframe) ? initOptions.iframe : options.iframe;\n\n                url = options.url;\n\n                if (url) {\n                    if (!defined(showIframe)) {\n                        showIframe = !isLocalUrl(url);\n                    }\n\n                    if (!showIframe) {\n                        // perform AJAX request\n                        that._ajaxRequest(options);\n                    } else {\n                        iframe = element.find(\".\" + KCONTENTFRAME)[0];\n\n                        if (iframe) {\n                            // refresh existing iframe\n                            iframe.src = url || iframe.src;\n                        } else {\n                            // render new iframe\n                            element.html(templates.contentFrame(extend({}, initOptions, { content: options })));\n                        }\n\n                        element.find(\".\" + KCONTENTFRAME)\n                            .off(\"load\" + NS)\n                            .on(\"load\" + NS, this._triggerRefresh.bind(this));\n                    }\n                } else {\n                    if (options.template) {\n                        // refresh template\n                        that.content(template(options.template)({}));\n                    }\n\n                    that.trigger(REFRESH);\n                }\n\n                element.toggleClass(\"k-window-iframecontent\", !!showIframe);\n\n                return that;\n            },\n\n            _triggerRefresh: function() {\n                this.trigger(REFRESH);\n            },\n\n            _ajaxComplete: function() {\n                clearTimeout(this._loadingIconTimeout);\n                this.wrapper.find(REFRESHICON).removeClass(LOADING);\n            },\n\n            _ajaxError: function(xhr, status) {\n                this.trigger(ERROR, { status: status, xhr: xhr });\n            },\n\n            _ajaxSuccess: function(contentTemplate) {\n                return function(data) {\n                    var html = data;\n                    if (contentTemplate) {\n                        html = template(contentTemplate)(data || {});\n                    }\n\n                    this.content(html, data);\n                    this.element.prop(\"scrollTop\", 0);\n\n                    this.trigger(REFRESH);\n                };\n            },\n\n            _showLoading: function() {\n                this.wrapper.find(REFRESHICON).addClass(LOADING);\n            },\n\n            _ajaxRequest: function(options) {\n                this._loadingIconTimeout = setTimeout(this._showLoading.bind(this), 100);\n\n                $.ajax(extend({\n                    type: \"GET\",\n                    dataType: \"html\",\n                    cache: false,\n                    error: this._ajaxError.bind(this),\n                    complete: this._ajaxComplete.bind(this),\n                    success: this._ajaxSuccess(options.template).bind(this)\n                }, options));\n            },\n\n            _destroy: function() {\n                if (this.resizing) {\n                    this.resizing.destroy();\n                }\n\n                if (this.dragging) {\n                    this.dragging.destroy();\n                }\n\n                this.wrapper.off(NS)\n                    .children(KWINDOWCONTENT).off(NS).end()\n                    .find(\".k-resize-handle,.k-window-titlebar\").off(NS);\n\n                $(window).off(\"resize\" + NS + this._marker);\n                $(window).off(MODAL_NS);\n                $(window).off(NS);\n\n                clearTimeout(this._loadingIconTimeout);\n\n                Widget.fn.destroy.call(this);\n\n                this.unbind(undefined$1);\n\n                kendo.destroy(this.wrapper);\n            },\n\n            destroy: function() {\n                this._destroy();\n\n                if (this.options.modal) {\n                    this._removeOverlay(true);\n                }\n\n                this.wrapper.empty().remove();\n\n                this.wrapper = this.appendTo = this.element = $();\n            },\n\n            _createWindow: function() {\n                var contentHtml = this.element,\n                    options = this.options,\n                    iframeSrcAttributes,\n                    wrapper,\n                    isRtl = kendo.support.isRtl(contentHtml);\n\n                if (options.scrollable === false) {\n                    contentHtml.css(\"overflow\", \"hidden\");\n                }\n\n                wrapper = $(templates.wrapper(options));\n\n                // Collect the src attributes of all iframes and then set them to empty string.\n                // This seems to fix this IE9 \"feature\": http://msdn.microsoft.com/en-us/library/gg622929%28v=VS.85%29.aspx?ppud=4\n                iframeSrcAttributes = contentHtml.find(\"iframe:not(.k-content-frame)\").map(function() {\n                    var src = this.getAttribute(\"src\");\n                    this.src = \"\";\n                    return src;\n                });\n\n                // Make sure the wrapper is appended to the body only once. IE9+ will throw exceptions if you move iframes in DOM\n                wrapper\n                    .toggleClass(\"k-rtl\", isRtl)\n                    .attr(\"tabindex\", 0)\n                    .append(contentHtml)\n                    .find(\"iframe:not(.k-content-frame)\").each(function(index) {\n                    // Restore the src attribute of the iframes when they are part of the live DOM tree\n                    this.src = iframeSrcAttributes[index];\n                });\n\n                if (this.containment) {\n                    this.containment.prepend(wrapper);\n                } else if (this.appendTo) {\n                    wrapper.appendTo(this.appendTo);\n                }\n\n                wrapper.find(\".k-window-title\")\n                    .css(isRtl ? \"left\" : \"right\", outerWidth(wrapper.find(\".k-window-actions\")) + 10);\n\n                contentHtml.css(\"visibility\", \"\").show();\n\n                contentHtml.find(\"[data-role=editor]\").each(function() {\n                    var editor = $(this).data(\"kendoEditor\");\n\n                    if (editor) {\n                        editor.refresh();\n                    }\n                });\n\n                wrapper = contentHtml = null;\n            }\n        });\n\n        templates = {\n            wrapper: template(\"<div class='k-widget k-window'></div>\"),\n            action: template(\n                \"<a role='button' href='\\\\#' class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button k-window-action' aria-label='#= name #'>\" +\n                    \"<span class='k-button-icon k-icon k-i-#= name.toLowerCase() #'></span>\" +\n                \"</a>\"\n            ),\n            titlebar: template(\n                \"<div class='k-window-titlebar k-hstack'>\" +\n                    \"<span class='k-window-title'>#= title #</span>\" +\n                    \"<div class='k-window-actions k-hstack'></div>\" +\n                \"</div>\"\n            ),\n            overlay: \"<div class='k-overlay'></div>\",\n            contentFrame: template(\n                \"<iframe frameborder='0' title='#= title #' class='\" + KCONTENTFRAME + \"' \" +\n                \"src='#= content.url #'>\" +\n                \"This page requires frames in order to show content\" +\n                \"</iframe>\"\n            ),\n            resizeHandle: template(\"<div aria-hidden='true' class='k-resize-handle k-resize-#= data #'></div>\")\n        };\n\n\n        function WindowResizing(wnd) {\n            var that = this;\n            that.owner = wnd;\n            that._preventDragging = false;\n            that._draggable = new Draggable(wnd.wrapper, {\n                filter: \">\" + KWINDOWRESIZEHANDLES,\n                group: wnd.wrapper.id + \"-resizing\",\n                dragstart: that.dragstart.bind(that),\n                drag: that.drag.bind(that),\n                dragend: that.dragend.bind(that)\n            });\n\n            that._draggable.userEvents.bind(\"press\", that.addOverlay.bind(that));\n            that._draggable.userEvents.bind(\"release\", that.removeOverlay.bind(that));\n        }\n\n        WindowResizing.prototype = {\n            addOverlay: function() {\n                this.owner.wrapper.append(templates.overlay);\n            },\n            removeOverlay: function() {\n                this.owner.wrapper.find(KOVERLAY).remove();\n            },\n            dragstart: function(e) {\n                var that = this;\n                var wnd = that.owner;\n                var wrapper = wnd.wrapper;\n\n                that._preventDragging = wnd.trigger(RESIZESTART);\n                if (that._preventDragging) {\n                    return;\n                }\n\n                that.elementPadding = parseInt(wrapper.css(\"padding-top\"), 10);\n                that.initialPosition = kendo.getOffset(wrapper, \"position\");\n\n                that.resizeDirection = e.currentTarget.prop(\"className\").replace(\"k-resize-handle k-resize-\", \"\");\n\n                that.initialSize = {\n                    width: wrapper.outerWidth(),\n                    height: wrapper.outerHeight()\n                };\n\n                wnd._updateBoundaries();\n\n                that.containerOffset = wnd.containment ? wnd.containment.position : kendo.getOffset(wnd.appendTo);\n\n                var offsetParent = wrapper.offsetParent();\n\n                if (offsetParent.is(\"html\")) {\n                    that.containerOffset.top = that.containerOffset.left = 0;\n                } else {\n                    var marginTop = offsetParent.css(\"margin-top\");\n                    var marginLeft = offsetParent.css(\"margin-left\");\n                    var hasMargin = !zero.test(marginTop) || !zero.test(marginLeft);\n                    if (hasMargin) {\n                        var wrapperPosition = getPosition(wrapper[0]);\n                        var relativeElMarginLeft = wrapperPosition.left - that.containerOffset.left - that.initialPosition.left;\n                        var relativeElMarginTop = wrapperPosition.top - that.containerOffset.top - that.initialPosition.top;\n\n                        that._relativeElMarginLeft = relativeElMarginLeft > 1 ? relativeElMarginLeft : 0;\n                        that._relativeElMarginTop = relativeElMarginTop > 1 ? relativeElMarginTop : 0;\n\n                        that.initialPosition.left += that._relativeElMarginLeft;\n                        that.initialPosition.top += that._relativeElMarginTop;\n                    }\n                }\n\n                wrapper\n                    .children(KWINDOWRESIZEHANDLES).not(e.currentTarget).hide();\n\n                $(BODY).css(CURSOR, e.currentTarget.css(CURSOR));\n            },\n            drag: function(e) {\n                if (this._preventDragging) {\n                    return;\n                }\n                var that = this,\n                    wnd = that.owner,\n                    wrapper = wnd.wrapper,\n                    options = wnd.options,\n                    position = options.position,\n                    direction = that.resizeDirection,\n                    containerOffset = that.containerOffset,\n                    initialPosition = that.initialPosition,\n                    initialSize = that.initialSize,\n                    containmentContext = wnd.containment && !wnd._isPinned,\n                    rtl = kendo.support.isRtl(wnd.containment),\n                    leftRtlOffset = containmentContext && rtl && wnd.containment.innerWidth() > wnd.containment.width ? kendo.support.scrollbar() : 0,\n                    scrollOffset = containmentContext ? { top: wnd.containment.scrollTop(), left: wnd.containment.scrollLeft() } : { top: 0, left: 0 },\n                    newWidth, newHeight,\n                    windowBottom, windowRight,\n                    x = Math.max(e.x.location, 0),\n                    y = Math.max(e.y.location, 0);\n\n                    if (direction.indexOf(\"e\") >= 0) {\n\n                        if (wnd.containment && x - initialSize.width >= wnd.maxLeft - scrollOffset.left + containerOffset.left + leftRtlOffset) {\n                            newWidth = wnd.maxLeft + leftRtlOffset - initialPosition.left + initialSize.width - scrollOffset.left;\n                        } else {\n                            newWidth = x - initialPosition.left - containerOffset.left;\n                        }\n\n                        wrapper.outerWidth(constrain(newWidth, options.minWidth, options.maxWidth));\n                    } else if (direction.indexOf(\"w\") >= 0) {\n                        windowRight = initialPosition.left + initialSize.width + containerOffset.left;\n                        newWidth = constrain(windowRight - x, options.minWidth, options.maxWidth);\n                        position.left = windowRight - newWidth - containerOffset.left - leftRtlOffset - (that._relativeElMarginLeft || 0) + scrollOffset.left;\n\n                        if (wnd.containment && position.left <= wnd.minLeft) {\n                            position.left = wnd.minLeft;\n                            newWidth = constrain(windowRight - leftRtlOffset - position.left - containerOffset.left + scrollOffset.left, options.minWidth, options.maxWidth);\n                        }\n\n                        wrapper.css({\n                            left: position.left,\n                            width: newWidth\n                        });\n                    }\n\n                    var newWindowTop = y;\n                    if (wnd.options.pinned) {\n                        newWindowTop -= $(window).scrollTop();\n                    }\n                    if (direction.indexOf(\"s\") >= 0) {\n                        newHeight = newWindowTop - initialPosition.top - that.elementPadding - containerOffset.top;\n\n                        if (newWindowTop - initialSize.height - that.elementPadding >= wnd.maxTop + containerOffset.top - scrollOffset.top) {\n                            newHeight = wnd.maxTop - initialPosition.top + initialSize.height - scrollOffset.top;\n                        }\n\n                        wrapper.outerHeight(constrain(newHeight, options.minHeight, options.maxHeight));\n                    } else if (direction.indexOf(\"n\") >= 0) {\n                        windowBottom = initialPosition.top + initialSize.height + containerOffset.top;\n                        newHeight = constrain(windowBottom - newWindowTop, options.minHeight, options.maxHeight);\n                        position.top = windowBottom - newHeight - containerOffset.top - (that._relativeElMarginTop || 0) + scrollOffset.top;\n\n                        if (position.top <= wnd.minTop && wnd.containment) {\n                            position.top = wnd.minTop;\n                            newHeight = constrain(windowBottom - position.top - containerOffset.top + scrollOffset.top, options.minHeight, options.maxHeight);\n                        }\n\n                        wrapper.css({\n                            top: position.top,\n                            height: newHeight\n                        });\n                    }\n\n                    if (newWidth) {\n                        wnd.options.width = newWidth + \"px\";\n                    }\n                    if (newHeight) {\n                        wnd.options.height = newHeight + \"px\";\n                    }\n\n                    wnd.resize();\n            },\n            dragend: function(e) {\n                if (this._preventDragging) {\n                    return;\n                }\n\n                var that = this,\n                    wnd = that.owner,\n                    wrapper = wnd.wrapper;\n\n                wrapper\n                    .children(KWINDOWRESIZEHANDLES).not(e.currentTarget).show();\n\n                $(BODY).css(CURSOR, \"\");\n\n                if (wnd.touchScroller) {\n                    wnd.touchScroller.reset();\n                }\n\n                if (e.keyCode == 27) {\n                    wrapper.css(that.initialPosition)\n                        .css(that.initialSize);\n                }\n\n                wnd.trigger(RESIZEEND);\n\n                return false;\n            },\n            destroy: function() {\n                if (this._draggable) {\n                    this._draggable.destroy();\n                }\n\n                this._draggable = this.owner = null;\n            }\n        };\n\n        function WindowDragging(wnd, dragHandle) {\n            var that = this;\n            that.owner = wnd;\n            that._preventDragging = false;\n            that._draggable = new Draggable(wnd.wrapper, {\n                filter: dragHandle,\n                group: wnd.wrapper.id + \"-moving\",\n                dragstart: that.dragstart.bind(that),\n                drag: that.drag.bind(that),\n                dragend: that.dragend.bind(that),\n                dragcancel: that.dragcancel.bind(that)\n            });\n\n            that._draggable.userEvents.stopPropagation = false;\n        }\n\n        WindowDragging.prototype = {\n            dragstart: function(e) {\n                var wnd = this.owner,\n                    draggable = wnd.options.draggable,\n                    element = wnd.element,\n                    actions = element.find(\".k-window-actions\"),\n                    containerOffset = kendo.getOffset(wnd.appendTo);\n\n                this._preventDragging = wnd.trigger(DRAGSTART) || !draggable;\n                if (this._preventDragging || wnd.isMaximized()) {\n                    return;\n                }\n\n                wnd.initialWindowPosition = kendo.getOffset(wnd.wrapper, \"position\");\n\n                wnd.initialPointerPosition = {\n                    left: wnd.options.position.left,\n                    top: wnd.options.position.top\n                };\n\n                wnd.startPosition = {\n                    left: e.x.client - wnd.initialWindowPosition.left,\n                    top: e.y.client - wnd.initialWindowPosition.top\n                };\n\n                wnd._updateBoundaries();\n                if (!wnd.containment) {\n                    if (actions.length > 0) {\n                        wnd.minLeft = outerWidth(actions) + parseInt(actions.css(\"right\"), 10) - outerWidth(element);\n                    } else {\n                        wnd.minLeft = 20 - outerWidth(element); // at least 20px remain visible\n                    }\n\n                    wnd.minLeft -= containerOffset.left;\n                    wnd.minTop = -containerOffset.top;\n                }\n\n                $(templates.overlay).appendTo(wnd.wrapper).css({ opacity: 0 });\n\n                wnd.wrapper.children(KWINDOWRESIZEHANDLES).hide();\n\n                $(BODY).css(CURSOR, e.currentTarget.css(CURSOR));\n            },\n\n            drag: function(e) {\n                var wnd = this.owner;\n                var position = wnd.options.position;\n                var axis = wnd.options.draggable.axis;\n                var left;\n                var top;\n\n                if (this._preventDragging || wnd.isMaximized()) {\n                    return;\n                }\n\n                if (!axis || axis.toLowerCase() === \"x\") {\n                    left = e.x.client - wnd.startPosition.left;\n\n                    if (wnd.containment && !wnd._isPinned) {\n                        left += wnd.containment.scrollLeft();\n                    }\n\n                    position.left = constrain(left, wnd.minLeft, wnd.maxLeft);\n                }\n\n                if (!axis || axis.toLowerCase() === \"y\") {\n                    top = e.y.client - wnd.startPosition.top;\n\n                    if (wnd.containment && !wnd._isPinned) {\n                        top += wnd.containment.scrollTop();\n                    }\n\n                    position.top = constrain(top, wnd.minTop, wnd.maxTop);\n                }\n\n                if (kendo.support.transforms) {\n                    $(wnd.wrapper).css(\n                        \"transform\", \"translate(\" +\n                        (position.left - wnd.initialPointerPosition.left) + \"px, \" +\n                        (position.top - wnd.initialPointerPosition.top) + \"px)\"\n                    );\n                } else {\n                    $(wnd.wrapper).css(position);\n                }\n\n            },\n\n            _finishDrag: function() {\n                var wnd = this.owner;\n\n                wnd.wrapper\n                    .children(KWINDOWRESIZEHANDLES).toggle(!wnd.options.isMinimized).end()\n                    .find(KOVERLAY).remove();\n\n                $(BODY).css(CURSOR, \"\");\n            },\n\n            dragcancel: function(e) {\n                if (this._preventDragging) {\n                    return;\n                }\n                this._finishDrag();\n\n                e.currentTarget.closest(KWINDOW).css(this.owner.initialWindowPosition);\n            },\n\n            dragend: function() {\n                var wnd = this.owner;\n\n                if (this._preventDragging || wnd.isMaximized()) {\n                    return;\n                }\n\n                $(wnd.wrapper)\n                    .css(wnd.options.position)\n                    .css(\"transform\", \"\");\n\n                this._finishDrag();\n\n                wnd.trigger(DRAGEND);\n\n                return false;\n            },\n            destroy: function() {\n                if (this._draggable) {\n                    this._draggable.destroy();\n                }\n\n                this._draggable = this.owner = null;\n            }\n        };\n\n        kendo.ui.plugin(Window);\n\n    })(window.kendo.jQuery);\n"]}